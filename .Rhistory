data = post2[1:50, ],
alpha=.4) +
facet_wrap(~id) +
labs(y="today",
x="yesterday")
count(post2, id)
d %>%
filter(id %in% sample_id) %>%
ggplot( aes( x=PA_lag, y=PA.std ) ) +
geom_point(alpha=.5, shape=20) +
geom_abline( aes(intercept=b_Intercept, slope=b_PA_lag),
data = post2,
alpha=.4) +
facet_wrap(~id) +
labs(y="today",
x="yesterday")
d %>%
filter(id %in% sample_id) %>%
ggplot( aes( x=PA_lag, y=PA.std ) ) +
geom_point(alpha=.5, shape=20) +
geom_abline( aes(intercept=b_Intercept, slope=b_PA_lag, color=id),
data = post2,
alpha=.4) +
facet_wrap(~id) +
labs(y="today",
x="yesterday")
d %>%
filter(id %in% sample_id) %>%
ggplot( aes( x=PA_lag, y=PA.std ) ) +
geom_point(alpha=.5, shape=20) +
geom_abline( aes(intercept=b_Intercept, slope=b_PA_lag, color=as.factor(id)),
data = post2,
alpha=.4) +
facet_wrap(~id) +
labs(y="today",
x="yesterday")
spread_draws(b_Intercept, b_PA_lag, r_id[id, term]) %>%
pivot_wider(names_from = term, values_from = r_id)
m6 %>% spread_draws(b_Intercept, b_PA_lag, r_id[id, term]) %>%
pivot_wider(names_from = term, values_from = r_id)
#| code-fold: true
#|
post2 = m6 %>% spread_draws(b_Intercept, b_PA_lag, r_id[id, term]) %>%
pivot_wider(names_from = term, values_from = r_id) %>%
mutate(intercept = b_Intercept + Intercept,
slope = b_PA_lag + PA_lag) %>%
filter(id %in% sample_id) %>%
with_groups(id, sample_n, 50)
d %>%
filter(id %in% sample_id) %>%
ggplot( aes( x=PA_lag, y=PA.std ) ) +
geom_point(alpha=.5, shape=20) +
geom_abline( aes(intercept=intercept, slope=slope, color=as.factor(id)),
data = post2,
alpha=.4) +
facet_wrap(~id) +
labs(y="today",
x="yesterday")
d %>%
filter(id %in% sample_id) %>%
ggplot( aes( x=PA_lag, y=PA.std ) ) +
geom_point(alpha=.5, shape=20) +
geom_abline( aes(intercept=intercept, slope=slope, color=as.factor(id)),
data = post2,
alpha=.4) +
facet_wrap(~id) +
guides(color="none") +
labs(y="today",
x="yesterday")
d %>%
filter(id %in% sample_id) %>%
ggplot( aes( x=PA_lag, y=PA.std ) ) +
geom_point(alpha=.5, shape=20) +
geom_abline( aes(intercept=intercept, slope=slope, color=as.factor(id)),
data = post2,
alpha=.4) +
geom_abline( aes(intercept=b_Intercept, slope=b_PA_lag),
data = post[1:50, ],
alpha=.4) +
facet_wrap(~id) +
guides(color="none") +
labs(y="today",
x="yesterday")
get_variables(m6)
m6 %>% spread_draws(sd_id__PA_lag) %>%
mean_qi
m6 %>% spread_draws(cor_id__Intercept__PA_lag) %>%
mean_qi
m6 %>% spread_draws(r_id[id, term])
m6 %>% spread_draws(r_id[id, Intercept])
m6 %>% spread_draws(r_id[id, term]) %>%
pivot_wider(names_from = term, values_from = r_id)
m6 %>% spread_draws(r_id[id, term]) %>%
pivot_wider(names_from = term, values_from = r_id) %>%
ungroup() %>%
cor()
m6 %>% spread_draws(r_id[id, term]) %>%
pivot_wider(names_from = term, values_from = r_id) %>%
ungroup() %>%
cor() %>% round(2)
m6 %>% spread_draws(cor_id__Intercept__PA_lag) %>%
mean_qi
m6 %>% spread_draws(r_id[id, term]) %>%
pivot_wider(names_from = term, values_from = r_id)
m6 %>% spread_draws(r_id[id, term]) %>%
pivot_wider(names_from = term, values_from = r_id) %>%
ungroup() %>%
select(.draw, Intercept, PA_lag) %>%
nest(data= -.draw)
m6 %>% spread_draws(r_id[id, term]) %>%
pivot_wider(names_from = term, values_from = r_id) %>%
ungroup() %>%
select(.draw, Intercept, PA_lag)
m6 %>% spread_draws(r_id[id, term]) %>%
pivot_wider(names_from = term, values_from = r_id) %>%
ungroup() %>%
dplyr::select(.draw, Intercept, PA_lag)
m6 %>% spread_draws(r_id[id, term]) %>%
pivot_wider(names_from = term, values_from = r_id) %>%
ungroup() %>%
dplyr::select(.draw, Intercept, PA_lag) %>%
nest(data= -.draw)
m6 %>% spread_draws(r_id[id, term]) %>%
pivot_wider(names_from = term, values_from = r_id) %>%
ungroup() %>%
dplyr::select(.draw, Intercept, PA_lag) %>%
nest(data= -.draw) %>%
mutate(r = map_dbl(data, ~cor(.$Intercept, .$PA_lag)))
m6 %>% spread_draws(r_id[id, term]) %>%
pivot_wider(names_from = term, values_from = r_id) %>%
ungroup() %>%
dplyr::select(.draw, Intercept, PA_lag) %>%
nest(data= -.draw) %>%
mutate(r = map_dbl(data, ~cor(.$Intercept, .$PA_lag))) %>%
mean_qi(r)
m6 %>% spread_draws(r_id[id, term]) %>%
pivot_wider(names_from = term, values_from = r_id)
m6 %>% spread_draws(r_id[id, term]) %>%
pivot_wider(names_from = term, values_from = r_id) %>%
ungroup() %>%
dplyr::select(.draw, Intercept, PA_lag) %>%
nest(data= -.draw) %>%
mutate(r = map_dbl(data, ~cor(.$Intercept, .$PA_lag)))
m5
get_variables(m5)
m5 %>% spread_draws(b_Intercept, b_afternoon, r_cafe[id, term])
m5 %>% spread_draws(b_Intercept, b_afternoon, r_cafe[id, term]) %>%
pivot_wider(names_from = term, values_from = r_cafe)
m5 %>% spread_draws(b_Intercept, b_afternoon, r_cafe[id, term]) %>%
pivot_wider(names_from = term, values_from = r_cafe) %>%
mutate( intercept =b_Intercept + Intercept,
afternoon = b_afternoon + afternoon) %>%
mean_qi(intercept, afternoon)
m5 %>% spread_draws(b_Intercept, b_afternoon, r_cafe[id, term]) %>%
pivot_wider(names_from = term, values_from = r_cafe) %>%
mutate( intercept =b_Intercept + Intercept,
afternoon = b_afternoon + afternoon) %>%
mean_qi(intercept, afternoon) %>%
select(cafe, intercept, afternoon) %>%
round(3)
m5 %>% spread_draws(b_Intercept, b_afternoon, r_cafe[id, term]) %>%
pivot_wider(names_from = term, values_from = r_cafe) %>%
mutate( intercept =b_Intercept + Intercept,
afternoon = b_afternoon + afternoon) %>%
mean_qi(intercept, afternoon) %>%
dplyr::select(cafe, intercept, afternoon) %>%
round(3)
m5 %>% spread_draws(b_Intercept, b_afternoon, r_cafe[id, term]) %>%
pivot_wider(names_from = term, values_from = r_cafe) %>%
mutate( intercept =b_Intercept + Intercept,
afternoon = b_afternoon + afternoon) %>%
mean_qi(intercept, afternoon) %>%
dplyr::select(id, intercept, afternoon) %>%
round(3)
m5 %>% spread_draws(b_Intercept, b_afternoon, r_cafe[id, term]) %>%
pivot_wider(names_from = term, values_from = r_cafe) %>%
mutate( intercept =b_Intercept + Intercept,
afternoon = b_afternoon + afternoon) %>%
mean_qi(intercept, afternoon) %>%
dplyr::select(id, intercept, afternoon) %>%
round(2)
m5 %>% spread_draws(b_Intercept, b_afternoon, r_cafe[id, term]) %>%
pivot_wider(names_from = term, values_from = r_cafe) %>%
mutate( intercept =b_Intercept + Intercept,
afternoon = b_afternoon + afternoon) %>%
mean_qi(intercept, afternoon) %>%
dplyr::select(cafe=id, intercept, afternoon) %>%
round(2)
cafe_lines %>%
dplyr::select(cafe=id, intercept, afternoon) %>%
round(2)
#| code-fold: true
cafe_lines = m5 %>% spread_draws(b_Intercept, b_afternoon, r_cafe[id, term]) %>%
pivot_wider(names_from = term, values_from = r_cafe) %>%
mutate( intercept =b_Intercept + Intercept,
afternoon = b_afternoon + afternoon) %>%
mean_qi(intercept, afternoon)
cafe_lines %>%
dplyr::select(cafe=id, intercept, afternoon) %>%
round(2)
#| code-fold: true
cafe_lines %>%
ggplot( aes(x=intercepts, y=slopes) ) +
geom_point(size = 2)
#| code-fold: true
cafe_lines = m5 %>% spread_draws(b_Intercept, b_afternoon, r_cafe[id, term]) %>%
pivot_wider(names_from = term, values_from = r_cafe) %>%
mutate( intercept =b_Intercept + Intercept,
slope = b_afternoon + afternoon) %>%
mean_qi(intercept, slope)
cafe_lines %>%
dplyr::select(cafe=id, intercept, slope) %>%
round(2)
#| code-fold: true
cafe_lines %>%
ggplot( aes(x=intercept, y=slope) ) +
geom_point(size = 2)
#| code-fold: true
cafe_params %>%
ggplot( aes(x=intercepts, y=slope) ) +
stat_ellipse() +
geom_point(size = 2)
#| code-fold: true
cafe_lines %>%
ggplot( aes(x=intercepts, y=slope) ) +
stat_ellipse() +
geom_point(size = 2)
#| code-fold: true
cafe_params = m5 %>% spread_draws(b_Intercept, b_afternoon, r_cafe[id, term]) %>%
pivot_wider(names_from = term, values_from = r_cafe) %>%
mutate( intercept =b_Intercept + Intercept,
slope = b_afternoon + afternoon) %>%
mean_qi(intercept, slope)
cafe_params %>%
dplyr::select(cafe=id, intercept, slope) %>%
round(2)
#| code-fold: true
cafe_params %>%
ggplot( aes(x=intercept, y=slope) ) +
geom_point(size = 2)
#| code-fold: true
cafe_params %>%
ggplot( aes(x=intercepts, y=slope) ) +
stat_ellipse() +
geom_point(size = 2)
#| code-fold: true
cafe_params = m5 %>% spread_draws(b_Intercept, b_afternoon, r_cafe[id, term]) %>%
pivot_wider(names_from = term, values_from = r_cafe) %>%
mutate( intercepts =b_Intercept + Intercept,
slopes = b_afternoon + afternoon) %>%
mean_qi(intercepts, slopes)
cafe_params %>%
dplyr::select(cafe=id, intercepts, slopes) %>%
round(2)
#| code-fold: true
cafe_params %>%
ggplot( aes(x=intercepts, y=slopes) ) +
geom_point(size = 2)
#| code-fold: true
cafe_params %>%
ggplot( aes(x=intercepts, y=slopes) ) +
stat_ellipse() +
geom_point(size = 2)
#| code-fold: true
cafe_params %>%
ggplot( aes(x=intercepts, y=slopes) ) +
mapply(function(level) {
stat_ellipse(geom  = "polygon", type = "norm",
linewidth = 0, alpha = .1, fill = "#1c5253",
level = level)
},
# enter the levels here
level = c(1:9 / 10, .99)) +
geom_point(size = 2)
#| code-fold: true
cafe_params %>%
mutate(
morning = intercepts,
afternoon = intercepts + slopes
) %>%
ggplot( aes(x=morning, y=afternoon) ) +
mapply(function(level) {
stat_ellipse(geom  = "polygon", type = "norm",
linewidth = 0, alpha = .1, fill = "#1c5253",
level = level)
},
# enter the levels here
level = c(1:9 / 10, .99)) +
geom_point(size = 2)+
labs(x="morning wait time",
y="afternoon wait time")
nd = d3 %>% distinct(cafe, afternoon)
nd
nd = d3 %>%
distinct(cafe, afternoon) %>%
add_epred_draws(m5)
d3 %>%
distinct(cafe, afternoon) %>%
add_epred_draws(m5)
d3 %>%
distinct(cafe, afternoon) %>%
add_epred_draws(m5) %>%
group_by(cafe, afternoon) %>%
mean_qi
d3 %>%
distinct(cafe, afternoon) %>%
add_epred_draws(m5) %>%
group_by(cafe, afternoon) %>%
mean_qi(.epred)
d3 %>%
distinct(cafe, afternoon) %>%
add_epred_draws(m5) %>%
group_by(cafe, afternoon) %>%
mean_qi(.epred) %>%
mutate(
afternoon =case_when(afternoon==1, "afternoon", "morning")
)
d3 %>%
distinct(cafe, afternoon) %>%
add_epred_draws(m5) %>%
group_by(cafe, afternoon) %>%
mean_qi(.epred) %>%
mutate(
afternoon =ifelse(afternoon==1, "afternoon", "morning")
)
d3 %>%
distinct(cafe, afternoon) %>%
add_epred_draws(m5) %>%
group_by(cafe, afternoon) %>%
summarise(wait = mean(.epred))
d3 %>%
distinct(cafe, afternoon) %>%
add_epred_draws(m5) %>%
group_by(cafe, afternoon) %>%
summarise(wait = mean(.epred)) %>%
mutate(afternoon =ifelse(afternoon==1, "afternoon", "morning")) %>%
pivot_wider(names_from = afternoon, wait)
d3 %>%
distinct(cafe, afternoon) %>%
add_epred_draws(m5) %>%
group_by(cafe, afternoon) %>%
summarise(wait = mean(.epred)) %>%
mutate(afternoon =ifelse(afternoon==1, "afternoon", "morning")) %>%
pivot_wider(names_from = afternoon, values_from=wait)
d3 %>%
distinct(cafe, afternoon) %>%
add_epred_draws(m5) %>%
group_by(cafe, afternoon) %>%
summarise(wait = mean(.epred)) %>%
mutate(afternoon =ifelse(afternoon==1, "afternoon", "morning")) %>%
pivot_wider(names_from = afternoon, values_from=wait) %>%
ggplot( aes(x=morning, y=afternoon) ) +
mapply(function(level) {
stat_ellipse(geom  = "polygon", type = "norm",
linewidth = 0, alpha = .1, fill = "#1c5253",
level = level)
},
# enter the levels here
level = c(1:9 / 10, .99)) +
geom_point(size = 2)+
labs(x="morning wait time",
y="afternoon wait time")
d3 %>%
distinct(cafe, afternoon) %>%
add_epred_draws(m5) %>%
group_by(cafe, afternoon) %>%
summarise(wait = mean(.epred))
d3 %>%
distinct(cafe, afternoon) %>%
add_epred_draws(m5) %>%
group_by(cafe, afternoon) %>%
summarise(wait = mean(.epred)) %>%
mutate(afternoon =ifelse(afternoon==1, "afternoon", "morning")) %>%
pivot_wider(names_from = afternoon, values_from=wait)
d3 %>%
distinct(cafe, afternoon) %>%
add_epred_draws(m5) %>%
group_by(cafe, afternoon) %>%
summarise(wait = mean(.epred), .groups = "drop") %>%
mutate(afternoon =ifelse(afternoon==1, "afternoon", "morning")) %>%
pivot_wider(names_from = afternoon, values_from=wait) %>%
ggplot( aes(x=morning, y=afternoon) ) +
mapply(function(level) {
stat_ellipse(geom  = "polygon", type = "norm",
linewidth = 0, alpha = .1, fill = "#1c5253",
level = level)
},
# enter the levels here
level = c(1:9 / 10, .99)) +
geom_point(size = 2)+
labs(x="morning wait time",
y="afternoon wait time")
#| code-fold: true
post = as_draws_df(m5)
rlkj_2 = rethinking::rlkjcorr(nrow(post), K=2, eta=2)
data.frame(prior= rlkj_2[,1,2],
posterior = post$cor_cafe__Intercept__afternoon) %>%
ggplot() +
geom_density(aes(x=prior, color = "prior"), alpha=.3) +
geom_density(aes(x=posterior, color = "posterior"), alpha=.3) +
scale_color_manual(values = c("#1c5253" , "#e07a5f")) +
labs(x="R") +
theme(legend.position = "top")
cor(cafe_params$intercepts, cafe_params$slopes)
m5 %>% spread_draws(cor_cafe__Intercept__afternoon)
m5 %>% spread_draws(cor_cafe__Intercept__afternoon) %>% mean_qi()
# Chunk 1
library(tidyverse)
library(psych)
library(cowplot)
library(patchwork)
library(here)
library(brms)
library(tidybayes)
# Chunk 2
knitr::opts_chunk$set(fig.retina=3, echo=TRUE)
theme_set(theme_cowplot())
default_palettes <- list(
c("#5e8485" , "#0f393a") ,
c("#1c5253" , "#5e8485" , "#0f393a") ,
# palette with 5 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" ) ,
# same palette interpolated to 8 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
# Chunk 3
data_path = "https://raw.githubusercontent.com/sjweston/uobayes/refs/heads/main/files/data/external_data/williams.csv"
d <- read.csv(data_path)
rethinking::precis(d)
# Chunk 4
m1 <- brm(
data=d,
family=gaussian,
PA.std ~ 1 + (1 | id),
prior = c( prior(normal(0, 1.5), class=Intercept),
prior(exponential(1), class=sd),
prior(exponential(1), class=sigma)),
iter=4000, warmup=1000, chains=4, cores=4, seed=9, #running this longer so it mixes
control = list(adapt_delta =.99),
file=here("files/models/m71.2")
)
# Chunk 5
m2 <- brm(
data=d,
family=gaussian,
PA.std ~ 1 + day + (1 | id),
prior = c( prior(normal(.50, .25), class=Intercept),
prior(normal(0, 1), class=b), #new prior for new term
prior(exponential(1), class=sd),
prior(exponential(1), class=sigma)),
iter=2000, warmup=1000, chains=4, cores=4, seed=9,
file=here("files/models/m72.2")
)
# Chunk 6
m2
# Chunk 7
get_variables(m2)
# Chunk 8
#| code-fold: true
set.seed(9)
sample_id = sample(unique(d$id), replace=F, size = 20)
distinct(d, id, day) %>%
filter(id %in% sample_id) %>%
add_epred_draws(m2) %>%
mean_qi() %>%
ggplot( aes(x=day, y=.epred, color=as.factor(id))) +
geom_line() +
guides(color="none") +
labs(x="day",y="PA.std")
d$female = ifelse(d$female == 1, "female", "male")
m3 <- brm(
data=d,
family=gaussian,
PA.std ~ 0 + day + female + (1 | id),
prior = c( prior(normal(0, 1), class=b),
prior(exponential(1), class=sd),
prior(exponential(1), class=sigma)),
iter=5000, warmup=1000, chains=4, cores=4, seed=9,
file=here("files/models/m72.3")
)
m3
m2
m3 <- brm(
data=d,
family=gaussian,
PA.std ~ 0 + day + (1 | id) + (1 | female),
prior = c( prior(normal(0, 1), class=b),
prior(exponential(1), class=sd),
prior(exponential(1), class=sigma)),
iter=5000, warmup=1000, chains=4, cores=4, seed=9
)
m3 <- brm(
data=d,
family=gaussian,
PA.std ~ 1 + day + (1 | female/id) ,
prior = c( prior(normal(0, 1), class=b),
prior(exponential(1), class=sd),
prior(exponential(1), class=sigma)),
iter=5000, warmup=1000, chains=4, cores=4, seed=9
)
data(chimpanzees, package="rethinking")
d2 <- chimpanzees
rethinking::precis(d2)
unique(d2$actor)
unique(d2$block)
unique(d2$prosoc_left)
unique(d2$condition)
d2
View(d2)
d2 %>% count(actor, block)
