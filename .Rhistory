guides(color="none") +
labs(x="day",y="PA.std")
d$female = ifelse(d$female == 1, "female", "male")
m3 <- brm(
data=d,
family=gaussian,
PA.std ~ 0 + day + female + (1 | id),
prior = c( prior(normal(0, 1), class=b),
prior(exponential(1), class=sd),
prior(exponential(1), class=sigma)),
iter=5000, warmup=1000, chains=4, cores=4, seed=9,
file=here("files/models/m72.3")
)
m3
m2
m3 <- brm(
data=d,
family=gaussian,
PA.std ~ 0 + day + (1 | id) + (1 | female),
prior = c( prior(normal(0, 1), class=b),
prior(exponential(1), class=sd),
prior(exponential(1), class=sigma)),
iter=5000, warmup=1000, chains=4, cores=4, seed=9
)
m3 <- brm(
data=d,
family=gaussian,
PA.std ~ 1 + day + (1 | female/id) ,
prior = c( prior(normal(0, 1), class=b),
prior(exponential(1), class=sd),
prior(exponential(1), class=sigma)),
iter=5000, warmup=1000, chains=4, cores=4, seed=9
)
data(chimpanzees, package="rethinking")
d2 <- chimpanzees
rethinking::precis(d2)
unique(d2$actor)
unique(d2$block)
unique(d2$prosoc_left)
unique(d2$condition)
d2
View(d2)
d2 %>% count(actor, block)
# Chunk 1
library(tidyverse)
library(psych)
library(cowplot)
library(patchwork)
library(here)
library(brms)
library(tidybayes)
# Chunk 2
knitr::opts_chunk$set(fig.retina=3, echo=TRUE)
theme_set(theme_cowplot())
default_palettes <- list(
c("#5e8485" , "#0f393a") ,
c("#1c5253" , "#5e8485" , "#0f393a") ,
# palette with 5 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" ) ,
# same palette interpolated to 8 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
# Chunk 3
d <- read_csv("https://raw.githubusercontent.com/sjweston/uobayes/refs/heads/main/files/data/external_data/williams.csv")
# scaled time variable
d <- d %>% mutate(day01 = (day - 2) / max((day - 2)))
distinct(d, id) %>% count()
d %>%
count(id) %>%
summarise(median = median(n),
min = min(n),
max = max(n))
# Chunk 4
#| code-fold: true
d %>%
count(id) %>%
ggplot(aes(x = n)) +
geom_histogram(fill = "#1c5253", color = "white") +
scale_x_continuous("number of days", limits = c(0, NA))
# Chunk 5
rethinking::precis(d)
# Chunk 6
#| code-fold: true
set.seed(14)
d %>%
nest(data=-id) %>%
slice_sample(n = 6) %>%
unnest(data) %>%
ggplot(aes(x = day, y = NA_lag)) +
geom_line(color = "grey") +
geom_point(color = "#1c5253", size = 1/2) +
geom_line(aes(y = PA_lag), color = "darkgrey") +
geom_point(aes(y = PA_lag), color = "#e07a5f", size = 1/2) +
ylab("affect (standardized)") +
facet_wrap(~ id)
# Chunk 7
m1 <-
brm(data = d,
family = gaussian,
NA.std ~ 1 + NA_lag + PA_lag + (1 + NA_lag + PA_lag | id),
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 1), class = b),
prior(exponential(1), class = sd),
prior(exponential(1), class = sigma),
prior(lkj(2), class = cor)),
iter = 5000, warmup = 1000, chains = 4, cores = 4,
seed = 14,
file = here("files/models/m82.1"))
# Chunk 8
bf_na = bf(NA.std ~ 1 + NA_lag + PA_lag + (1 + NA_lag + PA_lag  | c | id))
bf_pa = bf(PA.std ~ 1 + NA_lag + PA_lag + (1 + NA_lag + PA_lag  | c | id))
m2 <-
brm(data = d,
family = gaussian,
bf_na + bf_pa + set_rescor(TRUE),
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 1), class = b),
prior(lkj(2), class = cor)),
iter = 5000, warmup = 1000, chains = 4, cores = 4,
seed = 14,
file = here("files/models/m82.2"))
# Chunk 9
m2
# Chunk 10
#| code-fold: true
# Compute person-level means and residuals
d_resid <- d %>%
group_by(id) %>%
mutate(
N_A_mean = mean(NA.std, na.rm = TRUE),
P_A_mean = mean(PA.std, na.rm = TRUE),
N_A_within = NA.std - N_A_mean,
P_A_within = PA.std - P_A_mean
) %>%
ungroup()
between_df <- d_resid %>%
dplyr::select(id, N_A_mean, P_A_mean) %>%
distinct()
total_cor   <- cor(d$NA.std, d$PA.std, use="complete.obs")
between_cor <- cor(between_df$N_A_mean, between_df$P_A_mean, use = "complete.obs")
within_cor  <- cor(d_resid$N_A_within, d_resid$P_A_within, use = "complete.obs")
residual_cor <- m2 %>% spread_draws(rescor__NAstd__PAstd) %>% mean_qi
tibble(
Level = c("Total", "Between-person", "Within-person", "Residual"),
Correlation = c(total_cor, between_cor, within_cor, as.numeric(residual_cor[1,1])))
# Chunk 11
#|code-fold: true
#|
m2_post = m2 %>% spread_draws(b_NAstd_Intercept, b_PAstd_Intercept,
b_NAstd_NA_lag, b_NAstd_PA_lag,
b_PAstd_NA_lag, b_PAstd_PA_lag,
r_id__NAstd[id, term],
r_id__PAstd[id, term])
m2_post %>%
pivot_longer(starts_with("r_id"),
names_to = "outcome",
names_prefix = "r_id__",
values_to = "value") %>%
mutate(term=ifelse(term=="Intercept", "intercept", "slope")) %>%
pivot_wider(names_from = term, values_from = term) %>%
ungroup() %>% select(-.chain, -.draw)
m2_post %>%
pivot_longer(starts_with("r_id"),
names_to = "outcome",
names_prefix = "r_id__",
values_to = "value") %>%
mutate(term=ifelse(term=="Intercept", "intercept", "slope")) %>%
pivot_wider(names_from = term, values_from = term) %>%
ungroup() %>% select(-.chain, -.draw) %>% mutate(across(where(is.numeric), round, 2))
m2_post %>%
pivot_longer(starts_with("r_id"),
names_to = "outcome",
names_prefix = "r_id__",
values_to = "value") %>%
mutate(term=ifelse(term=="Intercept", "intercept", "slope")) %>%
pivot_wider(names_from = term, values_from = term) %>%
# just for presenting in class: remove extra cols and round digits
ungroup() %>% select(-.chain, -.draw) %>% mutate(across(where(is.numeric), \(x) round(x, 2)))
m2_post %>%
pivot_longer(starts_with("r_id"),
names_to = "outcome",
names_prefix = "r_id__",
values_to = "value") %>%
mutate(term=ifelse(term=="Intercept", "intercept", "slope")) %>%
pivot_wider(names_from = term, values_from = term) %>%
# just for presenting in class: remove extra cols and round digits
ungroup() %>% select(-.chain, -.iteration) %>% mutate(across(where(is.numeric), \(x) round(x, 2)))
m2_post %>%
pivot_longer(starts_with("r_id"),
names_to = "outcome",
names_prefix = "r_id__",
values_to = "value") %>%
mutate(term=ifelse(term=="Intercept", "intercept", "slope")) %>%
pivot_wider(names_from = term, values_from = term)
m2_post %>%
select(.draw, starts_with("r_id")) %>%
pivot_longer(starts_with("r_id"),
names_to = "outcome",
names_prefix = "r_id__",
values_to = "value") %>%
mutate(term=ifelse(term=="Intercept", "intercept", "slope")) %>%
pivot_wider(names_from = term, values_from = term) %>%
# just for presenting in class: remove extra cols and round digits
ungroup() %>% select(-.chain, -.iteration) %>% mutate(across(where(is.numeric), \(x) round(x, 2)))
m2_post %>%
select(.draw, starts_with("r_id")) %>%
pivot_longer(starts_with("r_id"),
names_to = "outcome",
names_prefix = "r_id__",
values_to = "value") %>%
mutate(term=ifelse(term=="Intercept", "intercept", "slope")) %>%
pivot_wider(names_from = term, values_from = term) %>%
# just for presenting in class: remove extra cols and round digits
%>% mutate(across(where(is.numeric), \(x) round(x, 2)))
m2_post %>%
select(.draw, starts_with("r_id")) %>%
pivot_longer(starts_with("r_id"),
names_to = "outcome",
names_prefix = "r_id__",
values_to = "value") %>%
mutate(term=ifelse(term=="Intercept", "intercept", "slope")) %>%
pivot_wider(names_from = term, values_from = term) %>%
# just for presenting in class: remove extra cols and round digits
mutate(across(where(is.numeric), \(x) round(x, 2)))
m2_post %>%
select(.draw, starts_with("r_id")) %>%
pivot_longer(starts_with("r_id"),
names_to = "outcome",
names_prefix = "r_id__",
values_to = "value") %>%
mutate(term=ifelse(term=="Intercept", "intercept", "slope")) %>%
pivot_wider(names_from = term, values_from = value) %>%
# just for presenting in class: round digits
mutate(across(where(is.numeric), \(x) round(x, 2)))
m2_post %>%
select(.draw, starts_with("r_id")) %>%
pivot_longer(starts_with("r_id"),
names_to = "outcome",
names_prefix = "r_id__",
values_to = "value") %>%
mutate(term=ifelse(term=="Intercept", "intercept", "slope")) %>% View()
m2_post %>%
select(id, .draw, starts_with("r_id"))
m2_post %>%
select(id, .draw, starts_with("r_id")) %>%
pivot_longer(starts_with("r_id"),
names_to = "outcome",
names_prefix = "r_id__",
values_to = "value")
m2_post %>%
select(id, .draw, starts_with("r_id")) %>%
pivot_longer(starts_with("r_id"),
names_to = "outcome",
names_prefix = "r_id__",
values_to = "value") %>%
pivot_wider(names_from = term, values_from = value) %>%
# just for presenting in class: round digits
mutate(across(where(is.numeric), \(x) round(x, 2)))
m2 %>% gather_draws(`r_id__`, regex = T)
m2 %>% gather_draws(`r_id__.*`, regex = T)
m2 %>% gather_draws(r_id__NAstd[id, term], r_id__PAstd[id, term])
m2 %>% gather_draws(r_id__NAstd[id, term], r_id__PAstd[id, term]) %>%
mutate(.variable=str_remove(.variable, "r_id__")) %>%
pivot_wider(names_from = .variable, values_from = .value)
m2 %>%
gather_draws(r_id__NAstd[id, term], r_id__PAstd[id, term]) %>%
mutate(.variable=str_remove(.variable, "r_id__")) %>%
pivot_wider(names_from = .variable, values_from = .value) %>%
arrange(.draw, id, term)
#| code-fold: true
m2 %>%
gather_draws(r_id__NAstd[id, term], r_id__PAstd[id, term]) %>%
mutate(.variable=str_remove(.variable, "r_id__")) %>%
pivot_wider(names_from = .variable, values_from = .value) %>%
# just for presenting to class
arrange(.draw, id, term) %>% selcet(-.chain, -.iteration)
#| code-fold: true
m2 %>%
gather_draws(r_id__NAstd[id, term], r_id__PAstd[id, term]) %>%
mutate(.variable=str_remove(.variable, "r_id__")) %>%
pivot_wider(names_from = .variable, values_from = .value) %>%
# just for presenting to class
arrange(.draw, id, term) %>% select(-.chain, -.iteration)
#| code-fold: true
m2 %>%
gather_draws(r_id__NAstd[id, term], r_id__PAstd[id, term]) %>%
mutate(.variable=str_remove(.variable, "r_id__")) %>%
pivot_wider(names_from = .variable, values_from = .value) %>%
# just for presenting to class
arrange(.draw, id, term) %>% select(-.chain, -.iteration) %>%
mutate(across(c(NAstd, PAstd), \(x) round(x, 2)))
#| code-fold: true
#|
nd = data.frame(
PA_lag = seq(from = min(d$PA_lag), to=max(d$PA_lag), length.out=50),
NA_lag = 0,
id = max(d$id) + 1
)
nd %>% add_epred_draws(m2, allow_new_levels=T) %>%
filter(.draw <= 50) %>%
ggplot(aes(x = PA_lag, y = .epred)) +
geom_line(aes(group = .draw, color = .category), alpha=.2) +
scale_color_manual(values = c("#1c5253" , "#e07a5f")) +
facet_wrap(~.category) +
guides(color="none") +
labs(x = "Positive Affect (lagged)", y = "Expected score")
post = as_draws_df(m2)
post
names(post)
post = spread_draws(m2, `cor_.*`, regex=T)
post
post_cor = gather_draws(m2, `cor_.*`, regex=T)
post_cor
post_cor = gather_draws(m2, `cor_.*`, regex=T) %>%
mean_qi()
post_cor
gather_draws(m2, `cor_.*`, regex=T) %>%
mean_qi() %>%
separate(.variable, into=c("stat", "v1", "v2"), sep="__")
gather_draws(m2, `cor_.*`, regex=T) %>%
mean_qi() %>% View()
#| code-fold: true
gather_draws(m2, `cor_.*`, regex=T) %>%
mean_qi() %>% View()
separate(.variable, into=c("stat", "v1", "v2"), sep="__")
# Compute person-level means and residuals
d_resid <- d %>%
group_by(id) %>%
mutate(
N_A_mean = mean(NA.std, na.rm = TRUE),
P_A_mean = mean(PA.std, na.rm = TRUE),
N_A_within = NA.std - N_A_mean,
P_A_within = PA.std - P_A_mean
) %>%
ungroup()
between_df <- d_resid %>%
dplyr::select(id, N_A_mean, P_A_mean) %>%
distinct()
total_cor   <- cor(d$NA.std, d$PA.std, use="complete.obs")
between_cor <- cor(between_df$N_A_mean, between_df$P_A_mean, use = "complete.obs")
within_cor  <- cor(d_resid$N_A_within, d_resid$P_A_within, use = "complete.obs")
residual_cor <- m2 %>% spread_draws(rescor__NAstd__PAstd) %>% mean_qi
tibble(
Level = c("Total", "Between-person", "Within-person", "Residual"),
Correlation = c(total_cor, between_cor, within_cor, as.numeric(residual_cor[1,1])))
between_cor
post = as_draws_df(m2)
post$cor_id__NAstd_Intercept__PAstd_Intercept
post$cor_id__NAstd_Intercept__PAstd_Intercept %>% mean_qi()
get_variables(m2)
post %>%
select(between = cor_id__NAstd_Intercept__NAstd_NA_lag,
rescor__NAstd__PAstd) %>%
mean_qi()
post %>%
select(between = cor_id__NAstd_Intercept__NAstd_NA_lag,
rescor__NAstd__PAstd)
post %>%
select(between = cor_id__NAstd_Intercept__NAstd_NA_lag,
rescor__NAstd__PAstd) %>%
pivot_longer(everything()) %>%
mean_qi()
post %>%
select(cor_id__NAstd_Intercept__NAstd_NA_lag,
rescor__NAstd__PAstd) %>%
pivot_longer(everything()) %>%
mean_qi()
post %>%
select(cor_id__NAstd_Intercept__NAstd_NA_lag,
rescor__NAstd__PAstd) %>%
pivot_longer(everything()) %>%
group_by(name) %>%
mean_qi()
post %>%
select(between = cor_id__NAstd_Intercept__NAstd_NA_lag,
within = rescor__NAstd__PAstd) %>%
pivot_longer(everything()) %>%
group_by(name) %>%
mean_qi()
bf_na = bf(NA.std ~ 1 + (1  | c | id))
bf_pa = bf(PA.std ~ 1 + (1  | c | id))
m2 <-
brm(data = d,
family = gaussian,
bf_na + bf_pa + set_rescor(TRUE),
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 1), class = b),
prior(lkj(2), class = cor)),
iter = 5000, warmup = 1000, chains = 4, cores = 4,
seed = 14,
file = here("files/models/m82.2b"))
source("~/.active-rstudio-document", echo=TRUE)
m2 <-
brm(data = d,
family = gaussian,
bf_na + bf_pa + set_rescor(TRUE),
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(lkj(2), class = cor)),
iter = 5000, warmup = 1000, chains = 4, cores = 4,
seed = 14,
file = here("files/models/m82.2"))
m2
m5 <-brm(
data = d,
family = gaussian,
bf(
# location
P_A.std ~ 1 + day + P_A.lag + N_A.lag + steps.pm*steps.pmd +
(1 + day + steps.pmd | c | record_id),
# scale (the c  in |c| allows for correlation between location and scale)
sigma ~ 1 + P_A.lag + N_A.lag + steps.pm*steps.pmd + (1 + steps.pmd | c | record_id)
),
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 1), class = b),
prior(exponential(1), class = sd),
prior(normal(0,1), class = Intercept, dpar=sigma),
prior(exponential(1), class = sd, dpar=sigma),
prior(lkj(2), class = cor)),
iter = 5000, warmup = 1000, chains = 4, cores = 4,
seed = 14,
file = here("files/models/m82.5"))
names(d)
m5 <-brm(
data = d,
family = gaussian,
bf(
# location
PA.std ~ 1 + day + PA_lag + NA_lag + steps.pm*steps.pmd +
(1 + day + steps.pmd | c | record_id),
# scale (the c  in |c| allows for correlation between location and scale)
sigma ~ 1 + PA_lag + NA_lag + steps.pm*steps.pmd + (1 + steps.pmd | c | record_id)
),
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 1), class = b),
prior(exponential(1), class = sd),
prior(normal(0,1), class = Intercept, dpar=sigma),
prior(exponential(1), class = sd, dpar=sigma),
prior(lkj(2), class = cor)),
iter = 5000, warmup = 1000, chains = 4, cores = 4,
seed = 14,
file = here("files/models/m82.5"))
m5 <-brm(
data = d,
family = gaussian,
bf(
# location
PA.std ~ 1 + day + PA_lag + NA_lag + steps.pm*steps.pmd +
(1 + day + steps.pmd | c | id),
# scale (the c  in |c| allows for correlation between location and scale)
sigma ~ 1 + PA_lag + NA_lag + steps.pm*steps.pmd + (1 + steps.pmd | c | id)
),
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 1), class = b),
prior(exponential(1), class = sd),
prior(normal(0,1), class = Intercept, dpar=sigma),
prior(exponential(1), class = sd, dpar=sigma),
prior(lkj(2), class = cor)),
iter = 5000, warmup = 1000, chains = 4, cores = 4,
seed = 14,
file = here("files/models/m82.5"))
m5 <-brm(
data = d,
family = gaussian,
bf(
# location
PA.std ~ 1 + day + PA_lag + NA_lag + steps.pm*steps.pmd +
(1 + day + steps.pmd | c | id),
# scale (the c  in |c| allows for correlation between location and scale)
sigma ~ 1 + PA_lag + NA_lag + steps.pm*steps.pmd + (1 + steps.pmd | c | id)
),
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 1), class = b),
prior(exponential(1), class = sd),
prior(normal(0,1), class = Intercept, dpar=sigma),
prior(exponential(1), class = sd, dpar=sigma),
prior(lkj(2), class = cor)),
iter = 5000, warmup = 1000, chains = 4, cores = 4,
seed = 14,
file = here("files/models/m82.5"))
m5
bf_na = bf(NA.std ~ 1 + (1  | c | id))
bf_pa = bf(PA.std ~ 1 + (1  | c | id))
m4 <-
brm(data = d,
family = gaussian,
bf_na + bf_pa + set_rescor(TRUE),
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(lkj(2), class = cor)),
iter = 5000, warmup = 1000, chains = 4, cores = 4,
seed = 14,
file = here("files/models/m82.4"))
m4 <-
brm(data = d,
family = gaussian,
bf(
# location
PA.std ~ 1 + (1 | c | id),
# scale (the c  in |c| allows for correlation between location and scale)
sigma ~ 1 + (1 | c | id)
),
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(exponential(1), class = sd),
prior(normal(0,1), class = Intercept, dpar=sigma),
prior(exponential(1), class = sd, dpar=sigma),
prior(lkj(2), class = cor)),
iter = 5000, warmup = 1000, chains = 4, cores = 4,
seed = 14,
file = here("files/models/m82.4"))
m4
?brm
