fill = "Lambda") +
theme_cowplot() +
scale_fill_manual(values = c("#1c5253",  "#e07a5f", "#f2cc8f"))
# Chunk 8
# generative model, basic mediator scenario
set.seed(0319)
N <- 1000 # number of applicants
# even gender distribution
G <- sample( 1:2, size=N, replace=TRUE )
# gender 1 tends to apply to department 1, 2 to 2
D <- rbinom( n=N, size=1, prob=ifelse( G==1 , 0.3 , 0.8 ) ) + 1
# matrix of acceptance rates
accept_rate <- matrix( c(0.5, 0.2, 0.1, 0.3), nrow=2)
# simulate acceptance
A <- rbinom( n=N, size=1, accept_rate[D,G])
dat <- data.frame(D=as.character(D), G=as.character(G), A)
# Chunk 9
m1 = brm(
data = dat,
family = bernoulli,
A  ~ 0 + G,
prior = c( prior( normal(0, 1), class = b)),
iter = 5000, warmup = 1000, chains = 4,
seed = 3,
file = here("files/models/51.1")
)
# Chunk 10
m1
# Chunk 11
m2 = brm(
data = dat,
family = bernoulli,
A  ~ G*D,
prior = c( prior( normal(0, 1), class = Intercept),
prior( normal(0, 1), class = b)),
iter = 5000, warmup = 1000, chains = 4,
seed = 3,
file = here("files/models/51.2")
)
# Chunk 12
m2
# Chunk 13
#| code-fold: true
posterior_summary(m1) %>% round(2)
# Chunk 14
#| code-fold: true
posterior_summary(m2) %>% round(2)
# Chunk 15
new_dat = expand.grid(G = c("1", "2"),
D = c("1", "2"))
m1 %>% add_epred_draws(newdata = new_dat) %>%
head()
m1 %>% add_epred_draws(newdata = new_dat) %>%
median_qi
m2 %>% add_epred_draws(newdata = new_dat) %>%
median_qi
m2 %>% add_epred_draws(newdata = new_dat) %>%
mean_hdi()
dat %>% count(A, D, G)
dat %>% count(A, D, G) %>% with_groups(c(G,D), mutate, total=sum(A))
dat %>% count(A, D, G) %>% with_groups(c(G,D), mutate, total=sum(n))
dat %>% count(A, D, G) %>% with_groups(c(G,D), mutate, total=sum(n)) %>% mutate(prob = n/total) %>% filter(A==1)
m1 %>% add_predicted_draws(newdata = new_dat) %>%
head
m4 <- brm(
data = UCBadmit,
family = binomial,
admit | trials(applications) ~ gender*dept,
prior = c( prior( normal(0, 2), class = Intercept),
prior( normal(0, 2), class = b) ),
iter = 5000, warmup = 1000, chains = 4,
seed = 3,
file = here("files/models/51.4")
)
data(UCBadmit, package = "rethinking")
UCBadmit$gender = UCBadmit$applicant.gender
m3 <- brm(
data = UCBadmit,
family = binomial,
admit | trials(applications) ~ 0 + gender,
prior = c( prior( normal(0, 2), class = b) ),
iter = 5000, warmup = 1000, chains = 4,
seed = 3,
file = here("files/models/51.3")
)
spread_draws(m4, starts_with("b_"))
UCBadmit %>% add_epred_draws(m3) %>%
ungroup() %>%
select(dept, gender, applications, admit, reject, .draw, .epred)
UCBadmit %>% add_epred_draws(m3) %>%
mean_qi
UCBadmit %>% add_epred_draws(m3) %>%
ungroup() %>%
mean_qi(.epred)
UCBadmit %>% add_epred_draws(m3) %>%
ungroup()
UCBadmit %>% add_epred_draws(m3) %>%
ungroup() %>%
group_by(gender) %>%
mean_qi(.epred)
UCBadmit
UCBadmit %>%
distinct(gender, dept, applications)
library(loo)
m3 <- add_criterion(m3, criterion = "loo")
m4 <- add_criterion(m4, criterion = "loo")
loo_compare(m3, m4)
loo_compare(m3, m4) %>% print(simplify=F)
loo_compare(m3, m4) %>% print(simplify=F)
# Chunk 1: setup
knitr::opts_chunk$set(fig.align = "center")
# Chunk 2
# Load required libraries
library(brms)
library(tidyverse)
library(tidybayes)
library(patchwork)
# Load and examine the data
data(eagles, package = "MASS")
d <- eagles
rethinking::precis(d)
d %>% count(P, V, A)
# Fit the model using brms
m1 <- brm(
data = eagles,
family = binomial,
y | trials(n) ~ P + V + A,
prior = c(
prior(normal(0, 1.5), class = Intercept),
prior(normal(0, 0.5), class = b)
),
iter = 2000, warmup = 1000, chains = 4, cores = 4,
seed = 11,
file = here("files/models/hw5.1")
)
library(here)
# Chunk 1: setup
knitr::opts_chunk$set(fig.align = "center")
# Chunk 2
# Load required libraries
library(brms)
library(tidyverse)
library(tidybayes)
library(patchwork)
library(here)
# Load and examine the data
data(eagles, package = "MASS")
d <- eagles
rethinking::precis(d)
d %>% count(P, V, A)
# Fit the model using brms
m1 <- brm(
data = eagles,
family = binomial,
y | trials(n) ~ P + V + A,
prior = c(
prior(normal(0, 1.5), class = Intercept),
prior(normal(0, 0.5), class = b)
),
iter = 2000, warmup = 1000, chains = 4, cores = 4,
seed = 11,
file = here("files/models/hw5.1")
)
# Display model summary
summary(m1)
# Chunk 3
# Plot posterior distributions of coefficients
m1 %>%
gather_draws(`b_.*`, regex = T) %>% # this will get any variable that starts with b_
median_qi(.width = .89)
m1 %>%
gather_draws(`b_.*`, regex = T) %>%
ggplot( aes( x=.value, y=.variable ) ) +
stat_halfeye() +
geom_vline(aes(xintercept=0), linetype="dashed") +
labs(x = "Coefficient Est", y=NULL)
# Chunk 4
nd = distinct(eagles, V, P, A) %>%
mutate(n = 1e5)
# expected probs
post_epred = nd %>%
add_epred_draws(m1) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob)
p1 = post_epred%>%
pivot_wider(names_from = P, values_from = prob) %>%
mutate(diff = L-S) %>%
ggplot(aes( x=diff )) +
stat_halfeye( fill = "#1c5253") +
geom_vline(aes(xintercept = 0), linetype ="dashed") +
labs(x = "Difference in probability", y = NULL, title = "Pirate (Large-Small)")
p2 = post_epred%>%
pivot_wider(names_from = V, values_from = prob) %>%
mutate(diff = L-S) %>%
ggplot(aes( x=diff )) +
stat_halfeye( fill = "#e07a5f") +
geom_vline(aes(xintercept = 0), linetype ="dashed") +
labs(x = "Difference in probability", y = NULL, title = "Victim (Large-Small)")
p3 = post_epred%>%
pivot_wider(names_from = A, values_from = prob) %>%
mutate(diff = A-I) %>%
ggplot(aes( x=diff )) +
stat_halfeye( fill = "#3d405b") +
geom_vline(aes(xintercept = 0), linetype ="dashed") +
labs(x = "Difference in probability", y = NULL, title = "Pirate (Adult-Infant)")
p1 + p2 + p3
epred_draws(m1, newdata = d)
epred_draws(m1, newdata = d) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
ggplot(aes( x=prob, y=.row))
epred_draws(m1, newdata = d) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
ggplot(aes( x=prob, y=.row)) +
stat_halfeye()
epred_draws(m1, newdata = d) %>%
mutate(prob = .epred/n) %>%
group_by(.row) %>%
mean_qi(prob)
epred_draws(m1, newdata = d) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
ggplot(aes( y=prob, x=.row)) +
stat_halfeye()
epred_draws(m1, newdata = d) %>%
ungroup() %>%
ggplot(aes( y=.epred, x=.row)) +
stat_halfeye()
epred_draws(m1, newdata = d) %>%
ungroup() %>%
ggplot(aes( y=.epred, x=.row)) +
stat_halfeye() +
labs(x = "row", y = "counts")
# Fit the interaction model
m2 <- brm(
data = d,
family = binomial,
y | trials(n) ~ P + V + A + P:A,
prior = c(
prior(normal(0, 1.5), class = Intercept),
prior(normal(0, 0.5), class = b)
),
iter = 2000, warmup = 1000, chains = 4, cores = 4,
seed = 11
)
# Compare models using WAIC
waic(m1, m2)
# Compare models using WAIC
waic(m1, m2) %>% print(simplify=F)
# expected probs
post_epred = nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob)
post_epred
# expected probs
post_epred = nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
unite(PA, P, A, sep="_")
post_epred
# expected probs
post_epred = nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
unite(PA, P, A, sep="_") %>%
pivot_wider(names_from = PA, values_from = prob)
# expected probs
nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
unite(PA, P, A, sep="_") %>%
pivot_wider(names_from = PA, values_from = prob)
# expected probs
nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
ggplot( aes( x=P, y=prob, fill=A ) ) +
stat_halfeye()
# expected probs
nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
ggplot( aes( y=P, x=prob, fill=A ) ) +
stat_halfeye()
# expected probs
nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob)
# expected probs
nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
pivot_wider(names_from = "V", values_from = prob, names_prefix = "V")
# expected probs
nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
pivot_wider(names_from = "V", values_from = prob, names_prefix = "V") %>%
mutate(avg = mean(VL, VS))
# expected probs
nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
pivot_wider(names_from = "V", values_from = prob, names_prefix = "V") %>%
mutate(avg = map2_dbl(VS, VL, mean))
# expected probs
nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
pivot_wider(names_from = "V", values_from = prob, names_prefix = "V") %>%
mutate(avg = map2_dbl(c(VS, VL), mean))
# expected probs
nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
pivot_wider(names_from = "V", values_from = prob, names_prefix = "V") %>%
mutate(avg = map2_dbl(.y = c(VS, VL), .f=mean))
# expected probs
nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
pivot_wider(names_from = "V", values_from = prob, names_prefix = "V") %>%
mutate(avg = map2_dbl(.x=VS, .y=VL, .f=mean))
# expected probs
nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
pivot_wider(names_from = "V", values_from = prob, names_prefix = "V")
# expected probs
nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
pivot_wider(names_from = "V",
names_prefix = "V",
values_from = prob) %>%
mutate(avg = (VL+VS)/2)
# expected probs
nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
pivot_wider(names_from = "V",
names_prefix = "V",
values_from = prob) %>%
mutate(avg = mean(c(VS, VL)))
# expected probs
nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
pivot_wider(names_from = "V",
names_prefix = "V",
values_from = prob) %>%
mutate(avg = (VL+VS)/2) %>%
ggplot(aes( x = avg, y = P, fill = A)) +
stat_halfeye()
# expected probs
nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
pivot_wider(names_from = "V",
names_prefix = "V",
values_from = prob) %>%
mutate(avg = (VL+VS)/2) %>%
ggplot(aes( x = avg, y = P, fill = A)) +
stat_halfeye(alpha=.5)
# expected probs
nd %>%
add_epred_draws(m2) %>%
ungroup() %>%
mutate(prob = .epred/n) %>%
dplyr::select(V, P, A, .draw, prob) %>%
pivot_wider(names_from = "V",
names_prefix = "V",
values_from = prob) %>%
mutate(avg = (VL+VS)/2) %>%
ggplot(aes( x = avg, y = P, fill = A)) +
stat_halfeye(alpha=.7) +
scale_fill_manual(values = c("#1c5253" , "#e07a5f"))
# Fit the interaction model
m2 <- brm(
data = d,
family = binomial,
y | trials(n) ~ P + V + A + P:A,
prior = c(
prior(normal(0, 1.5), class = Intercept),
prior(normal(0, 0.5), class = b)
),
iter = 2000, warmup = 1000, chains = 4, cores = 4,
seed = 11,
file = here("files/models/hw5.2")
)
# Chunk 1: setup
knitr::opts_chunk$set(fig.align = "center")
# Chunk 2
library(here)
library(tidyverse)
library(brms)
library(tidybayes)
library(loo)
d <- rethinking::sim_happiness(seed = 1990, N_years = 1000)
d2 <- d[d$age >= 18, ]
d2$A <- rethinking::standardize(d2$age)
d2$mid <- as.factor(d2$married + 1)
m6a <- brm(
data=d2,
family=gaussian,
bf( happiness ~ 0 + a + b*A,
a ~ 0 + mid,
b ~ 0 + mid,
nl = TRUE),
prior = c( prior(normal(0, .50), nlpar=a),
prior(normal(0, .25), nlpar=b),
prior(exponential(1), class=sigma)),
iter=2000, warmup=1000, seed=9, chains=1,
file = here("files/models/31.6a")
)
m7 <- brm(
data=d2,
family=gaussian,
happiness ~ A,
prior = c( prior(normal(0, .50), class=Intercept),
prior(normal(0, .25), class=b),
prior(exponential(1), class=sigma)),
iter=2000, warmup=1000, seed=9, chains=1,
file = here("files/models/31.7")
)
m6a <- add_criterion(m6a, criterion = "loo")
m7 <- add_criterion(m7, criterion = "loo")
m6a <- add_criterion(m6a, criterion = "waic")
m7 <- add_criterion(m7, criterion = "waic")
# Chunk 3
loo_compare(m6a, m7, criterion = "loo") %>% print(simplify=F)
loo_compare(m6a, m7, criterion = "waic") %>% print(simplify=F)
# Chunk 4
data(Laffer, package = "rethinking")
d <- Laffer
d <- d %>%
mutate(across(everything(), rethinking::standardize))
m_straight = brm(
data=d,
family = gaussian,
tax_revenue ~ tax_rate,
prior = c( prior(normal(0,.1), class=Intercept),
prior(normal(0,.5), class=b),
prior(exponential(1), class=sigma)),
iter=3000, warmup=1000, seed=9, chains=4,
file = here("files/models/hw4.1")
)
m_curve = brm(
data=d,
family = gaussian,
tax_revenue ~ tax_rate + I(tax_rate^2),
prior = c( prior(normal(0,.1), class=Intercept),
prior(normal(0,.5), class=b),
prior(exponential(1), class=sigma)),
iter=3000, warmup=1000, seed=9, chains=4,
file = here("files/models/hw4.2")
)
m_straight <- add_criterion(m_straight, criterion = "loo")
m_straight <- add_criterion(m_straight, criterion = "waic")
m_curve <- add_criterion(m_curve, criterion = "loo")
m_curve <- add_criterion(m_curve, criterion = "waic")
# Chunk 5
loo_compare(m_straight, m_curve, criterion = "loo") %>% print(simplify=F)
loo_compare(m_straight, m_curve, criterion = "waic") %>% print(simplify=F)
# Chunk 6
(which_norway = which( d$tax_revenue == max(d$tax_revenue) ))
loo(m_straight)$pointwise[ which_norway, ]
loo(m_curve)$pointwise[ which_norway, ]
waic(m_straight)$pointwise[ which_norway, ]
waic(m_curve)$pointwise[ which_norway, ]
loo(m_straight)$pointwise
loo(m_straight)$pointwise[ which_norway, ]
loo(m_straight)$pointwise[ which_norway, "influence_pareto_k"]
loo(m_straight)
