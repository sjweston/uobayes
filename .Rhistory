data=post[1:20, ],
alpha=.2
) +
geom_abline(
aes(intercept=b_a_sex2, slope=b_b_sex2, color="2"),
data=post[1:20, ],
alpha=.2
) +
scale_x_continuous("height(feet)",
breaks=xlabs-mean(d$height),
labels=xlabs) +
facet_wrap(~sex)
rethinking::precis(milk)
milk$mass_c = milk$mass- mean(milk$mass)
m4 <- brm(
data = milk,
family = gaussian,
bf(weight ~ 0 + a + b*mass_c,
a ~ 0 + clade_id,
b ~ 0 + clade_id,
nl = TRUE),
prior = c(prior( normal(0,.5), class=b, nlpar = a),
prior( normal(0,.5), class=b, nlpar = b),
prior( exponential(1),  class=sigma)),
iter = 2000, warmup = 1000, seed = 3, chains=1,
file = here("files/models/22.4")
)
milk$mass_c = milk$mass- mean(milk$mass)
m4 <- brm(
data = milk,
family = gaussian,
bf(K ~ 0 + a + b*mass_c,
a ~ 0 + clade_id,
b ~ 0 + clade_id,
nl = TRUE),
prior = c(prior( normal(0,.5), class=b, nlpar = a),
prior( normal(0,.5), class=b, nlpar = b),
prior( exponential(1),  class=sigma)),
iter = 2000, warmup = 1000, seed = 3, chains=1,
file = here("files/models/22.4")
)
posterior_summary(m1)
posterior_summary(m4)
d %>%
ggplot(aes(x=mass_c, y=K)) +
geom_point(aes(color=clade_id))
milk %>%
ggplot(aes(x=mass_c, y=K)) +
geom_point(aes(color=clade_id))
head(post)
post = as_draws_df(m4)
head(post)
milk %>%
ggplot(aes(x=mass_c, y=K)) +
geom_point(aes(color=clade_id)) +
geom_abline(
aes(intercept=b_a_clade_id1, slope=b_b_clade_id1, color="1"),
data=post[1:20, ],
alpha=.2
) +
geom_abline(
aes(intercept=b_a_clade_id2, slope=b_b_clade_id2, color="2"),
data=post[1:20, ],
alpha=.2
)
#| code-fold: true
post = as_draws_df(m4)
milk %>%
ggplot(aes(x=mass_c, y=K)) +
geom_point(aes(color=clade_id)) +
geom_abline(
aes(intercept=b_a_clade_id1, slope=b_b_clade_id1, color="1"),
data=post[1:20, ],
alpha=.2
) +
geom_abline(
aes(intercept=b_a_clade_id2, slope=b_b_clade_id2, color="2"),
data=post[1:20, ],
alpha=.2
) +
geom_abline(
aes(intercept=b_a_clade_id3, slope=b_b_clade_id3, color="3"),
data=post[1:20, ],
alpha=.2
) +
geom_abline(
aes(intercept=b_a_clade_id4, slope=b_b_clade_id4, color="4"),
data=post[1:20, ],
alpha=.2
)
milk %>%
ggplot(aes(x=mass_c, y=K)) +
geom_point(aes(color=clade_id)) +
geom_abline(
aes(intercept=b_a_clade_id1, slope=b_b_clade_id1, color="1"),
data=post[1:20, ],
alpha=.2
) +
geom_abline(
aes(intercept=b_a_clade_id2, slope=b_b_clade_id2, color="2"),
data=post[1:20, ],
alpha=.2
) +
geom_abline(
aes(intercept=b_a_clade_id3, slope=b_b_clade_id3, color="3"),
data=post[1:20, ],
alpha=.2
) +
geom_abline(
aes(intercept=b_a_clade_id4, slope=b_b_clade_id4, color="4"),
data=post[1:20, ],
alpha=.2
) +
facet_wrap(~clade_id)
post = as_draws_df(m3)
post
d %>%
ggplot(aes(x=height_c, y=weight)) +
geom_point(aes(color=sex)) +
geom_abline(
aes(intercept=b_a_sex1, slope=b_b_sex1, color="1"),
data=post[1:20, ],
alpha=.2
) +
geom_abline(
aes(intercept=b_a_sex2, slope=b_b_sex2, color="2"),
data=post[1:20, ],
alpha=.2
) +
scale_x_continuous("height(feet)",
breaks=xlabs-mean(d$height),
labels=xlabs) +
scale_color_discrete(values=c("1","2")) +
facet_wrap(~sex)
d %>%
ggplot(aes(x=height_c, y=weight)) +
geom_point(aes(color=sex)) +
geom_abline(
aes(intercept=b_a_sex1, slope=b_b_sex1, color="1"),
data=post[1:20, ],
alpha=.2
) +
geom_abline(
aes(intercept=b_a_sex2, slope=b_b_sex2, color="2"),
data=post[1:20, ],
alpha=.2
) +
scale_x_continuous("height(feet)",
breaks=xlabs-mean(d$height),
labels=xlabs) +
scale_color_discrete(sex=c("1","2")) +
facet_wrap(~sex)
post
post = as_draws_df(m3) %>%
pivot_longer(starts_with("b"),
names_to = c("parameter","sex"),
names_sep = 3)
as_draws_df(m3) %>%
pivot_longer(starts_with("b"),
names_to = c("parameter","sex"),
names_sep = 3)
post = as_draws_df(m3) %>%
pivot_longer(starts_with("b"),
names_to = c("parameter","sex"),
names_sep = 3) %>%
mutate(sex = str_extract(sex, "[0-9]"))
post = as_draws_df(m3) %>%
pivot_longer(starts_with("b"),
names_to = c("parameter","sex"),
names_sep = 3) %>%
mutate(sex = str_extract(sex, "[0-9]")) %>%
pivot_wider(names_from = parameter, values_from = value)
d %>%
ggplot(aes(x=height_c, y=weight)) +
geom_point(aes(color=sex)) +
geom_abline(
aes(intercept=b_a_sex1, slope=b_b_sex1, color=sex),
data=post[1:40, ],
alpha=.2
)
d %>%
ggplot(aes(x=height_c, y=weight)) +
geom_point(aes(color=sex)) +
geom_abline(
aes(intercept=b_a, slope=b_b, color=sex),
data=post[1:40, ],
alpha=.2
)
d %>%
ggplot(aes(x=height_c, y=weight)) +
geom_point(aes(color=sex)) +
geom_abline(
aes(intercept=b_a, slope=b_b, color=sex),
data=post[1:40, ],
alpha=.2
) +
facet_wrap(~sex)
post
post = as_draws_df(m4) %>%
pivot_longer(starts_with("b"),
names_to = c("parameter","clade_id"),
names_sep = 3) %>%
mutate(sex = str_extract(sex, "[0-9]")) %>%
pivot_wider(names_from = parameter, values_from = value)
#| code-fold: true
post = as_draws_df(m4) %>%
pivot_longer(starts_with("b"),
names_to = c("parameter","clade_id"),
names_sep = 3) %>%
mutate(sex = str_extract(clade_id, "[0-9]")) %>%
pivot_wider(names_from = parameter, values_from = value)
milk %>%
ggplot(aes(x=mass_c, y=K)) +
geom_point(aes(color=clade_id)) +
geom_abline(
aes(intercept=b_a_clade_id1, slope=b_b_clade_id1, color="1"),
data=post[1:20, ],
alpha=.2
) +
geom_abline(
aes(intercept=b_a_clade_id2, slope=b_b_clade_id2, color="2"),
data=post[1:20, ],
alpha=.2
) +
geom_abline(
aes(intercept=b_a_clade_id3, slope=b_b_clade_id3, color="3"),
data=post[1:20, ],
alpha=.2
) +
geom_abline(
aes(intercept=b_a_clade_id4, slope=b_b_clade_id4, color="4"),
data=post[1:20, ],
alpha=.2
) +
facet_wrap(~clade_id)
post = as_draws_df(m4) %>%
pivot_longer(starts_with("b"),
names_to = c("parameter","clade_id"),
names_sep = 3) %>%
mutate(sex = str_extract(clade_id, "[0-9]")) %>%
pivot_wider(names_from = parameter, values_from = value)
post
milk %>%
ggplot(aes(x=mass_c, y=K)) +
geom_point(aes(color=clade_id)) +
geom_abline(
aes(intercept=b_a, slope=b_b, color=clade_id),
data=post[1:80, ],
alpha=.2
) +
facet_wrap(~clade_id)
#| code-fold: true
post = as_draws_df(m4) %>%
pivot_longer(starts_with("b"),
names_to = c("parameter","clade_id"),
names_sep = 3) %>%
mutate(clade_id = str_extract(clade_id, "[0-9]")) %>%
pivot_wider(names_from = parameter, values_from = value)
milk %>%
ggplot(aes(x=mass_c, y=K)) +
geom_point(aes(color=clade_id)) +
geom_abline(
aes(intercept=b_a, slope=b_b, color=clade_id),
data=post[1:80, ],
alpha=.2
) +
facet_wrap(~clade_id)
milk %>%
ggplot(aes(x=mass_c, y=K)) +
geom_point(aes(color=clade_id)) +
geom_abline(
aes(intercept=b_a, slope=b_b, color=clade_id),
data=post[1:80, ],
alpha=.2
) +
facet_wrap(~clade_id) +
guides(color="none")
library(targets)
library(tarchetypes)
suppressPackageStartupMessages(library(tidyverse))
class_number <- "PSY 607"
base_url <- "https://uobayes.netlify.app/"
page_suffix <- ".html"
options(tidyverse.quiet = TRUE,
dplyr.summarise.inform = FALSE)
tar_option_set(
packages = c("tibble"),
format = "rds",
workspace_on_error = TRUE,
error = "null"
)
# here::here() returns an absolute path, which then gets stored in tar_meta and
# becomes computer-specific (i.e. /Users/andrew/Research/blah/thing.Rmd).
# There's no way to get a relative path directly out of here::here(), but
# fs::path_rel() works fine with it (see
# https://github.com/r-lib/here/issues/36#issuecomment-530894167)
here_rel <- function(...) {fs::path_rel(here::here(...))}
# Load functions for the pipeline
source("R/tar_slides.R")
# source("R/tar_projects.R")
# source("R/tar_data.R")
source("R/tar_calendar.R")
# THE MAIN PIPELINE ----
list(
## Run all the data building and copying targets ----
# save_data,
#
# ### Link all these data building and copying targets into individual dependencies ----
# tar_combine(copy_data, tar_select_targets(save_data, starts_with("copy_"))),
# tar_combine(build_data, tar_select_targets(save_data, starts_with("data_"))),
## xaringan stuff ----
#
### Knit xaringan slides ----
#
# Use dynamic branching to get a list of all .Rmd files in slides/ and knit them
#
# The main index.qmd page loads xaringan_slides as a target to link it as a dependency
tar_files(xaringan_files, list.files(here_rel("slides"),
pattern = "\\.qmd",
full.names = TRUE)),
tar_target(xaringan_slides,
render_xaringan(xaringan_files),
pattern = map(xaringan_files),
format = "file"),
### Convert xaringan HTML slides to PDF ----
#
# Use dynamic branching to get a list of all knitted slide .html files and
# convert them to PDF with pagedown
#
# The main index.qmd page loads xaringan_pdfs as a target to link it as a dependency
tar_files(xaringan_html_files, {
xaringan_slides
list.files(here_rel("slides"),
pattern = "\\.html",
full.names = TRUE)
}),
tar_target(xaringan_pdfs,
xaringan_to_pdf(xaringan_html_files),
pattern = map(xaringan_html_files),
format = "file"),
## Project folders ----
### Zip up each project folder ----
#
# Get a list of all folders in the project folder, create dynamic branches,
# then create a target for each that runs the custom zippy() function, which
# uses system2() to zip the folder and returns a path to keep targets happy
# with `format = "file"`
#
# The main index.qmd page loads project_zips as a target to link it as a dependency
#
# Use tar_force() and always run this because {targets} seems to overly cache
# the results of list.dirs()
# tar_force(project_paths,
#           list.dirs(here_rel("projects"),
#                     full.names = FALSE, recursive = FALSE),
#           force = TRUE),
# tar_target(project_files, project_paths, pattern = map(project_paths)),
# tar_target(project_zips, {
#   copy_data
#   build_data
#   zippy(project_files, "projects")
# },
# pattern = map(project_files),
# format = "file"),
## Class schedule calendar ----
tar_target(schedule_file, here_rel("data", "schedule.csv"), format = "file"),
tar_target(schedule_page_data, build_schedule_for_page(schedule_file)),
tar_target(schedule_ical_data,
build_ical(schedule_file, base_url, page_suffix, class_number)),
tar_target(schedule_ical_file,
save_ical(schedule_ical_data,
here_rel("files", "schedule.ics")),
format = "file")
## Knit the README ----
# tar_target(workflow_graph, tar_mermaid(targets_only = TRUE, outdated = FALSE,
#                                        legend = FALSE, color = FALSE)),
# tar_render(readme, here_rel("README.Rmd"))
## Build site ----
# tar_quarto(site, path = "."),
#
#
# ## Upload site ----
# tar_target(deploy_script, here_rel("deploy.sh"), format = "file"),
# tar_target(deploy_site, {
#   # Force dependencies
#   site
#   # Run the deploy script
#   if (Sys.getenv("UPLOAD_WEBSITES") == "TRUE") processx::run(paste0("./", deploy_script))
# })
)
targets::tar_make()
targets::tar_make()
# Chunk 1
library(tidyverse)
library(cowplot)
library(brms)
library(tidybayes)
library(patchwork)
library(here)
# Chunk 2
knitr::opts_chunk$set(fig.retina=3, echo=TRUE)
theme_set(theme_cowplot())
default_palettes <- list(
c("#5e8485" , "#0f393a") ,
c("#1c5253" , "#5e8485" , "#0f393a") ,
# palette with 5 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" ) ,
# same palette interpolated to 8 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
# Chunk 3
data("Howell1", package = "rethinking")
d <- Howell1
library(measurements)
d$height <- conv_unit(d$height, from = "cm", to = "feet")
d$weight <- conv_unit(d$weight, from = "kg", to = "lbs")
d <- d[d$age >= 18, ]
d$sex <- ifelse(d$male == 1, 2, 1) # 1 = female, 2 = male
d$sex <- factor(d$sex)
head(d[, c("male", "sex")])
m1 <- brm(
data = d,
family = gaussian,
bf(weight ~ 0 + a,
a ~ sex,
nl = TRUE),
prior = c(prior( normal(130, 20), class=b),
prior( uniform(0, 25),  class=sigma, ub=25)),
iter = 2000, warmup = 1000, seed = 3, chains=1,
file = here("files/models/22.1")
)
m1 <- brm(
data = d,
family = gaussian,
bf(weight ~ 0 + a,
a ~ sex,
nl = TRUE),
prior = c(prior( normal(130, 20), class=b, nlpar = a),
prior( uniform(0, 25),  class=sigma, ub=25)),
iter = 2000, warmup = 1000, seed = 3, chains=1,
file = here("files/models/22.1")
)
posterior_summary(m1)
m1 <- brm(
data = d,
family = gaussian,
bf(weight ~ 0 + a,
a ~ 0 + sex,
nl = TRUE),
prior = c(prior( normal(130, 20), class=b, nlpar = a),
prior( uniform(0, 25),  class=sigma, ub=25)),
iter = 2000, warmup = 1000, seed = 3, chains=1,
file = here("files/models/22.1")
)
posterior_summary(m1)
post = as_draws_df(m1)
post %>%
mutate(diff_fm = b_a_sex1 - b_a_sex2) %>%
pivot_longer(cols = c(b_a_sex1:sigma, diff_fm)) %>%
group_by(name) %>%
mean_qi(value, .width = .89)
p1 <- post %>%
pivot_longer(starts_with("b")) %>%
mutate(sex = ifelse(str_detect(name, "1"), "female", "male")) %>%
ggplot(aes(x=value, color = sex)) +
geom_density(linewidth = 2) +
labs(x = "weight(lbs)")
p2 <- post %>%
mutate(diff_fm = b_sex1 - b_sex2) %>%
ggplot(aes(x=diff_fm)) +
geom_density(linewidth = 2) +
labs(x = "difference in weight(lbs)")
p1 <- post %>%
pivot_longer(starts_with("b")) %>%
mutate(sex = ifelse(str_detect(name, "1"), "female", "male")) %>%
ggplot(aes(x=value, color = sex)) +
geom_density(linewidth = 2) +
labs(x = "weight(lbs)")
p2 <- post %>%
mutate(diff_fm = b_a_sex1 - b_a_sex2) %>%
ggplot(aes(x=diff_fm)) +
geom_density(linewidth = 2) +
labs(x = "difference in weight(lbs)")
( p1 | p2)
pred_f  <- rnorm(nrow(post), mean = post$b_a_sex1, sd = post$sigma )
pred_m  <- rnorm(nrow(post), mean = post$b_a_sex2, sd = post$sigma )
pred_post = data.frame(pred_f, pred_m) %>%
mutate(diff = pred_f-pred_m)
head(pred_post)
nd = distinct(d, sex)
pred_all = predicted_draws(object=m1, newdata=nd) %>%
ungroup %>% select(-.row) %>%
pivot_wider(names_from = sex, names_prefix = "sex", values_from = .prediction) %>%
mutate(diff = sex1-sex2)
head(pred_all)
m2 <- brm(
data=milk,
family=gaussian,
bf(K ~ 0 + a,
a ~ 0 + clade_id,
nl = TRUE),
prior = c( prior(normal(0,.5), class=b, nlpar=a),
prior(exponential(1), class=sigma)),
iter = 2000, warmup = 1000, seed = 3, chains=1,
file = here("files/models/22.2")
)
post = as_draws_df(m1)
head(post)
source(here::here("R", "slide-things.R"))
slide_buttons("/slides/lecture02-1")
