str(d)
library(measurements)
d$height <- conv_unit(d$height, from = "cm", to = "feet")
d$weight <- conv_unit(d$weight, from = "kg", to = "lbs")
rethinking::precis(d)
d2 <- d[ d$age >= 18, ]
d2$height_c = d2$height - mean(d2$height)
#| code-line-numbers: "6"
m4e = brm(
data = d2,
family = gaussian,
weight ~ 1 + height_c,
prior = c(prior( normal(130,20), class=Intercept),
prior( normal(-5,5),   class=b),
prior( uniform(0,25),  class=sigma, lb=0, ub=25)),
iter = 5000, warmup = 1000, seed = 3, chains=1,
file=here("files/models/m21.4e"))
posterior_summary(m4e)
m4 = brm(
data = d2,
family = gaussian,
weight ~ 1 + height_c,
prior = c(prior( normal(130,20), class=Intercept),
prior( uniform(0,25),   class=b),
prior( uniform(0,25),  class=sigma, lb=0, ub=25)),
iter = 5000, warmup = 1000, seed = 3, chains=1,
file=here("files/models/m21.4"))
posterior_summary(m4)
posterior_summary(m4e)
# Chunk 1
library(here)
library(tidyverse)
library(cowplot)
library(brms)
library(tidybayes)
library(patchwork)
# Chunk 2
# here's a bunch of stuff I include at the beginning of each qmd file.
# it's mostly setting the color palette for figures, but it also controls the default code chunk option (showing you, i.e., echo) and setting the figure quality to ensure that it looks nice
knitr::opts_chunk$set(fig.retina=3, echo=TRUE)
theme_set(theme_cowplot())
default_palettes <- list(
c("#5e8485" , "#0f393a") ,
c("#1c5253" , "#5e8485" , "#0f393a") ,
# palette with 5 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" ) ,
# same palette interpolated to 8 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
source("~/.active-rstudio-document", echo=TRUE)
posterior_summary(m1)
m1 <-
brm(data = list(w = 6),                             # <1>
family = binomial(link = "identity"),           # <2>
w | trials(9) ~ 0 + Intercept,                  # <3>
prior(uniform(0, 1), class = b),                # <4>
iter = 5000, warmup = 1000, seed = 3, chains=1, # <5>
file = here("files/models/m21.1"))              # <6>
m1 <-
brm(data = list(w = 6),                             # <1>
family = binomial(link = "identity"),           # <2>
w | trials(9) ~ 0 + Intercept,                  # <3>
prior(uniform(0, 1), class = b),                # <4>
iter = 5000, warmup = 1000, seed = 3, chains=1, # <5>
file = here("files/models/m21.1"))              # <6>
m1 <-
brm(data = list(w = 6),                             # <1>
family = binomial(link = "identity"),           # <2>
w | trials(9) ~ 0 + Intercept,                  # <3>
prior(uniform(0, 1), class = b),   # <4>
iter = 5000, warmup = 1000, seed = 3, chains=1)              # <6>
ppd = posterior_predict(m1)
dim(ppd)
# Chunk 1
library(tidyverse)
library(cowplot)
library(rethinking)
library(patchwork)
# Chunk 2
knitr::opts_chunk$set(fig.retina=3, echo=TRUE)
theme_set(theme_cowplot())
default_palettes <- list(
c("#5e8485" , "#0f393a") ,
c("#1c5253" , "#5e8485" , "#0f393a") ,
# palette with 5 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" ) ,
# same palette interpolated to 8 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
# Chunk 3
data("Howell1")
d <- Howell1
library(measurements)
d$height <- conv_unit(d$height, from = "cm", to = "feet")
d$weight <- conv_unit(d$weight, from = "kg", to = "lbs")
d <- d[d$age >= 18, ]
d$sex <- ifelse(d$male == 1, 2, 1) # 1 = female, 2 = male
head(d[, c("male", "sex")])
library(brms)
str(d)
d$sex <- ifelse(d$male == 1, "male", "female") # 1 = female, 2 = male
m1 <- brm(
data = d,
family = gaussian,
weight ~ 0 + sex,
prior = c(prior( normal(130, 20), class = b),
prior( uniform(0, 50), class = sigma)),
iter = 5000, warmup = 1000, seed = 3, chains=1
)
posterior_summary(m1)
data("Howell1", package = "rethinking")
d <- Howell1
library(measurements)
d$height <- conv_unit(d$height, from = "cm", to = "feet")
d$weight <- conv_unit(d$weight, from = "kg", to = "lbs")
d <- d[d$age >= 18, ]
d$sex <- ifelse(d$male == 1, "male", "female") # 1 = female, 2 = male
head(d[, c("male", "sex")])
psych::describe(d)
d$sex <- ifelse(d$male == 1, 2, 1) # 1 = female, 2 = male
m1 <- brm(
data = d,
family = gaussian,
weight ~ 0 + sex,
prior = c(prior( normal(130, 20), class = b),
prior( uniform(0, 50),  class = sigma)),
iter = 5000, warmup = 1000, seed = 3, chains=1
)
posterior_summary(m1)
d$sex <- factor(d$sex)
m1 <- brm(
data = d,
family = gaussian,
weight ~ 0 + sex,
prior = c(prior( normal(130, 20), class = b),
prior( uniform(0, 50),  class = sigma)),
iter = 5000, warmup = 1000, seed = 3, chains=1
)
posterior_summary(m1)
m1 <- brm(
data = d,
family = gaussian,
weight ~ 0 + sex,
prior = c(prior( normal(130, 20), class = b),
prior( uniform(0, 50),  class = sigma)),
iter = 5000, warmup = 1000, seed = 3, chains=4
)
posterior_summary(m1)
m1 <- brm(
data = d,
family = gaussian,
weight ~ 0 + sex,
prior = c(prior( normal(130, 20), class = b),
prior( uniform(0, 50),  class = sigma)),
iter = 2000, warmup = 1000, seed = 3, chains=4
)
posterior_summary(m1)
m1 <- brm(
data = d,
family = gaussian,
weight ~ 0 + sex,
prior = c(prior( normal(130, 20), class=b),
prior( uniform(0, 50),  class=sigma, ub=50)),
iter = 2000, warmup = 1000, seed = 3, chains=4
)
posterior_summary(m1)
m1 <- brm(
data = d,
family = gaussian,
weight ~ 0 + sex,
prior = c(prior( normal(130, 20), class=b),
prior( uniform(0, 25),  class=sigma, ub=50)),
iter = 2000, warmup = 1000, seed = 3, chains=1
)
posterior_summary(m1)
m1 <- brm(
data = d,
family = gaussian,
weight ~ 0 + sex,
prior = c(prior( normal(130, 20), class=b),
prior( uniform(0, 25),  class=sigma, ub=25)),
iter = 2000, warmup = 1000, seed = 3, chains=1,
file = here("files/model/22.1")
)
library(here)
m1 <- brm(
data = d,
family = gaussian,
weight ~ 0 + sex,
prior = c(prior( normal(130, 20), class=b),
prior( uniform(0, 25),  class=sigma, ub=25)),
iter = 2000, warmup = 1000, seed = 3, chains=1,
file = here("files/model/22.1")
)
m1 <- brm(
data = d,
family = gaussian,
weight ~ 0 + sex,
prior = c(prior( normal(130, 20), class=b),
prior( uniform(0, 25),  class=sigma, ub=25)),
iter = 2000, warmup = 1000, seed = 3, chains=1,
file = here("files/models/22.1")
)
posterior_summary(m1)
as_draws_df(m1)
as_draws_df(m1) %>%
mutate(diff_fm = b_sex1 - b_sex2)
as_draws_df(m1) %>%
mutate(diff_fm = b_sex1 - b_sex2) %>%
pivot_longer(cols = c(b_sex1:sigma, diff_fm))
as_draws_df(m1) %>%
mutate(diff_fm = b_sex1 - b_sex2) %>%
pivot_longer(cols = c(b_sex1:sigma, diff_fm)) %>%
group_by(name)
as_draws_df(m1) %>%
mutate(diff_fm = b_sex1 - b_sex2) %>%
pivot_longer(cols = c(b_sex1:sigma, diff_fm)) %>%
group_by(name) %>%
mean_qi(value, .width = .89)
library(tidybayes)
as_draws_df(m1) %>%
mutate(diff_fm = b_sex1 - b_sex2) %>%
pivot_longer(cols = c(b_sex1:sigma, diff_fm)) %>%
group_by(name) %>%
mean_qi(value, .width = .89)
as_draws_df(m1)
as_draws_df(m1) %>%
pivot_longer(starts_with("b"))
as_draws_df(m1) %>%
pivot_longer(starts_with("b")) %>%
mutate(sex = ifelse(str_detect(name, "1"), "female", "male"))
p1 <- as_draws_df(m1) %>%
pivot_longer(starts_with("b")) %>%
mutate(sex = ifelse(str_detect(name, "1"), "female", "male")) %>%
ggplot(aes(x=value, color = sex)) +
geom_density(linewidth = 2) +
labs(x = "weight(lbs)")
p1
p2 <- as_draws_df(m1) %>%
mutate(diff_fm = b_sex1 - b_sex2) %>%
ggplot(aes(x=diff_fm)) +
geom_density(linewidth = 2) +
labs(x = "difference in weight(lbs)")
p2
( p1 | p2)
ppd = posterior_predict(m1)
ppd
dim(ppd)
post = as_draws_df(m1)
post %>%
mutate(diff_fm = b_sex1 - b_sex2) %>%
pivot_longer(cols = c(b_sex1:sigma, diff_fm)) %>%
group_by(name) %>%
mean_qi(value, .width = .89)
post
pred_f  <- rnorm(1e4, mean = post$b_sex1, sd = post$sigma )
pred_m  <- rnorm(1e4, mean = post$b_sex2, sd = post$sigma )
pred_post = data.frame(pred_f, pred_m) %>%
mutate(diff = pred_f-pred_m)
# plot distributions
p1 <- pred_post %>% pivot_longer(starts_with("pred")) %>%
mutate(sex = ifelse(name == "pred_f", "female", "male")) %>%
ggplot(aes(x = value, color = sex)) +
geom_density(linewidth = 2) +
labs(x = "weight (lbs)")
p1
# plot difference
# Compute density first
density_data <- density(pred_post$diff)
# Convert to a tibble for plotting
density_df <- tibble(
x = density_data$x,
y = density_data$y,
fill_group = ifelse(x < 0, "male", "female")  # Define fill condition
)
# Plot with area fill
p2 <- ggplot(density_df, aes(x = x, y = y, fill = fill_group)) +
geom_area() +  # Adjust transparency if needed
geom_line(linewidth = 1.2, color = "black") +  # Keep one continuous curve
labs(x = "Difference in weight (F-M)", y = "density") +
guides(fill = "none")
(p1 | p2)
posterior_table(m1)
test = posterior_table(m1)
str(test)
nd = data.frame(sex = factor(c("1", "2")))
predicted_draws(m1, newdata = nd)
nd = distinct(d, sex)
ned
nd
head(pred_post)
head(pred_all)
nd = distinct(d, sex)
pred_all = predicted_draws(object=m1, newdata=nd)
head(pred_all)
pred_all = predicted_draws(object=m1, newdata=nd) %>%
pivot_wider(names_from = sex, values_from = .prediction)
pred_all
pred_all = predicted_draws(object=m1, newdata=nd) %>% View()
pred_all = predicted_draws(object=m1, newdata=nd) %>%
select(-.row) %>%
pivot_wider(names_from = sex, values_from = .prediction)
head(pred_all)
pred_all = predicted_draws(object=m1, newdata=nd) %>%
ungroup %>% select(-.row) %>%
pivot_wider(names_from = sex, values_from = .prediction)
head(pred_all)
nd = distinct(d, sex)
pred_all = predicted_draws(object=m1, newdata=nd) %>%
ungroup %>% select(-.row) %>%
pivot_wider(names_from = sex, names_prefix = "sex", values_from = .prediction)
head(pred_all)
nd = distinct(d, sex)
pred_all = predicted_draws(object=m1, newdata=nd) %>%
ungroup %>% select(-.row) %>%
pivot_wider(names_from = sex, names_prefix = "sex", values_from = .prediction) %>%
mutate(diff = sex1-sex2)
head(pred_all)
#| code-fold: true
# plot distributions using the first version
p1 <- pred_post %>% pivot_longer(starts_with("pred")) %>%
mutate(sex = ifelse(name == "pred_f", "female", "male")) %>%
ggplot(aes(x = value, color = sex)) +
geom_density(linewidth = 2) +
labs(x = "weight (lbs)")
# plot difference distribution using the second version
# Compute density first
density_data <- density(pred_all$diff)
ggplot(pred_all, aes(x=diff)) +
geom_density()
source("~/.active-rstudio-document", echo=TRUE)
pred_all %>%
mutate(col = ifelse(diff < 0,"male","female")) %>%
ggplot(aes(x=diff,group=1)) +
geom_density(aes(fill=col))
source("~/.active-rstudio-document", echo=TRUE)
pred_all %>%
mutate(col = ifelse(diff < 0,"male","female")) %>%
ggplot(aes(x=diff)) +
geom_histogram(aes(y=..density.., fill=col), bins = 100)
# plot difference distribution using the second version
# Compute density first
density_data <- density(pred_all$diff)
# Convert to a tibble for plotting
density_df <- tibble(
x = density_data$x,
y = density_data$y,
fill_group = ifelse(x < 0, "male", "female")  # Define fill condition
)
# Plot with area fill
p2 <- ggplot(density_df, aes(x = x, y = y, fill = fill_group)) +
geom_area() +  # Adjust transparency if needed
geom_line(linewidth = 1.2, color = "black") +  # Keep one continuous curve
labs(x = "Difference in weight (F-M)", y = "density") +
guides(fill = "none")
(p1 | p2)
data("milk", package="rethinking")
str(milk)
milk$clade_id <- as.integer(milk$clade)
milk$clade_id <- as.factor(milk$clade_id)
milk$K <- standardize(milk$kcal.per.g)
m2 <- brm(
data=milk,
family=gaussian,
K ~ 0 + clade_id,
prior = c( prior(normal(0,.5), class=b),
prior(exponential(1), class=sigma)),
iter = 2000, warmup = 1000, seed = 3, chains=1,
file = here("files/models/22.2")
)
posterior_summary(m2)
as_draws_df(m2)
gather_draws(m2)
as_draws_df(m2) %>%
pivot_longer(starts_with("b"))
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
mutate(
clade = str_extract(clade, "[0-9]")
)
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
mutate(
clade = str_extract(name, "[0-9]")
)
ste(milk)
str(milk)
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
mutate(
clade = str_extract(name, "[0-9]"),
clade = factor(clade, labels = levels(milk$clade))
)
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
mutate(
clade = str_extract(name, "[0-9]"),
clade = factor(clade, labels = levels(milk$clade))
) %>%
ggplot(y = clade, x = value) +
stat_halfeye()
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
mutate(
clade = str_extract(name, "[0-9]"),
clade = factor(clade, labels = levels(milk$clade))
)
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
mutate(
clade = str_extract(name, "[0-9]"),
clade = as.numeric(clade)
) %>%
ggplot(y = clade, x = value) +
stat_halfeye()
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
mutate(
clade = str_extract(name, "[0-9]"),
clade = as.numeric(clade)
)
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
# mutate(
#   clade = str_extract(name, "[0-9]"),
#   clade = as.numeric(clade)
# ) %>%
ggplot(y = name, x = value) +
stat_halfeye()
as_draws_df(m2) %>%
pivot_longer(starts_with("b"))
library(tidybayes)
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
# mutate(
#   clade = str_extract(name, "[0-9]"),
#   clade = as.numeric(clade)
# ) %>%
ggplot(y = name, x = value) +
stat_halfeye()
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
# mutate(
#   clade = str_extract(name, "[0-9]"),
#   clade = as.numeric(clade)
# ) %>%
ggplot(y = name, x = value) +
tidybayes::stat_halfeye()
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
# mutate(
#   clade = str_extract(name, "[0-9]"),
#   clade = as.numeric(clade)
# ) %>%
ggplot(y = name, x = value) +
geom_point()
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
mutate(
clade = str_extract(name, "[0-9]"),
clade = as.numeric(clade)
) %>%
ggplot(y = clade, x = value) +
geom_point()
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
mutate(
clade = str_extract(name, "[0-9]"),
clade = as.numeric(clade)
) %>%
ggplot(aes(y = clade, x = value)) +
geom_point()
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
mutate(
clade = str_extract(name, "[0-9]"),
clade = as.numeric(clade)
) %>%
ggplot(aes(y = clade, x = value)) +
stat_halfeye()
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
mutate(
clade = str_extract(name, "[0-9]"),
clade = as.numeric(clade)
) %>%
ggplot(aes(y = clade, x = value)) +
stat_halfeye()
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
mutate(
clade = str_extract(name, "[0-9]"),
clade = as.numeric(clade),
clade = factor(clade, labels=levels(milk$clade))
) %>%
ggplot(aes(y = clade, x = value)) +
stat_halfeye()
as_draws_df(m2) %>%
pivot_longer(starts_with("b")) %>%
mutate(
clade = str_extract(name, "[0-9]"),
clade = as.numeric(clade),
clade = factor(clade, labels=levels(milk$clade))
) %>%
ggplot(aes(y = clade, x = value)) +
stat_halfeye() +
labs(x="mean", y=NULL)
source("~/.active-rstudio-document", echo=TRUE)
