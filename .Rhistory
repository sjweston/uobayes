d %>%
count(response) %>%
mutate(prob = n/sum(n)) %>%
ggplot(aes(x =response, y = n)) +
geom_point() +
geom_line(aes(group=1))
d %>%
count(response) %>%
mutate(prob = n/sum(n)) %>%
ggplot(aes(x =response, y = n)) +
geom_point(aes(color = "observed")) +
geom_line(aes(color = "observed", group=1))
d %>%
count(response) %>%
mutate(prob = n/sum(n)) %>%
ggplot(aes(x =response, y = n)) +
geom_point(aes(color = "observed")) +
geom_line(aes(color = "observed", group=1)) +
geom_point(aes(color = model, x=.prediction), data=predicted) +
geom_line(aes(color = model, x=.prediction), data=predicted)
d %>%
count(response) %>%
mutate(prob = n/sum(n),
response=as.character(response)) %>%
ggplot(aes(x =response, y = n)) +
geom_point(aes(color = "observed")) +
geom_line(aes(color = "observed", group=1)) +
geom_point(aes(color = model, x=.prediction), data=predicted) +
geom_line(aes(color = model, x=.prediction), data=predicted)
d %>%
count(response) %>%
mutate(prob = n/sum(n),
response=as.character(response)) %>%
ggplot(aes(x =response, y = prob)) +
geom_point(aes(color = "observed")) +
geom_line(aes(color = "observed", group=1)) +
geom_point(aes(color = model, x=.prediction), data=predicted) +
geom_line(aes(color = model, x=.prediction, group=1), data=predicted)
d %>%
count(response) %>%
mutate(prob = n/sum(n),
response=as.character(response)) %>%
ggplot(aes(x =response, y = prob)) +
geom_point(aes(color = "observed")) +
geom_line(aes(color = "observed", group=1)) +
geom_point(aes(color = model, x=.prediction), data=predicted) +
geom_line(aes(color = model, x=.prediction, group=1), data=predicted) +
facet_wrap(~model)
posterior_summary(m1)
posterior_summary(m1) %>% select(b_action, b_intention, b_contact)
as_draws_df(m1) %>% select(b_action, b_intention, b_contact)
coef_m1 = as_draws_df(m1) %>%
select(b_action, b_intention, b_contact) %>%
mean_qi()
coef_m1
coef_m1 = gather_draws(m1, b_action, b_intention, b_contact) %>%
mean_qi()
coef_m1
coef_m2 = gather_draws(m2, b_action, b_intention, b_contact) %>%
mean_qi() %>%
mutate(model= "m1")
coef_m2 = gather_draws(m2, b_action, b_intention, b_contact) %>%
mean_qi() %>%
mutate(model= "m2")
coef_m2
full_join(coef_m1, coef_m2) %>%
arrange(.variable)
coef_m1 = gather_draws(m1, b_action, b_intention, b_contact) %>%
mean_qi() %>%
mutate(model= "m1")
coef_m2 = gather_draws(m2, b_action, b_intention, b_contact) %>%
mean_qi() %>%
mutate(model= "m2")
full_join(coef_m1, coef_m2) %>%
arrange(.variable)
coef_m1 = gather_draws(m1, b_action, b_intention, b_contact) %>%
mutate(model= "m1")
coef_m2 = gather_draws(m2, b_action, b_intention, b_contact) %>%
mutate(model= "m2")
full_join(coef_m1, coef_m2)
full_join(coef_m1, coef_m2) %>%
ggplot(aes( y=.variable, x=.value, fill=model)) +
stat_halfeye()
full_join(coef_m1, coef_m2) %>%
ggplot(aes( y=.variable, x=.value, fill=model)) +
stat_halfeye() +
geom_vline(aes(xintercept = 0), linetype="dashed")
nd = distinct(d, action, intention, contact)
pred_m1 = nd %>% add_predicted_draws(m1) %>% mutate(model = "m1")
pred_m2 = nd %>% add_predicted_draws(m2, allow_new_levels=T) %>% mutate(model = "m12")
full_join(pred_m1, pred_m2)
predicted = full_join(pred_m1, pred_m2) %>%
count(model, action, intention, contact, .prediction)
predicted
predicted %>%
ggplot(aes(x=.prediction, y=n, color=model)) +
geom_point(aes(shape=intention)) +
geom_line(aes(group=intention)) +
facet_wrap(action~contact)
predicted %>% count(action, intention, contact)
predicted %>%
mutate(intention=as.factor(intention)) %>%
ggplot(aes(x=.prediction, y=n, color=model)) +
geom_point(aes(shape=intention)) +
geom_line(aes(group=intention)) +
facet_wrap(action~contact)
predicted %>%
mutate(intention=as.factor(intention)) %>%
ggplot(aes(x=.prediction, y=n, color=model)) +
geom_point(aes(shape=intention)) +
geom_line(aes(color=model, group=intention)) +
facet_wrap(action~contact)
predicted %>%
mutate(intention=as.factor(intention)) %>%
ggplot(aes(x=.prediction, y=n, color=model)) +
geom_point(aes(shape=intention)) +
geom_line(aes(color=model, linetype=intention)) +
facet_wrap(action~contact)
predicted %>%
mutate(intention=as.factor(intention)) %>%
ggplot(aes(x=.prediction, y=n, color=model)) +
geom_point(aes(shape=intention)) +
geom_line(aes(color=model, linetype=intention, group=1)) +
facet_wrap(action~contact)
predicted %>%
mutate(intention=as.factor(intention)) %>%
ggplot(aes(x=.prediction, y=n, color=model)) +
geom_point(aes()) +
geom_line(aes(color=model, group=1)) +
facet_wrap(intention~action+contact)
predicted %>%
mutate(intention=as.factor(intention)) %>%
ggplot(aes(x=.prediction, y=n, color=model)) +
geom_point() +
geom_line(aes(group=1)) +
facet_wrap(intention~action+contact)
predicted %>%
mutate(intention=as.factor(intention)) %>%
ggplot(aes(x=.prediction, y=n, color=model)) +
geom_point() +
geom_line(aes(group=model)) +
facet_wrap(intention~action+contact)
predicted %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=n, color=model)) +
geom_point() +
geom_line(aes(group=model)) +
facet_wrap(intention~action+contact)
# Fit cross-classified model
m3 <- brm(
data = Trolley,
family = cumulative,
response ~ action + intention + contact + (1 | id) + (1 | story),
prior = c(
prior(normal(0, 1), class = Intercept),
prior(normal(0, 0.5), class = b),
prior(exponential(1), class = sd)
),
iter = 2000, warmup = 1000, chains = 4, cores = 4,
seed = 3,
file=here("files/models/hw7.3")
)
nd = distinct(d, action, intention, contact)
pred_m1 = nd %>% add_predicted_draws(m1) %>% mutate(model = "m1")
pred_m2 = nd %>% add_predicted_draws(m2, re_formula = NA) %>% mutate(model = "m2")
predicted = full_join(pred_m1, pred_m2) %>%
count(model, action, intention, contact, .prediction)
predicted %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=n, color=model)) +
geom_point() +
geom_line(aes(group=model)) +
facet_wrap(intention~action+contact)
library(cowplot)
theme_set(theme_cowplot())
default_palettes <- list(
c("#5e8485" , "#0f393a") ,
c("#1c5253" , "#5e8485" , "#0f393a") ,
# palette with 5 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" ) ,
# same palette interpolated to 8 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
predicted %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=n, color=model)) +
geom_point() +
geom_line(aes(group=model)) +
facet_wrap(intention~action+contact)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
predicted %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=n, color=model)) +
geom_point() +
geom_line(aes(group=model)) +
facet_wrap(intention~action+contact)
predicted %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=n, color=model)) +
geom_point() +
geom_line(aes(group=model, linetype=model)) +
facet_wrap(intention~action+contact)
predicted %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=n, color=model)) +
geom_point() +
geom_line(aes(group=model, linetype=model)) +
facet_wrap(intention~action+contact) +
theme(legend.position = "top")
nd = distinct(d, action, intention, contact)
pred_m1 = nd %>% add_predicted_draws(m1) %>% mutate(model = "pooled")
pred_m2 = nd %>% add_predicted_draws(m2, re_formula = NA) %>% mutate(model = "varying intercepts")
predicted = full_join(pred_m1, pred_m2) %>%
count(model, action, intention, contact, .prediction)
predicted %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=n, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
facet_wrap(intention~action+contact) +
theme(legend.position = "top")
predicted = full_join(pred_m1, pred_m2) %>%
count(model, action, intention, contact, .prediction) %>%
with_groups(model, mutate, prob=n/sum(n))
predicted %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=prob, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
facet_wrap(intention~action+contact) +
theme(legend.position = "top") +
labs(x="response",y=)
predicted %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=prob, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
facet_wrap(intention~action+contact) +
theme(legend.position = "top") +
labs(x="response",y=NULL)
obs = d %>%
count(action, intention, contact, .prediction) %>%
mutate(prob=n/sum(n))
obs = d %>%
count(action, intention, contact, response) %>%
mutate(prob=n/sum(n))
obs = d %>%
count(action, intention, contact, response) %>%
mutate(prob=n/sum(n)) %>%
rename(.prediction=response)
obs
obs = d %>%
count(action, intention, contact, response) %>%
mutate(prob=n/sum(n),
model="observed") %>%
rename(.prediction=response)
predicted %>%
full_join(obs) %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=prob, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
facet_wrap(intention~action+contact) +
theme(legend.position = "top") +
labs(x="response",y=NULL)
obs = d %>%
count(action, intention, contact, response) %>%
mutate(prob=n/sum(n),
model="observed",
response=as.factor(response)) %>%
rename(.prediction=response)
predicted %>%
full_join(obs) %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=prob, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
facet_wrap(intention~action+contact) +
theme(legend.position = "top") +
labs(x="response",y=NULL)
predicted %>%
full_join(obs) %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=prob, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
scale_color_manual(values = c("#e07a5f", "#5e8485" , "#0f393a"))
predicted %>%
full_join(obs) %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=prob, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
scale_color_discrete(values = c("#e07a5f", "#5e8485" , "#0f393a"))
predicted %>%
full_join(obs) %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=prob, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
scale_color_manual(values = c("#e07a5f", "#5e8485" , "#0f393a")) %>%
facet_wrap(intention~action+contact) +
theme(legend.position = "top") +
labs(x="response",y=NULL)
nd = distinct(d, action, intention, contact)
pred_m1 = nd %>% add_predicted_draws(m1) %>% mutate(model = "pooled")
pred_m2 = nd %>% add_predicted_draws(m2, re_formula = NA) %>% mutate(model = "varying intercepts")
predicted = full_join(pred_m1, pred_m2) %>%
count(model, action, intention, contact, .prediction) %>%
with_groups(model, mutate, prob=n/sum(n))
obs = d %>%
count(action, intention, contact, response) %>%
mutate(prob=n/sum(n),
model="observed",
response=as.factor(response)) %>%
rename(.prediction=response)
predicted %>%
full_join(obs) %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=prob, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
scale_color_manual(values = c("#e07a5f", "#5e8485" , "#0f393a")) +
facet_wrap(intention~action+contact) +
theme(legend.position = "top") +
labs(x="response",y=NULL)
waic(m1, m2, m3)
story_effects <- m3 %>%
spread_draws(r_story[story,]) %>%
mean_qi()
# Plot story effects
story_effects %>%
ggplot(aes(x = reorder(story, r_story), y = r_story)) +
geom_pointrange(aes(ymin = .lower, ymax = .upper)) +
coord_flip() +
labs(x = "Story", y = "Varying effect") +
theme_minimal()
# Chunk 1
library(tidyverse)
library(psych)
library(cowplot)
library(patchwork)
library(here)
library(brms)
library(tidybayes)
# Chunk 2
knitr::opts_chunk$set(fig.retina=3, echo=TRUE)
theme_set(theme_cowplot())
default_palettes <- list(
c("#5e8485" , "#0f393a") ,
c("#1c5253" , "#5e8485" , "#0f393a") ,
# palette with 5 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" ) ,
# same palette interpolated to 8 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
# Chunk 3
d <- read_csv("https://raw.githubusercontent.com/sjweston/uobayes/refs/heads/main/files/data/external_data/williams.csv")
# scaled time variable
d <- d %>% mutate(day01 = (day - 2) / max((day - 2)))
distinct(d, id) %>% count()
d %>%
count(id) %>%
summarise(median = median(n),
min = min(n),
max = max(n))
# Chunk 4
#| code-fold: true
d %>%
count(id) %>%
ggplot(aes(x = n)) +
geom_histogram(fill = "#1c5253", color = "white") +
scale_x_continuous("number of days", limits = c(0, NA))
# Chunk 5
rethinking::precis(d)
# Chunk 6
#| code-fold: true
set.seed(14)
d %>%
nest(data=-id) %>%
slice_sample(n = 6) %>%
unnest(data) %>%
ggplot(aes(x = day, y = NA_lag)) +
geom_line(color = "grey") +
geom_point(color = "#1c5253", size = 1/2) +
geom_line(aes(y = PA_lag), color = "darkgrey") +
geom_point(aes(y = PA_lag), color = "#e07a5f", size = 1/2) +
ylab("affect (standardized)") +
facet_wrap(~ id)
# Chunk 7
m1 <-
brm(data = d,
family = gaussian,
NA.std ~ 1 + NA_lag + PA_lag + (1 + NA_lag + PA_lag | id),
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 1), class = b),
prior(exponential(1), class = sd),
prior(exponential(1), class = sigma),
prior(lkj(2), class = cor)),
iter = 5000, warmup = 1000, chains = 4, cores = 4,
seed = 14,
file = here("files/models/m82.1"))
# Chunk 8
bf_na = bf(NA.std ~ 1 + (1  | c | id))
bf_pa = bf(PA.std ~ 1 + (1  | c | id))
m2 <-
brm(data = d,
family = gaussian,
bf_na + bf_pa + set_rescor(TRUE),
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(lkj(2), class = cor)),
iter = 5000, warmup = 1000, chains = 4, cores = 4,
seed = 14,
file = here("files/models/m82.2"))
# Chunk 9
m2
# Chunk 10
bf_na = bf(NA.std ~ 1 + NA_lag + PA_lag + (1 + NA_lag + PA_lag  | c | id))
bf_pa = bf(PA.std ~ 1 + NA_lag + PA_lag + (1 + NA_lag + PA_lag  | c | id))
m3 <-
brm(data = d,
family = gaussian,
bf_na + bf_pa + set_rescor(TRUE),
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 1), class = b),
prior(lkj(2), class = cor)),
iter = 5000, warmup = 1000, chains = 4, cores = 4,
seed = 14,
file = here("files/models/m82.3"))
# Chunk 11
m3
# Chunk 12
#| code-fold: true
post = as_draws_df(m3)
post %>%
select(between = cor_id__NAstd_Intercept__NAstd_NA_lag,
within = rescor__NAstd__PAstd) %>%
pivot_longer(everything()) %>%
group_by(name) %>%
mean_qi()
# Chunk 14
#| code-fold: true
m3 %>%
gather_draws(r_id__NAstd[id, term], r_id__PAstd[id, term]) %>%
mutate(.variable=str_remove(.variable, "r_id__")) %>%
pivot_wider(names_from = .variable, values_from = .value) %>%
# just for presenting to class
arrange(.draw, id, term) %>% select(-.chain, -.iteration) %>%
mutate(across(c(NAstd, PAstd), \(x) round(x, 2)))
