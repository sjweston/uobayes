c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
# Chunk 3
# ---- set population-level parameters -----
a <- 3.5       # average morning wait time
b <- (-1)      # average difference afternoon wait time
sigma_a <- 1   # std dev in intercepts
sigma_b <- 0.5 # std dev in slopes
rho <- (-0.7)  #correlation between intercepts and slopes
# ---- create vector of means ----
Mu <- c(a, b)
# ---- create matrix of variances and covariances ----
sigmas <- c(sigma_a,sigma_b) # standard deviations
Rho <- matrix( c(1,rho,rho,1) , nrow=2 ) # correlation matrix
# now matrix multiply to get covariance matrix
Sigma <- diag(sigmas) %*% Rho %*% diag(sigmas)
# ---- simulate intercepts and slopes -----
N_cafes = 20
library(MASS)
set.seed(5)
vary_effects <- mvrnorm( n=N_cafes, mu = Mu, Sigma=Sigma)
a_cafe <- vary_effects[, 1]
b_cafe <- vary_effects[, 2]
# ---- simulate observations -----
set.seed(22)
N_visits <- 10
afternoon <- rep(0:1,N_visits*N_cafes/2)
cafe_id <- rep( 1:N_cafes , each=N_visits )
mu <- a_cafe[cafe_id] + b_cafe[cafe_id]*afternoon
sigma <- 0.5 # std dev within cafes
wait <- rnorm( N_visits*N_cafes , mu , sigma )
d <- data.frame( cafe=cafe_id , afternoon=afternoon , wait=wait )
# Chunk 4
#| code-fold: true
# examples
rlkj_1 = rethinking::rlkjcorr(1e4, K=2, eta=1)
rlkj_2 = rethinking::rlkjcorr(1e4, K=2, eta=2)
rlkj_4 = rethinking::rlkjcorr(1e4, K=2, eta=4)
rlkj_6 = rethinking::rlkjcorr(1e4, K=2, eta=6)
data.frame(rlkj_1= rlkj_1[,1,2],
rlkj_2= rlkj_2[,1,2],
rlkj_4= rlkj_4[,1,2],
rlkj_6= rlkj_6[,1,2]) %>%
ggplot() +
geom_density(aes(x=rlkj_1, color = "1"), alpha=.3) +
geom_density(aes(x=rlkj_2, color = "2"), alpha=.3) +
geom_density(aes(x=rlkj_4, color = "4"), alpha=.3) +
geom_density(aes(x=rlkj_6, color = "6"), alpha=.3) +
labs(x="R", color="eta") +
theme(legend.position = "top")
# Chunk 5
m1 <- brm(
data = d,
family = gaussian,
wait ~ 1 + afternoon + (1 + afternoon | cafe),
prior = c(
prior( normal(5,2),    class=Intercept ),
prior( normal(-1, .5), class=b),
prior( exponential(1), class=sd),
prior( exponential(1), class=sigma),
prior( lkj(2),         class=cor)
),
iter=2000, warmup=1000, chains=4, cores=4, seed=9,
file=here("files/models/72.1")
)
# Chunk 6
posterior_summary(m1) %>% round(3)
# Chunk 7
#| code-fold: true
intercepts = coef(m1)$cafe[ ,, "Intercept"]
slopes = coef(m1)$cafe[,, "afternoon"]
cafe_params = data.frame(
cafe=1:20,
intercepts=intercepts[, 1],
slopes=slopes[, 1]
)
cafe_params %>% round(3)
# Chunk 8
#| code-fold: true
cafe_params %>%
ggplot( aes(x=intercepts, y=slopes) ) +
geom_point(size = 2)
# Chunk 9
#| code-fold: true
cafe_params %>%
ggplot( aes(x=intercepts, y=slopes) ) +
stat_ellipse() +
geom_point(size = 2)
# Chunk 10
#| code-fold: true
cafe_params %>%
ggplot( aes(x=intercepts, y=slopes) ) +
mapply(function(level) {
stat_ellipse(geom  = "polygon", type = "norm",
linewidth = 0, alpha = .1, fill = "#1c5253",
level = level)
},
# enter the levels here
level = c(1:9 / 10, .99)) +
geom_point(size = 2)
# Chunk 11
#| code-fold: true
cafe_params %>%
mutate(
morning = intercepts,
afternoon = intercepts + slopes
) %>%
ggplot( aes(x=morning, y=afternoon) ) +
mapply(function(level) {
stat_ellipse(geom  = "polygon", type = "norm",
linewidth = 0, alpha = .1, fill = "#1c5253",
level = level)
},
# enter the levels here
level = c(1:9 / 10, .99)) +
geom_point(size = 2)+
labs(x="morning wait time",
y="afternoon wait time")
# Chunk 12
#| code-fold: true
post = as_draws_df(m1)
rlkj_2 = rethinking::rlkjcorr(nrow(post), K=2, eta=2)
data.frame(prior= rlkj_2[,1,2],
posterior = post$cor_cafe__Intercept__afternoon) %>%
ggplot() +
geom_density(aes(x=prior, color = "prior"), alpha=.3) +
geom_density(aes(x=posterior, color = "posterior"), alpha=.3) +
scale_color_manual(values = c("#1c5253" , "#e07a5f")) +
labs(x="R") +
theme(legend.position = "top")
# Chunk 13
data(chimpanzees, package="rethinking")
d <- chimpanzees
d$treatment = as.factor(1 + d$prosoc_left + 2*d$condition)
m4 <- brm(
data = d,
family = bernoulli(link = "logit"),
pulled_left ~ 0 + treatment + (0 + treatment | actor) + (0 + treatment | block),
prior = c(
prior( normal(0, 1),   class=b),
prior( exponential(1), class=sd),
prior( lkj(2),         class=cor)),
iter=2000, warmup=1000, chains=4, cores=4, seed=9,
file = here("files/models/81_4"))
# Chunk 14
print(m4)
# Chunk 15
#| code-fold: true
d$labels = factor(d$treatment, 1:4, labels=c("r/n", "l/n", "r/p", "l/p"))
nd <-
d %>%
distinct(actor, condition, labels, prosoc_left, treatment) %>%
mutate(block = 5)
# compute and wrangle the posterior predictions
nd = fitted(m4,
newdata = nd) %>%
data.frame() %>%
bind_cols(nd) %>%
# add the empirical proportions
left_join(
d %>%
group_by(actor, treatment) %>%
mutate(proportion = mean(pulled_left)) %>%
distinct(actor, treatment, proportion),
by = c("actor", "treatment")
) %>%
mutate(condition = factor(condition),
prosoc_left = factor(prosoc_left))
# for annotation
text <-
distinct(d, labels) %>%
mutate(actor = 1,
prop  = c(.07, .8, .08, .795))
# plot!
nd %>% ggplot(aes(x = labels)) +
geom_hline(yintercept = .5,  alpha = 1/2, linetype = 2) +
# empirical proportions
geom_point(aes(y = proportion, shape = condition, color = "raw"),
fill = "white", size = 2.5, show.legend = F) +
# posterior predictions
geom_line(aes(y = Estimate, group = prosoc_left, color = "model"),
linewidth = 3/4) +
geom_pointrange(aes(y = Estimate, ymin = Q2.5, ymax = Q97.5, shape = condition,
color = "model"),
fill = "white", fatten = 8, linewidth = 1/3, show.legend = F) +
# annotation for the conditions
geom_text(data = text,
aes(y = prop, label = labels), size = 5) +
guides(color = FALSE) +
scale_shape_manual(values = c(21, 19)) +
scale_color_manual(values = c("#1c5253", "black")) +
scale_x_discrete(NULL, breaks=NULL) +
scale_y_continuous("proportion left lever",
breaks = 0:2 / 2,
labels = c("0", ".5", "1"))  +
facet_wrap(~ actor, nrow = 1, labeller = label_both)
data_path = "https://raw.githubusercontent.com/sjweston/uobayes/refs/heads/main/files/data/external_data/mlm.csv"
d <- read.csv(data_path)
rethinking::precis(d)
d %>% count(time)
d %>%
ggplot(aes(x=time, y=con, group=id)) +
geom_line(alpha=.1)
d %>%
ggplot(aes(x=time, y=con, group=id)) +
geom_line(alpha=.3)
d %>%
ggplot(aes(x=wave, y=con, group=id)) +
geom_line(alpha=.3)
d %>% count(wave)
data(chimpanzees, package="rethinking")
d <- chimpanzees
d$treatment = as.factor(1 + d$prosoc_left + 2*d$condition)
m2 <- brm(
data = d,
family = bernoulli(link = "logit"),
pulled_left ~ 0 + treatment + (0 + treatment | actor) + (0 + treatment | block),
prior = c(
prior( normal(0, 1),   class=b),
prior( exponential(1), class=sd),
prior( lkj(2),         class=cor)),
iter=2000, warmup=1000, chains=4, cores=4, seed=9,
file = here("files/models/72_2"))
m2 <- brm(
data=d,
family=gaussian,
con ~ 1 + time + (1 + time | id),
prior = c( prior( normal(0,1),    class=Intercept ),
prior( normal(0,1),    class=b ),
prior( exponential(1), class=sigma ),
prior( exponential(1), class=sd ),
prior( lkj(2),         class=cor)),
iter=4000, warmup=1000, seed=9, cores=4, chains=4,
file=here("files/models/72.2")
)
data_path = "https://raw.githubusercontent.com/sjweston/uobayes/refs/heads/main/files/data/external_data/mlm.csv"
d <- read.csv(data_path)
rethinking::precis(d)
d %>% count(wave)
m2 <- brm(
data=d,
family=gaussian,
con ~ 1 + time + (1 + time | id),
prior = c( prior( normal(0,1),    class=Intercept ),
prior( normal(0,1),    class=b ),
prior( exponential(1), class=sigma ),
prior( exponential(1), class=sd ),
prior( lkj(2),         class=cor)),
iter=4000, warmup=1000, seed=9, cores=4, chains=4,
file=here("files/models/72.2")
)
precis(d)
rethinking::precis(d)
d %>% count(group)
#| code-fold: true
d %>%
ggplot(aes(x=wave, y=con, group=id)) +
geom_line(alpha=.3) +
facet_wrap(~group)
m2
m2 <- brm(
data=d,
family=gaussian,
con ~ 1 + time + group + time:group + (1 + time | id),
prior = c( prior( normal(0,1),    class=Intercept ),
prior( normal(0,1),    class=b ),
prior( exponential(1), class=sigma ),
prior( exponential(1), class=sd ),
prior( lkj(2),         class=cor)),
iter=4000, warmup=1000, seed=9, cores=4, chains=4,
file=here("files/models/72.2")
)
m2
m2 <- brm(
data=d,
family=gaussian,
bf(con ~ 0 + a + b * time,
a ~ 0 + g * group + (1 | id),
b ~ 0 + g * group + (1 | id),
nl=TRUE),
prior = c( prior( normal(0,1),    class=b, nlpar=a ),
prior( normal(0,1),    class=b, nlpar=b ),
prior( exponential(1), class=sigma ),
prior( exponential(1), class=sd ),
prior( lkj(2),         class=cor)),
iter=4000, warmup=1000, seed=9, cores=4, chains=4,
file=here("files/models/72.2b")
)
m2 <- brm(
data=d,
family=gaussian,
bf(con ~ 0 + a + b * time,
a ~ 0 + group + (1 | id),
b ~ 0 + group + (1 | id),
nl=TRUE),
prior = c( prior( normal(0,1),    class=b, nlpar=a ),
prior( normal(0,1),    class=b, nlpar=b ),
prior( exponential(1), class=sigma ),
prior( exponential(1), class=sd ),
prior( lkj(2),         class=cor)),
iter=4000, warmup=1000, seed=9, cores=4, chains=4,
file=here("files/models/72.2b")
)
m2 <- brm(
data=d,
family=gaussian,
bf(con ~ 0 + a + b*time + aid + bid*time,
a ~ 0 + group,
b ~ 0 + group,
aid ~ 1 + (1 |id),
bid ~ 1 + (1 |id),
nl=TRUE),
prior = c( prior( normal(0,1),    class=b, nlpar=a ),
prior( normal(0,1),    class=b, nlpar=b ),
prior( exponential(1), class=sigma ),
prior( exponential(1), class=sd ),
prior( lkj(2),         class=cor)),
iter=4000, warmup=1000, seed=9, cores=4, chains=4,
file=here("files/models/72.2b")
)
m2 <- brm(
data=d,
family=gaussian,
bf(con ~ 0 + a + b*time + aid + bid*time,
a ~ 0 + group,
b ~ 0 + group,
aid ~ 1 + (1 |id),
bid ~ 1 + (1 |id),
nl=TRUE),
prior = c( prior( normal(0,1),    class=b, nlpar=a ),
prior( normal(0,1),    class=b, nlpar=b ),
prior( exponential(1), class=sigma )),
iter=4000, warmup=1000, seed=9, cores=4, chains=4,
file=here("files/models/72.2b")
)
m2
# Chunk 1
library(tidyverse)
library(psych)
library(cowplot)
library(patchwork)
library(here)
library(brms)
library(tidybayes)
# Chunk 2
knitr::opts_chunk$set(fig.retina=3, echo=TRUE)
theme_set(theme_cowplot())
default_palettes <- list(
c("#5e8485" , "#0f393a") ,
c("#1c5253" , "#5e8485" , "#0f393a") ,
# palette with 5 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" ) ,
# same palette interpolated to 8 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
# Chunk 3
data_path = "https://raw.githubusercontent.com/sjweston/uobayes/refs/heads/main/files/data/external_data/mlm.csv"
d <- read.csv(data_path)
rethinking::precis(d)
d %>% count(id) %>% count(n)
# Chunk 4
d$id.f = as.factor(d$id)
m1 <- brm(
data=d,
family=gaussian,
bf(con ~ 0 + a,
a ~ 0 + id.f,
nl = TRUE),
prior = c( prior(normal(0, 1.5), class=b, nlpar=a),
prior(exponential(1), class=sigma)),
iter=2000, warmup=1000, chains=4, cores=4, seed=9,
file=here("files/models/m71.1")
)
# Chunk 5
m1
# Chunk 6
m2 <- brm(
data=d,
family=gaussian,
con ~ 1 + (1 | id),
prior = c( prior(normal(0, 1.5), class=Intercept),
prior(exponential(1), class=sd),
prior(exponential(1), class=sigma)),
iter=2000, warmup=1000, chains=4, cores=4, seed=9,
file=here("files/models/m71.2")
)
# Chunk 7
m2
# Chunk 8
get_variables(m1)
get_variables(m1) %>% length()
get_variables(m2) %>% length()
get_variables(m2)
# Define the simulation function
simulate_growth <- function(age) {
n = length(age)
# Simulate height (in feet)
height <- rnorm(n,
mean = 1.5 + .3*age + 0.005*age^2,  # Quadratic growth pattern
sd = .3)                           # Random variation
# Simulate weight (in lb)
weight <- rnorm(n,
mean = 6.5 + 5*age + 0.25*height, # Linear relationship with age and height
sd = 4)                           # Random variation
data.frame(age=age, height=height, weight=weight)
}
# Generate data for ages 0-12
ages <- runif(100, 0, 12)
sim_data = simulate_growth(ages)
# Plot the simulated relationships
par(mfrow=c(2,1))
plot(sim_data$age, sim_data$height,
xlab="Age (years)", ylab="Height (feet)",
main="Age vs Height")
plot(sim_data$age, sim_data$weight,
xlab="Age (years)", ylab="Weight (lb)",
main="Age vs Weight")
mp <- brm(
weight ~ age,
data = sim_data,
prior = c(
prior(normal(7, 1.5), class = Intercept),
prior(normal(0, 1), class = b),
prior(exponential(1), class = sigma)
)  # First get prior samples
)
## record current position
current = 5
## flip coin to generate proposal
(coin = sample( c(-1,1) , size=1 ))
(proposal = current + coin)
## record current position
current = 5
## flip coin to generate proposal
(coin = sample( c(-1,1) , size=1 ))
(proposal = current + coin)
(prob_move <- proposal/current)
(current <- ifelse( runif(1) < prob_move , proposal , current ))
data(Howell1, package = "rethinking")
d <- Howell1
library(measurements)
d$height <- conv_unit(d$height, from = "cm", to = "feet")
d$weight <- conv_unit(d$weight, from = "kg", to = "lbs")
describe(d, fast = T)
d <- d[d$age >= 18, ]
d$height_c <- d$height - mean(d$height)
#| code-line-numbers: "1,2"
#|
m1 <-brm(
data = d,
family = gaussian,
weight ~ 1 + height_c,
prior = c( prior( normal(130,20), class = Intercept),
prior( normal(0,25), class = b),
prior( uniform(0,50), class = sigma, ub = 50)
),
iter = 5000, warmup = 1000, chains = 4,
seed = 3,
file = here("files/data/generated_data/m1"))
plot(m1)
pairs(m1)
intercept_prior = rnorm(10000, 130, 20)
sigma_prior = runif(10000, 0, 50)
plot(intercept_prior, sigma_prior)
dev.off()
plot(intercept_prior, sigma_prior)
pairs(m1)
nu = rnorm(1e5, 0, 1)
x = rnorm(1e5, 0, exp(nu))
plot(x, nu)
plot(x, nu, pch=16)
plot(x, nu, pch=16, size=.5)
pairs(m1)
get_variables(m1)
as_draws_df(m1)
m1$algorithm
View(str(m1))
str(m1 ) %>% View()
m1$fit@sim$samples
attr(m1$fit@sim$samples,"sampler_params")$stepsize__
attr(m1$fit@sim$samples,"sampler_params")
str(m1$fit@sim$samples)
attr(m1$fit@sim$samples, "sampler_params")
str(m1)
get_variables(m1)
spread_draws(m1, stepsize__)
m1 <-brm(
data = d,
family = gaussian,
weight ~ 1 + height_c,
prior = c( prior( normal(130,20), class = Intercept),
prior( normal(0,25), class = b),
prior( uniform(0,50), class = sigma, ub = 50)
),
iter = 5000, warmup = 200, chains = 4,
seed = 3)
spread_draws(m1, stepsize__)
m1 <-brm(
data = d,
family = gaussian,
weight ~ 1 + height_c,
prior = c( prior( normal(130,20), class = Intercept),
prior( normal(0,25), class = b),
prior( uniform(0,50), class = sigma, ub = 50)
),
iter = 400, warmup = 200, chains = 4,
seed = 3)
spread_draws(m1, stepsize__)
