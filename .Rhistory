rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
# Load required library
library(ggplot2)
# Define the parameters for the normal distribution
mean_iq <- 100
sd_iq <- 15
# Create a sequence of IQ scores to evaluate the density
x <- seq(50, 150, length.out = 1000)
# Calculate the density for the normal distribution
y <- dnorm(x, mean = mean_iq, sd = sd_iq)
# Define the regions to shade
region1 <- x < 81  # IQ < 81
region2 <- x >= 108 & x <= 113  # IQ between 108 and 113
# Create a data frame for plotting
data <- data.frame(x = x, y = y, region1 = region1, region2 = region2)
# Create the plot
ggplot(data, aes(x, y)) +
geom_line(color = "blue", size = 1) +  # Normal distribution curve
geom_area(data = subset(data, region1), aes(y = y), fill = "red", alpha = 0.5) +  # Shade region IQ < 81
geom_area(data = subset(data, region2), aes(y = y), fill = "green", alpha = 0.5) +  # Shade region 108 <= IQ <= 113
labs(
title = "Probability Density Function of IQ",
x = "IQ",
y = "Density"
) +
theme_minimal() +
annotate(
"text", x = 70, y = 0.01, label = "P(IQ < 81) ≈ 0.10", color = "red", size = 4, hjust = 0
) +
annotate(
"text", x = 120, y = 0.02, label = "P(108 ≤ IQ ≤ 113) ≈ 0.10", color = "green", size = 4, hjust = 0
)
# Create the plot
ggplot(data, aes(x, y)) +
geom_line(color = "orange", linewidth = 1) +  # Normal distribution curve
geom_area(data = subset(data, region1), aes(y = y), fill = "red", alpha = 0.5) +  # Shade region IQ < 81
geom_area(data = subset(data, region2), aes(y = y), fill = "green", alpha = 0.5) +  # Shade region 108 <= IQ <= 113
labs(
title = "Probability Density Function of IQ",
x = "IQ",
y = "Density"
) +
theme_minimal() +
annotate(
"text", x = 70, y = 0.01, label = "P(IQ < 81) ≈ 0.10", color = "red", size = 4, hjust = 0
) +
annotate(
"text", x = 120, y = 0.02, label = "P(108 ≤ IQ ≤ 113) ≈ 0.10", color = "green", size = 4, hjust = 0
)
# Create the plot
ggplot(data, aes(x, y)) +
geom_line(color = "orange", linewidth = 1) +  # Normal distribution curve
geom_area(data = subset(data, region1), aes(y = y), fill = "red", alpha = 0.5) +  # Shade region IQ < 81
geom_area(data = subset(data, region2), aes(y = y), fill = "green", alpha = 0.5) +  # Shade region 108 <= IQ <= 113
labs(
title = "Probability Density Function of IQ",
x = "IQ",
y = "Density"
) +
theme_minimal()
# Load required library
library(ggplot2)
# Define the parameters for the normal distribution
mean_iq <- 100
sd_iq <- 15
# Create a sequence of IQ scores to evaluate the density
x <- seq(50, 150, length.out = 1000)
# Calculate the density for the normal distribution
y <- dnorm(x, mean = mean_iq, sd = sd_iq)
# Define the regions to shade
region1 <- x < 81  # IQ < 81
region2 <- x >= 108 & x <= 113  # IQ between 108 and 113
# Create a data frame for plotting
data <- data.frame(x = x, y = y, region1 = region1, region2 = region2)
# Create the plot
ggplot(data, aes(x, y)) +
geom_line(color = "orange", linewidth = 1) +  # Normal distribution curve
geom_area(data = subset(data, region1), aes(y = y), fill = "1C5253", alpha = 0.5) +  # Shade region IQ < 81
geom_area(data = subset(data, region2), aes(y = y), fill = "1C5253", alpha = 0.5) +  # Shade region 108 <= IQ <= 113
labs(
title = "Probability Density Function of IQ",
x = "IQ",
y = "Density"
) +
theme_minimal()
# Load required library
library(ggplot2)
# Define the parameters for the normal distribution
mean_iq <- 100
sd_iq <- 15
# Create a sequence of IQ scores to evaluate the density
x <- seq(50, 150, length.out = 1000)
# Calculate the density for the normal distribution
y <- dnorm(x, mean = mean_iq, sd = sd_iq)
# Define the regions to shade
region1 <- x < 81  # IQ < 81
region2 <- x >= 108 & x <= 113  # IQ between 108 and 113
# Create a data frame for plotting
data <- data.frame(x = x, y = y, region1 = region1, region2 = region2)
# Create the plot
ggplot(data, aes(x, y)) +
geom_line(color = "orange", linewidth = 1) +  # Normal distribution curve
geom_area(data = subset(data, region1), aes(y = y), fill = "#1C5253", alpha = 0.5) +  # Shade region IQ < 81
geom_area(data = subset(data, region2), aes(y = y), fill = "#1C5253", alpha = 0.5) +  # Shade region 108 <= IQ <= 113
labs(
title = "Probability Density Function of IQ",
x = "IQ",
y = "Density"
) +
theme_minimal()
# Load required library
library(ggplot2)
# Define the parameters for the normal distribution
mean_iq <- 100
sd_iq <- 15
# Create a sequence of IQ scores to evaluate the density
x <- seq(50, 150, length.out = 1000)
# Calculate the density for the normal distribution
y <- dnorm(x, mean = mean_iq, sd = sd_iq)
# Define the regions to shade
region1 <- x < 81  # IQ < 81
region2 <- x >= 108 & x <= 113  # IQ between 108 and 113
# Create a data frame for plotting
data <- data.frame(x = x, y = y, region1 = region1, region2 = region2)
# Create the plot
ggplot(data, aes(x, y)) +
geom_area(data = subset(data, region1), aes(y = y), fill = "#1C5253", alpha = 0.5) +  # Shade region IQ < 81
geom_area(data = subset(data, region2), aes(y = y), fill = "#1C5253", alpha = 0.5) +  # Shade region 108 <= IQ <= 113
geom_line(color = "orange", linewidth = 1) +  # Normal distribution curve
labs(
title = "Probability Density Function of IQ",
x = "IQ",
y = "Density"
) +
theme_minimal()
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
# Create the plot
ggplot(data, aes(x, y)) +
geom_area(data = subset(data, region1), aes(y = y), fill = "#1C5253", alpha = 0.5) +  # Shade region IQ < 81
geom_area(data = subset(data, region2), aes(y = y), fill = "#1C5253", alpha = 0.5) +  # Shade region 108 <= IQ <= 113
geom_line(color = "orange", linewidth = 1) +  # Normal distribution curve
labs(
title = "Probability Density Function of IQ",
x = "IQ",
y = "Density"
) +
theme_minimal(base_size = 20)
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
rmarkdown::render("lectures/lecture01-1.Rmd", output_format = "xaringan::moon_reader")
# Plot the prior distribution (Gamma(2, 0.2))
library(ggplot2)
lambda <- seq(0, 15, length.out = 1000)
prior <- dgamma(lambda, shape = 2, rate = 0.2)
data_prior <- data.frame(lambda = lambda, density = prior)
ggplot(data_prior, aes(x = lambda, y = density)) +
geom_line(color = "blue", size = 1) +
labs(title = "Prior Distribution of Lambda",
x = expression(lambda),
y = "Density") +
theme_minimal()
