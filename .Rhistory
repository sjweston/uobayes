mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=prob, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
facet_wrap(intention~action+contact) +
theme(legend.position = "top") +
labs(x="response",y=)
predicted %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=prob, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
facet_wrap(intention~action+contact) +
theme(legend.position = "top") +
labs(x="response",y=NULL)
obs = d %>%
count(action, intention, contact, .prediction) %>%
mutate(prob=n/sum(n))
obs = d %>%
count(action, intention, contact, response) %>%
mutate(prob=n/sum(n))
obs = d %>%
count(action, intention, contact, response) %>%
mutate(prob=n/sum(n)) %>%
rename(.prediction=response)
obs
obs = d %>%
count(action, intention, contact, response) %>%
mutate(prob=n/sum(n),
model="observed") %>%
rename(.prediction=response)
predicted %>%
full_join(obs) %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=prob, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
facet_wrap(intention~action+contact) +
theme(legend.position = "top") +
labs(x="response",y=NULL)
obs = d %>%
count(action, intention, contact, response) %>%
mutate(prob=n/sum(n),
model="observed",
response=as.factor(response)) %>%
rename(.prediction=response)
predicted %>%
full_join(obs) %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=prob, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
facet_wrap(intention~action+contact) +
theme(legend.position = "top") +
labs(x="response",y=NULL)
predicted %>%
full_join(obs) %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=prob, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
scale_color_manual(values = c("#e07a5f", "#5e8485" , "#0f393a"))
predicted %>%
full_join(obs) %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=prob, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
scale_color_discrete(values = c("#e07a5f", "#5e8485" , "#0f393a"))
predicted %>%
full_join(obs) %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=prob, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
scale_color_manual(values = c("#e07a5f", "#5e8485" , "#0f393a")) %>%
facet_wrap(intention~action+contact) +
theme(legend.position = "top") +
labs(x="response",y=NULL)
nd = distinct(d, action, intention, contact)
pred_m1 = nd %>% add_predicted_draws(m1) %>% mutate(model = "pooled")
pred_m2 = nd %>% add_predicted_draws(m2, re_formula = NA) %>% mutate(model = "varying intercepts")
predicted = full_join(pred_m1, pred_m2) %>%
count(model, action, intention, contact, .prediction) %>%
with_groups(model, mutate, prob=n/sum(n))
obs = d %>%
count(action, intention, contact, response) %>%
mutate(prob=n/sum(n),
model="observed",
response=as.factor(response)) %>%
rename(.prediction=response)
predicted %>%
full_join(obs) %>%
mutate(
action=ifelse(action==0, "no action", "action"),
contact=ifelse(contact==0, "no contact", "contact"),
intention=ifelse(intention==0, "no intention", "intention"),
) %>%
ggplot(aes(x=.prediction, y=prob, color=model)) +
geom_point(aes(shape=model)) +
geom_line(aes(group=model, linetype=model)) +
scale_color_manual(values = c("#e07a5f", "#5e8485" , "#0f393a")) +
facet_wrap(intention~action+contact) +
theme(legend.position = "top") +
labs(x="response",y=NULL)
waic(m1, m2, m3)
story_effects <- m3 %>%
spread_draws(r_story[story,]) %>%
mean_qi()
# Plot story effects
story_effects %>%
ggplot(aes(x = reorder(story, r_story), y = r_story)) +
geom_pointrange(aes(ymin = .lower, ymax = .upper)) +
coord_flip() +
labs(x = "Story", y = "Varying effect") +
theme_minimal()
# Chunk 1
library(tidyverse)
library(psych)
library(cowplot)
library(patchwork)
library(here)
library(brms)
library(tidybayes)
# Chunk 2
knitr::opts_chunk$set(fig.retina=3, echo=TRUE)
theme_set(theme_cowplot())
default_palettes <- list(
c("#5e8485" , "#0f393a") ,
c("#1c5253" , "#5e8485" , "#0f393a") ,
# palette with 5 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" ) ,
# same palette interpolated to 8 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
# Chunk 3
d <- read_csv("https://raw.githubusercontent.com/sjweston/uobayes/refs/heads/main/files/data/external_data/williams.csv")
# scaled time variable
d <- d %>% mutate(day01 = (day - 2) / max((day - 2)))
distinct(d, id) %>% count()
d %>%
count(id) %>%
summarise(median = median(n),
min = min(n),
max = max(n))
# Chunk 4
#| code-fold: true
d %>%
count(id) %>%
ggplot(aes(x = n)) +
geom_histogram(fill = "#1c5253", color = "white") +
scale_x_continuous("number of days", limits = c(0, NA))
# Chunk 5
rethinking::precis(d)
# Chunk 6
#| code-fold: true
set.seed(14)
d %>%
nest(data=-id) %>%
slice_sample(n = 6) %>%
unnest(data) %>%
ggplot(aes(x = day, y = NA_lag)) +
geom_line(color = "grey") +
geom_point(color = "#1c5253", size = 1/2) +
geom_line(aes(y = PA_lag), color = "darkgrey") +
geom_point(aes(y = PA_lag), color = "#e07a5f", size = 1/2) +
ylab("affect (standardized)") +
facet_wrap(~ id)
# Chunk 7
m1 <-
brm(data = d,
family = gaussian,
NA.std ~ 1 + NA_lag + PA_lag + (1 + NA_lag + PA_lag | id),
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 1), class = b),
prior(exponential(1), class = sd),
prior(exponential(1), class = sigma),
prior(lkj(2), class = cor)),
iter = 5000, warmup = 1000, chains = 4, cores = 4,
seed = 14,
file = here("files/models/m82.1"))
# Chunk 8
bf_na = bf(NA.std ~ 1 + (1  | c | id))
bf_pa = bf(PA.std ~ 1 + (1  | c | id))
m2 <-
brm(data = d,
family = gaussian,
bf_na + bf_pa + set_rescor(TRUE),
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(lkj(2), class = cor)),
iter = 5000, warmup = 1000, chains = 4, cores = 4,
seed = 14,
file = here("files/models/m82.2"))
# Chunk 9
m2
# Chunk 10
bf_na = bf(NA.std ~ 1 + NA_lag + PA_lag + (1 + NA_lag + PA_lag  | c | id))
bf_pa = bf(PA.std ~ 1 + NA_lag + PA_lag + (1 + NA_lag + PA_lag  | c | id))
m3 <-
brm(data = d,
family = gaussian,
bf_na + bf_pa + set_rescor(TRUE),
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 1), class = b),
prior(lkj(2), class = cor)),
iter = 5000, warmup = 1000, chains = 4, cores = 4,
seed = 14,
file = here("files/models/m82.3"))
# Chunk 11
m3
# Chunk 12
#| code-fold: true
post = as_draws_df(m3)
post %>%
select(between = cor_id__NAstd_Intercept__NAstd_NA_lag,
within = rescor__NAstd__PAstd) %>%
pivot_longer(everything()) %>%
group_by(name) %>%
mean_qi()
# Chunk 14
#| code-fold: true
m3 %>%
gather_draws(r_id__NAstd[id, term], r_id__PAstd[id, term]) %>%
mutate(.variable=str_remove(.variable, "r_id__")) %>%
pivot_wider(names_from = .variable, values_from = .value) %>%
# just for presenting to class
arrange(.draw, id, term) %>% select(-.chain, -.iteration) %>%
mutate(across(c(NAstd, PAstd), \(x) round(x, 2)))
# Chunk 1
library(tidyverse)
library(psych)
library(cowplot)
library(patchwork)
library(here)
library(brms)
library(tidybayes)
library(scales) #for some plotting features
library(invgamma) # new distribution
# Chunk 2
knitr::opts_chunk$set(fig.retina=3, echo=TRUE)
theme_set(theme_cowplot())
default_palettes <- list(
c("#5e8485" , "#0f393a") ,
c("#1c5253" , "#5e8485" , "#0f393a") ,
# palette with 5 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" ) ,
# same palette interpolated to 8 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
# Chunk 3
d <- read_csv(here("files/data/external_data/yllanon.csv"))
d = d |> filter(wave == 1)
# %>%
#   select(id, wave, age, gender, ethnic, edu,
#          health, econ, crime, imm, vaccines, ideo)
# rethinking::precis(d)
# Chunk 4
#| code-fold: true
d %>%
count(def) %>%
mutate(
col = ifelse(def >7, "1","2"),
def = factor(def,
levels=c(1:9),
labels = c("1\nGreatly decrease", "2", "3", "4\nKeep the same", "5", "6", "7\nGreatly increase", "8\n Don't Know", "9\n Haven't thought"))) %>%
ggplot(aes(x=def, y=n)) +
geom_col(aes(fill=col)) +
scale_x_discrete(labels = label_wrap(10)) +
labs(title = "Should federal spending on defense be changed?",
x=NULL,
y = "count") +
theme(legend.position = "none")
# Chunk 5
d = filter(d, def <= 7)
m1 <- brm(
data = d,
family = cumulative,
def ~ 1,
prior = c( prior(normal(0, 1.5), class = Intercept) ),
iter=2000, warmup=1000, seed=3, cores=4,
file = here("files/models/m91.1")
)
# Chunk 1
library(tidyverse)
library(psych)
library(cowplot)
library(patchwork)
library(here)
library(brms)
library(tidybayes)
library(scales) #for some plotting features
library(invgamma) # new distribution
# Chunk 2
knitr::opts_chunk$set(fig.retina=3, echo=TRUE)
theme_set(theme_cowplot())
default_palettes <- list(
c("#5e8485" , "#0f393a") ,
c("#1c5253" , "#5e8485" , "#0f393a") ,
# palette with 5 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" ) ,
# same palette interpolated to 8 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
# Chunk 3
d <- read_csv(here("files/data/external_data/yllanon.csv"))
d = d |> filter(wave == 1 & !is.na(age))
# %>%
#   select(id, wave, age, gender, ethnic, edu,
#          health, econ, crime, imm, vaccines, ideo)
# rethinking::precis(d)
# Chunk 4
#| code-fold: true
d %>%
count(def) %>%
mutate(
col = ifelse(def >7, "1","2"),
def = factor(def,
levels=c(1:9),
labels = c("1\nGreatly decrease", "2", "3", "4\nKeep the same", "5", "6", "7\nGreatly increase", "8\n Don't Know", "9\n Haven't thought"))) %>%
ggplot(aes(x=def, y=n)) +
geom_col(aes(fill=col)) +
scale_x_discrete(labels = label_wrap(10)) +
labs(title = "Should federal spending on defense be changed?",
x=NULL,
y = "count") +
theme(legend.position = "none")
# Chunk 5
d = filter(d, def <= 7)
# Chunk 6
d |>
ggplot( aes(x=age, y=def) ) +
geom_point(alpha=.3) +
geom_smooth(se=F) +
labs(x="age", y="defense spending")
# Chunk 7
m1 <- brm(
data = d,
family = cumulative,
def ~ 1,
prior = c( prior(normal(0, 1.5), class = Intercept) ),
iter=2000, warmup=1000, seed=3, cores=4,
file = here("files/models/m91.1")
)
# Chunk 8
m1
# Chunk 9
m2 <- brm(
data = d,
family = cumulative,
def ~ 1 + age,
prior = c( prior(normal(0, 1.5), class = Intercept),
prior(normal(0, 1),   class = b)),
iter=5000, warmup=1000, seed=3, cores=4,
file = here("files/models/m91.2")
)
# Chunk 10
m2
# Chunk 11
m3 <- brm(
data = d,
family = cumulative,
def ~ 1 + gp(age, cov = "exp_quad", scale = F),
prior = c( prior(normal(0, 1.5),    class=Intercept),
prior(inv_gamma(2.5, 3), class=lscale, coef = gpage),
prior(exponential(1),    class=sdgp, coef = gpage)),
iter=5000, warmup=1000, seed=3, cores=4,
file = here("files/models/m91.3")
)
# Chunk 12
m3
# Chunk 13
#| code-fold: true
#|
set.seed(11)
nsim = 50
sample_l = invgamma::rinvgamma(nsim, 2.5, 3)
sample_sig = rexp(nsim, 1)
# wrangle into functions
p1 = tibble(
.draw = 1:nsim,
l = sample_l,
sig = sample_sig) %>%
mutate(sigsq = sig^2,
rhosq = 1 / (2 * l^2)) %>%
expand_grid(x = seq(from = 0, to = 10, by = .05)) %>%
mutate(covariance = sigsq * exp(-rhosq * x^2),
correlation = exp(-rhosq * x^2)) %>%
# plot
ggplot(aes(x = x, y = correlation)) +
geom_line(aes(group = .draw),
linewidth = 1/4, alpha = 1/4, color = "#1c5253") +
scale_x_continuous("distance (age)", expand = c(0, 0),
breaks = 0:5 * 2) +
labs(subtitle = "Gaussian process prior")
p1
# Chunk 14
m3 %>% spread_draws( sdgp_gpage, lscale_gpage )
# Chunk 15
#| code-fold: true
#|
post <- as_draws_df(m3)
# for `slice_sample()`
set.seed(14)
# wrangle
p2 <-
post %>%
mutate(sigsq = sdgp_gpage^2,
rhosq = 1 / (2 * lscale_gpage^2)) %>%
slice_sample(n = 50) %>%
expand_grid(x = seq(from = 0, to = 10, by = .05)) %>%
mutate(covariance = sigsq * exp(-rhosq * x^2),
correlation = exp(-rhosq * x^2)) %>%
# plot
ggplot(aes(x = x, y = correlation)) +
geom_line(aes(group = .draw),
linewidth = 1/4, alpha = 1/4, color = "#1c5253") +
stat_function(fun = function(x)
exp(-(1 / (2 * mean(post$lscale_a_gpage)^2)) * x^2),
color = "#0f393a", linewidth = 1) +
scale_x_continuous("distance (age)", expand = c(0, 0),
breaks = 0:5 * 2) +
labs(subtitle = "Gaussian process posterior")
p1 + p2
# Chunk 16
m1 <- add_criterion(m1, criterion = "loo")
m2 <- add_criterion(m2, criterion = "loo")
m3 <- add_criterion(m3, criterion = "loo")
loo_compare(`m1: intercept only` = m1, m2, `m3: gaussian process`  = m3)
# Chunk 17
#| code-fold: true
nd = d %>% distinct(age)
pred_m2 = nd %>%
add_epred_draws(m2) %>%
mutate(model = "m2")
pred_m3 = nd %>%
add_epred_draws(m3) %>%
mutate(model = "m3")
full_join(pred_m2, pred_m3) %>%
group_by(model, age, .category) %>%
mean_qi(.epred) %>%
ggplot( aes( x=age, y=.epred, color=model ) ) +
geom_line() +
scale_color_manual(values = c("#1c5253" , "#e07a5f")) +
facet_wrap(~.category) +
theme(legend.position = "bottom")
# Chunk 18
#| code-fold: true
full_join(pred_m2, pred_m3) %>%
filter(.category %in% c(1)) %>%
group_by(model, age, .category) %>%
mean_qi(.epred) %>%
ggplot( aes( x=age, y=.epred, color=model ) ) +
geom_line() +
scale_color_manual(values = c("#1c5253" , "#e07a5f")) +
facet_wrap(~.category) +
theme(legend.position = "bottom")
# Chunk 19
ppd_m2 = nd %>%
add_predicted_draws(m2) %>%
mutate(model = "m2")
ppd_m3 = nd %>%
add_predicted_draws(m3) %>%
mutate(model = "m3")
full_join(ppd_m2, ppd_m3) |>
ungroup() |>
with_groups( c(model, age), summarise, avg = mean( as.numeric(.prediction) ) ) |>
ggplot( aes( x=age, y=avg, color=model ) ) +
geom_line() +
scale_color_manual(values = c("#1c5253" , "#e07a5f")) +
labs( x="age", y="average response" )
```
full_join(ppd_m2, ppd_m3) |>
ungroup() |>
with_groups( c(model, age), summarise, avg = mean( as.numeric(.prediction) ) ) |>
ggplot( aes( x=age, y=avg, color=model ) ) +
geom_line() +
scale_color_manual(values = c("#1c5253" , "#e07a5f")) +
labs( x="age", y="average response" )
