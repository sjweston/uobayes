iter = 5000, warmup = 1000, chains = 4,
seed = 3,
file = here("files/models/51.1")
)
# generative model, basic mediator scenario
set.seed(0319)
N <- 1000 # number of applicants
# even gender distribution
G <- sample( 1:2, size=N, replace=TRUE )
# gender 1 tends to apply to department 1, 2 to 2
D <- rbinom( n=N, size=1, prob=ifelse( G==1 , 0.3 , 0.8 ) ) + 1
# matrix of acceptance rates
accept_rate <- matrix( c(0.5, 0.2, 0.1, 0.3), nrow=2)
# simulate acceptance
A <- rbinom( n=N, size=1, accept_rate[D,G])
dat <- data.frame(D=as.character(D), G=as.character(G), A)
m1 = brm(
data = dat,
family = bernoulli,
A  ~ 0 + G,
prior = c( prior( normal(0, 1), class = b)),
iter = 5000, warmup = 1000, chains = 4,
seed = 3,
file = here("files/models/51.1")
)
m2 = brm(
data = dat,
family = bernoulli,
A  ~ G*D,
prior = c( prior( normal(0, 1), class = Intercept),
prior( normal(0, 1), class = b)),
iter = 5000, warmup = 1000, chains = 4,
seed = 3,
file = here("files/models/51.2")
)
#| code-fold: true
posterior_summary(m1) %>% round(2)
#| code-fold: true
posterior_summary(m2) %>% round(2)
m2 = brm(
data = dat,
family = bernoulli,
A  ~ 0 + G*D,
prior = c( prior( normal(0, 1), class = Intercept),
prior( normal(0, 1), class = b)),
iter = 5000, warmup = 1000, chains = 4,
seed = 3
)
m2 = brm(
data = dat,
family = bernoulli,
A  ~ 0 + G*D,
prior = c( #prior( normal(0, 1), class = Intercept),
prior( normal(0, 1), class = b)),
iter = 5000, warmup = 1000, chains = 4,
seed = 3
)
posterior_summary(m2)
m2 = brm(
data = dat,
family = bernoulli,
A  ~ G*D,
prior = c( prior( normal(0, 1), class = Intercept),
prior( normal(0, 1), class = b)),
iter = 5000, warmup = 1000, chains = 4,
seed = 3,
file = here("files/models/51.2")
)
new_dat = expand.grid(G = c("1", "2"),
D = c("1", "2"))
m1 %>% add_epred_draws(newdata = new_dat) %>%
median_qi
m2 %>% add_epred_draws(newdata = new_dat) %>%
median_qi
m1 %>% add_predicted_draws(newdata = new_dat) %>%
median_qi
m1
m1 %>% add_predicted_draws(newdata = new_dat)
m1 %>% add_predicted_draws(newdata = new_dat) %>%
mean_qi
m2 %>% add_predicted_draws(newdata = new_dat) %>%
mean_qi
m1 %>% add_epred_draws(newdata = new_dat) %>%
median_qi
m2 %>% add_epred_draws(newdata = new_dat) %>%
median_qi
new_dat %>%
add_epred_draws(m2) %>%
add_predicted_draws(m2)
m2_epred = add_epred_draws(new_dat, m2)
m2_pred = add_predicted_draws(new_dat, m2)
full_join(m2_epred, m2_pred)
full_join(m2_epred, m2_pred) %>%
ggplot(aes(x = .epred)) +
geom_density() +
facet_grid(G~D)
full_join(m2_epred, m2_pred) %>%
ggplot(aes(x = .epred)) +
geom_density(aes(color = "estimated means")) +
geom_density(aes(x = .prediction, color = "prediction")) +
facet_grid(G~D)
full_join(m2_epred, m2_pred) %>%
ggplot(aes(x = .epred)) +
geom_density(aes(color = "estimated means")) +
geom_bar(aes(x = .prediction, stat="density", color = "prediction")) +
facet_grid(G~D)
full_join(m2_epred, m2_pred) %>%
pivot_longer(cols = c(".epred", ".prediction"))
full_join(m2_epred, m2_pred) %>%
pivot_longer(cols = c(".epred", ".prediction")) %>%
ggplot(aes(x = value)) +
geom_histogram() +
facet_grid(name~D)
full_join(m2_epred, m2_pred) %>%
pivot_longer(cols = c(".epred", ".prediction")) %>%
ggplot(aes(x = value,fill=G)) +
geom_histogram() +
facet_grid(name~D)
full_join(m2_epred, m2_pred) %>%
pivot_longer(cols = c(".epred", ".prediction")) %>%
ggplot(aes(x = value,fill=G)) +
geom_histogram(position="dodge") +
facet_grid(name~D)
m1_epred = add_epred_draws(new_dat, m1)
m1_pred = add_predicted_draws(new_dat, m1)
full_join(m1_epred, m1_pred) %>%
pivot_longer(cols = c(".epred", ".prediction")) %>%
ggplot(aes(x = value)) +
geom_histogram(position="dodge") +
facet_grid(name~G)
full_join(m1_epred, m1_pred) %>%
pivot_longer(cols = c(".epred", ".prediction")) %>%
ggplot(aes(x = value)) +
geom_histogram(position="dodge") +
facet_grid(name~G, scales="free")
full_join(m1_epred, m1_pred) %>%
pivot_longer(cols = c(".epred", ".prediction")) %>%
ggplot(aes(x = value)) +
geom_histogram(position="dodge") +
facet_grid(name~G, scales="free_x")
full_join(m1_epred, m1_pred) %>%
pivot_longer(cols = c(".epred", ".prediction")) %>%
ggplot(aes(x = value)) +
geom_histogram(position="dodge") +
facet_grid(G~name, scales="free")
m3 %>%
spread_draws(b_genderfemale, b_gendermale) %>%
mutate(
across(starts_with("b"),
rethinking::inv_logit),
diff = b_genderfemale - b_gendermale)  %>%
ggplot(aes(x = diff)) +
geom_density(color ="#1c5253", linewidth = 2) +
labs(x = "P_female - P_male")
m4 <- brm(
data = UCBadmit,
family = binomial,
admit | trials(applications) ~ gender*dept,
prior = c( prior( normal(0, 2), class = Intercept),
prior( normal(0, 2), class = b) ),
iter = 5000, warmup = 1000, chains = 4,
seed = 3,
file = here("files/models/51.4")
)
m4 %>%
spread_draws(b_Intercept, b_gendermale, b_deptB, b_deptC,
b_deptD, b_deptE, b_deptF,
`b_gendermale:deptB`,`b_gendermale:deptC`,
`b_gendermale:deptD`, `b_gendermale:deptE`,
`b_gendermale:deptF`) %>%
mutate(
A_female = b_Intercept,
B_female = b_Intercept + b_deptB,
C_female = b_Intercept + b_deptC,
D_female = b_Intercept + b_deptD,
E_female = b_Intercept + b_deptE,
F_female = b_Intercept + b_deptF,
A_male = b_Intercept + b_gendermale,
B_male = b_Intercept + b_gendermale + `b_gendermale:deptB`,
C_male = b_Intercept + b_gendermale + `b_gendermale:deptC`,
D_male = b_Intercept + b_gendermale + `b_gendermale:deptD`,
E_male = b_Intercept + b_gendermale + `b_gendermale:deptE`,
F_male = b_Intercept + b_gendermale + `b_gendermale:deptF`
) %>%
select(.draw, A_female:F_male) %>%
pivot_longer(-.draw,
names_to = c("dept", "gender"),
names_sep = "_") %>%
mutate(value = rethinking::inv_logit(value)) %>%
pivot_wider(names_from = gender, values_from = value) %>%
mutate(diff = female-male) %>%
ggplot(aes(x = diff, color = dept)) +
geom_density(linewidth = 2) +
labs(x = "P_female - P_male") +
guides(color = "none")
new_dat = distinct(UCBadmit, gender, dept)
# Chunk 1
library(tidyverse)
library(psych)
library(cowplot)
library(patchwork)
library(here)
library(brms)
library(tidybayes)
# Chunk 2
knitr::opts_chunk$set(fig.retina=3, echo=TRUE)
theme_set(theme_cowplot())
default_palettes <- list(
c("#5e8485" , "#0f393a") ,
c("#1c5253" , "#5e8485" , "#0f393a") ,
# palette with 5 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" ) ,
# same palette interpolated to 8 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
# Chunk 3: entropy-viz
#| code-fold: true
#|
# Create example data
set.seed(123)
# Low entropy data (concentrated around a single value)
low_entropy <- data.frame(
value = sample(x = c(1:6), 10000, replace = T, prob = c(.3, .25, .2, .1, .05, 0)),
type = "Low Entropy"
)
# High entropy data (more spread out, more uniform)
high_entropy <- data.frame(
value = sample(x = c(1:6), 10000, replace = T),
type = "High Entropy"
)
# Combine the data
entropy_data <- rbind(low_entropy, high_entropy)
# Create the plots
ggplot(entropy_data, aes(x = value)) +
geom_histogram(fill = "#1c5253", alpha = 0.5, binwidth = 1, color = "white") +
facet_wrap(~type) +
labs(title = "Comparing High and Low Entropy Distributions",
x = "Value",
y = "Density") +
theme_cowplot() +
theme(strip.background = element_rect(fill = "#1c5253"),
strip.text = element_text(color = "white", size = 12))
# Chunk 4: binomial-viz
#| code-fold: true
# Create data for different rate parameters
x <- seq(0, 100, by=1)
N <- c(1, 5, 100)
p = c(.25, .40, .70)
binom_data <- expand.grid(x = x, N=N, p=p) %>%
filter(x <= N) %>%
mutate(density = dbinom(x, prob = p, size=N),
p=str_c("p = ", p),
N = factor(N, levels=c(1, 5, 100), labels=c("001", "005", "100")),
N=str_c("N = ",N))
ggplot(binom_data, aes(x = x, y = density, fill = p)) +
#geom_line(linewidth = 1) +
geom_bar(stat="identity") +
labs(title = "Binomial Distribution with Different Parameters",
x = "x",
y = "Density",
color = "p") +
theme_cowplot() +
facet_wrap(p~N, scales="free") +
guides(color=F, fill=F)
# Chunk 5: exponential-viz
#| code-fold: true
# Create data for different rate parameters
x <- seq(0, 5, length.out = 1000)
rates <- c(0.5, 1, 2)
exp_data <- expand.grid(x = x, rate = rates) %>%
mutate(density = dexp(x, rate),
rate = factor(rate, labels = paste("λ =", rates)))
ggplot(exp_data, aes(x = x, y = density, color = rate)) +
geom_line(size = 1) +
labs(title = "Exponential Distribution with Different Rate Parameters",
x = "x",
y = "Density",
color = "Rate") +
theme_cowplot() +
scale_color_manual(values = c("#1c5253", "#5e8485", "#0f393a"))
# Chunk 6: gamma-viz
#| code-fold: true
# Create data for different shape parameters
x <- seq(0, 10, length.out = 1000)
shapes <- list(c(1, 1), c(2, 2), c(5, 1))
names <- c("a=1, b=1", "a=2, b=2", "a=5, b=1")
gamma_data <- map_df(seq_along(shapes), function(i) {
data.frame(
x = x,
density = dgamma(x, shape = shapes[[i]][1], rate = shapes[[i]][2]),
params = names[i]
)
})
ggplot(gamma_data, aes(x = x, y = density, color = params)) +
geom_line(size = 1) +
labs(title = "Gamma Distribution with Different Shape and Rate Parameters",
x = "x",
y = "Density",
color = "Parameters") +
theme_cowplot() +
scale_color_manual(values = c("#1c5253", "#5e8485", "#0f393a"))
# Chunk 7: poisson-viz
#| code-fold: true
# Create data for different lambda parameters
x <- 0:15
lambdas <- c(1, 3, 7)
pois_data <- expand.grid(x = x, lambda = lambdas) %>%
mutate(probability = dpois(x, lambda),
lambda = factor(lambda, labels = paste("λ =", lambdas)))
ggplot(pois_data, aes(x = x, y = probability, fill = lambda)) +
geom_col(position = "dodge", alpha = 0.7) +
labs(title = "Poisson Distribution with Different Rate Parameters",
x = "Count",
y = "Probability",
fill = "Lambda") +
theme_cowplot() +
scale_fill_manual(values = c("#1c5253",  "#e07a5f", "#f2cc8f"))
# Chunk 8
# generative model, basic mediator scenario
set.seed(0319)
N <- 1000 # number of applicants
# even gender distribution
G <- sample( 1:2, size=N, replace=TRUE )
# gender 1 tends to apply to department 1, 2 to 2
D <- rbinom( n=N, size=1, prob=ifelse( G==1 , 0.3 , 0.8 ) ) + 1
# matrix of acceptance rates
accept_rate <- matrix( c(0.5, 0.2, 0.1, 0.3), nrow=2)
# simulate acceptance
A <- rbinom( n=N, size=1, accept_rate[D,G])
dat <- data.frame(D=as.character(D), G=as.character(G), A)
# Chunk 9
m1 = brm(
data = dat,
family = bernoulli,
A  ~ 0 + G,
prior = c( prior( normal(0, 1), class = b)),
iter = 5000, warmup = 1000, chains = 4,
seed = 3,
file = here("files/models/51.1")
)
# Chunk 10
m1
# Chunk 11
m2 = brm(
data = dat,
family = bernoulli,
A  ~ G*D,
prior = c( prior( normal(0, 1), class = Intercept),
prior( normal(0, 1), class = b)),
iter = 5000, warmup = 1000, chains = 4,
seed = 3,
file = here("files/models/51.2")
)
# Chunk 12
m2
# Chunk 13
#| code-fold: true
posterior_summary(m1) %>% round(2)
# Chunk 14
#| code-fold: true
posterior_summary(m2) %>% round(2)
# Chunk 15
new_dat = expand.grid(G = c("1", "2"),
D = c("1", "2"))
m1 %>% add_epred_draws(newdata = new_dat) %>%
median_qi
m2 %>% add_epred_draws(newdata = new_dat) %>%
median_qi
# Chunk 16
m1 %>% add_predicted_draws(newdata = new_dat) %>%
mean_qi
m2 %>% add_predicted_draws(newdata = new_dat) %>%
mean_qi
# Chunk 17
#| code-fold: true
m1_epred = add_epred_draws(new_dat, m1)
m1_pred = add_predicted_draws(new_dat, m1)
full_join(m1_epred, m1_pred) %>%
pivot_longer(cols = c(".epred", ".prediction")) %>%
ggplot(aes(x = value)) +
geom_histogram(position="dodge") +
facet_grid(G~name, scales="free")
# Chunk 19
data(UCBadmit, package = "rethinking")
UCBadmit$gender = UCBadmit$applicant.gender
m3 <- brm(
data = UCBadmit,
family = binomial,
admit | trials(applications) ~ 0 + gender,
prior = c( prior( normal(0, 2), class = b) ),
iter = 5000, warmup = 1000, chains = 4,
seed = 3,
file = here("files/models/51.3")
)
# Chunk 20
m4 <- brm(
data = UCBadmit,
family = binomial,
admit | trials(applications) ~ gender*dept,
prior = c( prior( normal(0, 2), class = Intercept),
prior( normal(0, 2), class = b) ),
iter = 5000, warmup = 1000, chains = 4,
seed = 3,
file = here("files/models/51.4")
)
# Chunk 21
get_variables(m3)
m3 %>%
spread_draws(b_genderfemale, b_gendermale)
# Chunk 22
get_variables(m4)
m4 %>%
spread_draws(b_Intercept, b_gendermale, b_deptB, b_deptC,
b_deptD, b_deptE, b_deptF,
`b_gendermale:deptB`,`b_gendermale:deptC`,
`b_gendermale:deptD`, `b_gendermale:deptE`,
`b_gendermale:deptF`)
# Chunk 23
UCBadmit %>% add_epred_draws(m3) %>%
ungroup() %>%
select(dept, gender, applications, admit, reject, .draw, .epred)
# Chunk 24: m3-posterior-fig
m3 %>%
spread_draws(b_genderfemale, b_gendermale) %>%
mutate(
across(starts_with("b"),
rethinking::inv_logit),
diff = b_genderfemale - b_gendermale)  %>%
ggplot(aes(x = diff)) +
geom_density(color ="#1c5253", linewidth = 2) +
labs(x = "P_female - P_male")
new_dat = distinct(UCBadmit, gender, dept)
View(new_dat)
add_epred_draws(new_dat, m4)
new_dat = distinct(UCBadmit, gender, dept) %>%
mutate(applications = 100)
add_epred_draws(new_dat, m4)
new_dat = distinct(UCBadmit, gender, dept) %>%
mutate(applications = 1e5)
add_epred_draws(new_dat, m4)
add_epred_draws(new_dat, m4) %>%
pivot_wider(names_from = gender, values_from = .epred)
add_epred_draws(new_dat, m4) %>%
select(dept, gender, .draw, .epred) %>%
pivot_wider(names_from = gender, values_from = .epred)
add_epred_draws(new_dat, m4) %>%
ungroup() %>%
select(dept, gender, .draw, .epred) %>%
pivot_wider(names_from = gender, values_from = .epred)
add_epred_draws(new_dat, m4) %>%
ungroup() %>%
select(dept, gender, .draw, .epred) %>%
pivot_wider(names_from = gender, values_from = .epred) %>%
mutate(diff = P_female-P_male)
add_epred_draws(new_dat, m4) %>%
ungroup() %>%
select(dept, gender, .draw, .epred) %>%
pivot_wider(names_from = gender, values_from = .epred) %>%
mutate(diff = female-male)
add_epred_draws(new_dat, m4) %>%
ungroup() %>%
select(dept, gender, .draw, .epred) %>%
pivot_wider(names_from = gender, values_from = .epred) %>%
mutate(diff = (female-male)/1e5)
add_epred_draws(new_dat, m4) %>%
ungroup() %>%
select(dept, gender, .draw, .epred) %>%
pivot_wider(names_from = gender, values_from = .epred) %>%
mutate(diff = (female-male)/1e5) %>%
ggplot(aes(x = diff, color = dept)) +
geom_density()
new_dat = distinct(UCBadmit, gender, dept) %>%
mutate(applications = 1e5)
add_epred_draws(new_dat, m4) %>%
ungroup() %>%
select(dept, gender, .draw, .epred) %>%
pivot_wider(names_from = gender, values_from = .epred) %>%
mutate(diff = (female-male)/1e5) %>%
ggplot(aes(x = diff, color = dept)) +
geom_density(linewidth = 2) +
labs(x = "P_female - P_male") +
guides(color = "none")
new_dat = distinct(UCBadmit, gender, dept) %>%
mutate(applications = 1e5)
add_predicted_draws(new_dat, m4) %>%
ungroup() %>%
select(dept, gender, .draw, .prediction) %>%
pivot_wider(names_from = gender, values_from = .prediction) %>%
mutate(diff = (female-male)/1e5) %>%
ggplot(aes(x = diff, color = dept)) +
geom_density(linewidth = 2) +
labs(x = "P_female - P_male") +
guides(color = "none")
m3_epred = UCBadmit %>% add_epred_draws(m3) %>%
mutate(prob = .epred/applications) %>%
median_qi(prob) %>%
mutate(model = "m3")
m4_epred = UCBadmit %>% add_epred_draws(m4) %>%
mutate(prob = .epred/applications) %>%
median_qi(prob) %>%
mutate(model = "m4")
m3_epred %>% full_join(m4_epred) %>%
ggplot(
aes(x = dept, y = prob, color = gender)
) +
geom_errorbar(
aes(ymin = .lower, ymax=.upper),
width = .5) +
geom_point() +
facet_wrap(~model)
