c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
#| code-fold: true
p1 = predicted_draws(object = m2, newdata = nd) %>%
mutate(model = "simple")
p2 = predicted_draws(object = m2_complex, newdata = nd) %>%
mutate(model = "complex")
p1 %>% full_join(p2) %>%
mutate(
intention=as.character(intention),
action  = str_c("action = ",  action),
contact = str_c("contact = ", contact)) %>%
count(model, action, contact, intention, .prediction) %>%
ggplot( aes(x=.prediction, y=n,
color=interaction(intention,model,
sep="-",lex.order=TRUE)) )+
geom_point() +
geom_line(aes(group=interaction(intention,model,sep="-",lex.order=TRUE))) +
facet_grid(~action+contact) +
scale_color_manual(values = c("#1c5253" , "#e07a5f", "#5e8485", "#f2cc8f")) +
labs( x="response",
y="count",
color = "intention+model")
p1 %>% full_join(p2) %>%
mutate(
intention=as.character(intention),
action  = str_c("action = ",  action),
contact = str_c("contact = ", contact)) %>%
count(model, action, contact, intention, .prediction) %>%
ggplot( aes(x=.prediction, y=n,
color=interaction(intention,model,
sep="-",lex.order=TRUE)) )+
geom_point() +
geom_line(aes(group=interaction(intention,model,sep="-",lex.order=TRUE))) +
facet_grid(~action+contact) +
labs( x="response",
y="count",
color = "intention+model")
#| code-fold: true
nd <- distinct(
trolley,
action, contact, intention, edu_new
)
# Chunk 1
library(tidyverse)
library(psych)
library(cowplot)
library(patchwork)
library(here)
library(brms)
library(tidybayes)
# Chunk 2
knitr::opts_chunk$set(fig.retina=3, echo=TRUE)
theme_set(theme_cowplot())
default_palettes <- list(
c("#5e8485" , "#0f393a") ,
c("#1c5253" , "#5e8485" , "#0f393a") ,
c("#1c5253" , "#e07a5f", "#5e8485", "#de9b8a"),
# palette with 5 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" ) ,
# same palette interpolated to 8 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
# Chunk 3
data(Trolley, package = "rethinking")
trolley <- Trolley
head(trolley)
# Chunk 4
trolley %>%
ggplot(aes( x=response )) +
geom_histogram()
# Chunk 5
#| code-fold: true
trolley %>%
count(response) %>%
mutate(pr_k     = n/nrow(trolley),
cum_pr_k = cumsum(pr_k)) %>%
ggplot(aes(x = response, y = cum_pr_k)) +
geom_point(size = 3, color = "#1c5253") +
geom_line(color = "#1c5253", alpha = .3) +
labs(x = "response",
y = "cumulative probability")
# Chunk 6
#| code-fold: true
# primary data
trolley_plot <-
trolley %>%
count(response) %>%
mutate(pr_k     = n / nrow(trolley),
cum_pr_k = cumsum(n / nrow(trolley))) %>%
mutate(discrete_probability = ifelse(response == 1, cum_pr_k, cum_pr_k - pr_k))
# annotation
text <-
tibble(text     = 1:7,
response = seq(from = 1.25, to = 7.25, by = 1),
cum_pr_k = trolley_plot$cum_pr_k - .065)
trolley_plot %>%
ggplot(aes(x = response, y = cum_pr_k,
color = cum_pr_k, fill = cum_pr_k)) +
geom_line() +
geom_point(shape = 21, colour = "grey92",
size = 2.5, stroke = 1) +
geom_linerange(aes(ymin = 0, ymax = cum_pr_k),
alpha = 1/2) +
geom_linerange(aes(x = response + .025,
ymin = ifelse(response == 1, 0, discrete_probability),
ymax = cum_pr_k),
color = "black") +
# number annotation
geom_text(data = text,
aes(label = text),
size = 4) +
scale_x_continuous(breaks = 1:7) +
scale_y_continuous("cumulative proportion", breaks = c(0, .5, 1),
limits = c(0, 1.1)) +
theme(axis.ticks = element_blank(),
axis.title.y = element_text(angle = 90),
legend.position = "none")
# Chunk 7
m1 <- brm(
data = trolley,
family = cumulative,
response ~ 1,
prior = c( prior(normal(0, 1.5), class = Intercept) ),
iter=2000, warmup=1000, cores=4, chains=4,
file=here("files/models/62.1")
)
# Chunk 8
summary(m1)
# Chunk 9
gather_draws(m1, `b_.*`, regex=T) %>%
mutate(.value = inv_logit_scaled(.value)) %>%
mean_qi
# Chunk 10
#| code-fold: true
predicted_draws(m1, newdata = data.frame(1)) %>%
count(.prediction) %>%
mutate(pr_k = n / sum(n)) %>%
ggplot(aes(x = .prediction, y = pr_k)) +
geom_col(fill = "#1c5253", alpha = 0.7) +
geom_point(data = trolley_plot, aes(x = response),
color = "#3d405b", size = 2) +
labs(x = "response",
y = "probability",
title = "Posterior Predictive Distribution")
# Chunk 11
#| code-fold: true
m2 <- brm(
data = trolley,
family = cumulative,
response ~ 1 + action + contact + intention,
prior = c( prior(normal(0, 1.5), class = Intercept),
prior(normal(0, 0.5), class = b)),
iter=2000, warmup=1000, cores=4, chains=4,
file=here("files/models/62.2")
)
m2
# Chunk 12
#| code-fold: true
gather_draws(m2, `b_.*`, regex=T) %>%
filter(!str_detect(.variable, "[0-9]")) %>%
mutate(.variable = str_remove(.variable, "b_")) %>%
ggplot( aes(x = .value, y = .variable) ) +
geom_vline( aes(xintercept = 0), linetype = "dashed", alpha = .3 ) +
stat_dist_halfeye(fill = "#5e8485") +
scale_x_continuous("marginal posterior", breaks = -5:0 / 4) +
scale_y_discrete(NULL)
# Chunk 13
nd <-
trolley %>%
distinct(action, contact, intention) %>%
mutate(combination = str_c(action, contact, intention, sep = "_"))
f <- predicted_draws( m2 , newdata = nd )
f
# Chunk 14
#| code-fold: true
f %>%
as.data.frame() %>%
mutate(
across( c(action, contact, intention) ,
as.character),
action  = str_c("action = ",  action),
contact = str_c("contact = ", contact)) %>%
count(action, contact, intention, .prediction) %>%
ggplot( aes(x=.prediction, y=n, color=intention) )+
geom_point() +
geom_line(aes(group=intention)) +
facet_grid(~action+contact) +
labs( x="response",
y="count" )
# Chunk 15
#| code-fold: true
m2_complex <- brm(
data = trolley,
family = cumulative,
response ~ 1 + action + contact + intention +
action:intention + contact:intention,
prior = c(prior(normal(0, 1.5), class = Intercept),
prior(normal(0, 0.5), class = b)),
iter = 2000, warmup = 1000, cores = 4, chains = 4,
file=here("files/models/62.2com")
)
# Chunk 16
m2  <-       add_criterion(m2,        "loo")
m2_complex <- add_criterion(m2_complex, "loo")
loo_compare(m2, m2_complex, criterion = "loo") %>%
print(simplify = F)
m2  <-       add_criterion(m2,        "waic")
m2_complex <- add_criterion(m2_complex, "waic")
loo_compare(m2, m2_complex, criterion = "waic") %>%
print(simplify = F)
# Chunk 17
#| code-fold: true
predicted_draws(object = m2_complex, newdata = nd) %>%
mutate(
intention=as.character(intention),
action  = str_c("action = ",  action),
contact = str_c("contact = ", contact)) %>%
count(action, contact, intention, .prediction) %>%
ggplot( aes(x=.prediction, y=n, color=intention) )+
geom_point() +
geom_line(aes(group=intention)) +
facet_grid(~action+contact) +
labs( x="response",
y="count" )
# Chunk 18
#| code-fold: true
p1 = predicted_draws(object = m2, newdata = nd) %>%
mutate(model = "simple")
p2 = predicted_draws(object = m2_complex, newdata = nd) %>%
mutate(model = "complex")
p1 %>% full_join(p2) %>%
mutate(
intention=as.character(intention),
action  = str_c("action = ",  action),
contact = str_c("contact = ", contact)) %>%
count(model, action, contact, intention, .prediction) %>%
ggplot( aes(x=.prediction, y=n,
color=interaction(intention,model,
sep="-",lex.order=TRUE)) )+
geom_point() +
geom_line(aes(group=interaction(intention,model,sep="-",lex.order=TRUE))) +
facet_grid(~action+contact) +
labs( x="response",
y="count",
color = "intention+model")
# Chunk 19
distinct(trolley, edu)
trolley <-
trolley %>%
mutate(edu_new =
recode(edu,
"Elementary School" = 1,
"Middle School" = 2,
"Some High School" = 3,
"High School Graduate" = 4,
"Some College" = 5,
"Bachelor's Degree" = 6,
"Master's Degree" = 7,
"Graduate Degree" = 8) %>%
as.integer())
m3 <-
brm(data = trolley,
family = cumulative,
response ~ 1 + action + contact + intention + mo(edu_new),  # note the `mo()` syntax
prior = c(prior(normal(0, 1.5), class = Intercept),
prior(normal(0, 1), class = b),
# note the new kinds of prior statements
prior(normal(0, 0.143), class = b, coef = moedu_new),
prior(dirichlet(2, 2, 2, 2, 2, 2, 2), class = simo, coef = moedu_new1)),
iter = 2000, warmup = 1000, cores = 4, chains = 4,
seed = 12,
file = here("files/models/61.3"))
m3
m3 <-
brm(data = trolley,
family = cumulative,
response ~ 1 + action + contact + intention + mo(edu_new),  # note the `mo()` syntax
prior = c(prior(normal(0, 1.5), class = Intercept),
prior(normal(0, 1), class = b),
# note the new kinds of prior statements
prior(normal(0, 0.143), class = b, coef = moedu_new),
prior(dirichlet(2, 2, 2, 2, 2, 2, 2), class = simo, coef = moedu_new1)),
iter = 2000, warmup = 1000, cores = 4, chains = 4,
seed = 12,
file = here("files/models/62.3"))
m4
m3
#| code-fold: true
nd <- distinct(
trolley,
action, contact, intention, edu_new
)
predicted_draws(m3, nd) %>%
ungroup() %>%
count(edu_new, .prediction) %>%
with_groups(edu_new, mutate, total=sum(n)) %>%
mutate(pk = n/total,
.prediction = as.numeric(.prediction),
edu_new = as.factor(edu_new)) %>%
ggplot(aes(x = .prediction,  y = pk, color = edu_new)) +
geom_point() +
geom_line() +
labs( x="response",
y="probability" ) +
theme(legend.position = "top")
#| code-fold: true
# Fit model with regular categorical education
m3_cat <- brm(
data = trolley,
family = cumulative,
response ~ 1 + action + contact + intention + edu,
prior = c(prior(normal(0, 1.5), class = Intercept),
prior(normal(0, 1), class = b)),
iter = 2000, warmup = 1000, cores = 4, chains = 4,
file=here("files/models/61.3cat")
)
m3_cat
#| code-fold: true
# Fit model with regular categorical education
m3_cat <- brm(
data = trolley,
family = cumulative,
response ~ 1 + action + contact + intention + edu,
prior = c(prior(normal(0, 1.5), class = Intercept),
prior(normal(0, 1), class = b)),
iter = 2000, warmup = 1000, cores = 4, chains = 4,
file=here("files/models/62.3cat")
)
m3_cat
#| code-fold: true
nd <- distinct(
trolley,
action, contact, intention, edu
)
predicted_draws(m3_cat, nd) %>%
ungroup() %>%
count(edu_new, .prediction) %>%
with_groups(edu, mutate, total=sum(n)) %>%
mutate(pk = n/total,
.prediction = as.numeric(.prediction),
edu_new = as.factor(edu)) %>%
ggplot(aes(x = .prediction,  y = pk, color = edu)) +
geom_point() +
geom_line() +
labs( x="response",
y="probability" ) +
theme(legend.position = "top")
#| code-fold: true
nd <- distinct(
trolley,
action, contact, intention, edu
)
predicted_draws(m3_cat, nd) %>%
ungroup() %>%
count(edu, .prediction) %>%
with_groups(edu, mutate, total=sum(n)) %>%
mutate(pk = n/total,
.prediction = as.numeric(.prediction),
edu_new = as.factor(edu)) %>%
ggplot(aes(x = .prediction,  y = pk, color = edu)) +
geom_point() +
geom_line() +
labs( x="response",
y="probability" ) +
theme(legend.position = "top")
#| code-fold: true
nd <- distinct(
trolley,
action, contact, intention, edu
)
predicted_draws(m3_cat, nd) %>%
ungroup() %>%
count(edu, .prediction) %>%
mutate(
edu = factor(edu,
levels = c(
"Elementary School",
"Middle School",
"Some High School",
"High School Graduate",
"Some College" ,
"Bachelor's Degree",
"Master's Degree",
"Graduate Degree"))) %>%
with_groups(edu, mutate, total=sum(n)) %>%
mutate(pk = n/total,
.prediction = as.numeric(.prediction),
edu_new = as.factor(edu)) %>%
ggplot(aes(x = .prediction,  y = pk, color = edu)) +
geom_point() +
geom_line() +
labs( x="response",
y="probability" ) +
theme(legend.position = "top")
p1 <- epred_draws(m3, newdata = distinct(trolley, action, contact, intention, edu_new))
p1
p1 <- predicted_draws(m3, newdata = distinct(trolley, action, contact, intention, edu_new))
p1
p2 <- predicted_draws(m3cat, newdata = distinct(trolley, action, contact, intention, edu))
p2 <- predicted_draws(m3_cat, newdata = distinct(trolley, action, contact, intention, edu))
p2
p1
p1 <- predicted_draws(m3, newdata = distinct(trolley, action, contact, intention, edu_new)) %>%
mutate(model = "ordered",
edu = factor(edu_new, labels = c(levels = c(
"Elementary School",
"Middle School",
"Some High School",
"High School Graduate",
"Some College" ,
"Bachelor's Degree",
"Master's Degree",
"Graduate Degree"))))
p1 <- predicted_draws(m3, newdata = distinct(trolley, action, contact, intention, edu_new)) %>%
mutate(model = "ordered",
edu = factor(edu_new, labels = c(
"Elementary School",
"Middle School",
"Some High School",
"High School Graduate",
"Some College" ,
"Bachelor's Degree",
"Master's Degree",
"Graduate Degree"))))
p1 <- predicted_draws(m3, newdata = distinct(trolley, action, contact, intention, edu_new)) %>%
mutate(model = "ordered",
edu = factor(edu_new, labels = c(
"Elementary School",
"Middle School",
"Some High School",
"High School Graduate",
"Some College" ,
"Bachelor's Degree",
"Master's Degree",
"Graduate Degree")))
p1 <- predicted_draws(m3, newdata = distinct(trolley, action, contact, intention, edu_new)) %>%
mutate(model = "ordered",
edu = factor(edu_new,
levels = c(1:8),
labels = c(
"Elementary School",
"Middle School",
"Some High School",
"High School Graduate",
"Some College" ,
"Bachelor's Degree",
"Master's Degree",
"Graduate Degree")))
p2 <- predicted_draws(m3_cat, newdata = distinct(trolley, action, contact, intention, edu)) %>%
mutate(model = "categorical")
full_join(p1, p2)
full_join(p1, p2) %>%
ungroup() %>%
count(model, edu, .prediction) %>%
with_groups(c(model,edu), mutate, total = sum(n)) %>%
mutate(pk = n/total,
.prediction = as.numeric(.prediction)) %>%
ggplot(aes(x = .prediction, y = pk, color = edu)) +
geom_point() +
geom_line() +
labs(x = "response", y = "probability", title = "Categorical Model") +
theme(legend.position = "top")
full_join(p1, p2) %>%
ungroup() %>%
count(model, edu, .prediction) %>%
with_groups(c(model,edu), mutate, total = sum(n)) %>%
mutate(pk = n/total,
.prediction = as.numeric(.prediction)) %>%
ggplot(aes(x = .prediction, y = pk, color = edu)) +
geom_point(aes(shape = model)) +
geom_line(aes(linetype = model)) +
labs(x = "response", y = "probability", title = "Categorical Model") +
theme(legend.position = "top")
full_join(p1, p2) %>%
ungroup() %>%
count(model, edu, .prediction) %>%
with_groups(c(model,edu), mutate, total = sum(n)) %>%
mutate(pk = n/total,
.prediction = as.numeric(.prediction)) %>%
ggplot(aes(x = .prediction, y = pk, color = edu)) +
geom_point(aes(shape = model)) +
geom_line(aes(linetype = model)) +
labs(x = "response", y = "probability", title = "Categorical Model") +
facet_wrap(~edu) +
theme(legend.position = "top")
full_join(p1, p2) %>%
ungroup() %>%
count(model, edu, .prediction) %>%
with_groups(c(model,edu), mutate, total = sum(n)) %>%
mutate(pk = n/total,
.prediction = as.numeric(.prediction)) %>%
ggplot(aes(x = .prediction, y = pk, color = edu)) +
geom_point(aes(shape = model)) +
geom_line(aes(linetype = model)) +
labs(x = "response", y = "probability") +
guides(color = "none") +
facet_wrap(~edu) +
theme(legend.position = "top")
m3  <- add_criterion(m3,        "loo")
m3_cat <- add_criterion(m3_cat, "loo")
loo_compare(m3, m3_cat, criterion = "loo") %>%
print(simplify = F)
m3  <- add_criterion(m3,        "waic")
m3_cat <- add_criterion(m3_cat, "waic")
loo_compare(m3, m3_cat, criterion = "waic") %>%
print(simplify = F)
targets::tar_make()
