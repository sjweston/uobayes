geom_density(fill = "grey", color = "white") +
labs(x="Proportion water")
ppd = posterior_predict(m1)
data.frame(obs = ppd) %>%
ggplot(aes(x=obs)) +
geom_density(fill = "grey", color = "white") +
labs(x="Proportion water")
data.frame(obs = ppd) %>%
ggplot(aes(x=obs)) +
geom_histogram() +
labs(x="Proportion water")
prior_pd = posterior_predict(m1p)
data.frame(obs = prior_pd) %>%
ggplot(aes(x=obs)) +
geom_histogram() +
labs(x="Observed water (out of 9)")
data("Howell1", package = "rethinking")
d <- Howell1
runif(1, 20, 60)
y = rnorm(n = 31, mean = 100, sd = 15)
y = rnorm(n = 31, mean = 4, sd = .5)
y
set.seed(9)
y = rnorm(n = 31, mean = 4, sd = .5)
m2 = brm(
data = list(y),
family = gaussian,
y ~ 1,
prior = c(prior( normal(0,10), class=Intercept),
prior( uniform(0, 5), class=sd)),
iter = 5000, warmup = 1000, seed = 3,
)
set.seed(9)
y = rnorm(n = 31, mean = 4, sd = .5)
m2 = brm(
data = list(y=y),
family = gaussian,
y ~ 1,
prior = c(prior( normal(0,10), class=Intercept),
prior( uniform(0, 5), class=sd)),
iter = 5000, warmup = 1000, seed = 3,
)
set.seed(9)
y = rnorm(n = 31, mean = 4, sd = .5)
m2 = brm(
data = list(y=y),
family = gaussian,
y ~ 1,
prior = c(prior( normal(0,10), class=Intercept),
prior( uniform(0, 5), class=sigma)),
iter = 5000, warmup = 1000, seed = 3,
)
set.seed(9)
y = rnorm(n = 31, mean = 4, sd = .5)
m2 = brm(
data = list(y=y),
family = gaussian,
y ~ 1,
prior = c(prior( normal(0,10), class=Intercept),
prior( uniform(0,5), class=sigma)),
iter = 5000, warmup = 1000, seed = 3,
file = here("files/data/generated_data/m21.2")
)
m3p = brm(
data = d2,
family = gaussian,
y ~ 1,
prior = c(prior( normal(130,20), class=Intercept),
prior( uniform(0,25), class=sigma)),
iter = 5000, warmup = 1000, seed = 3,
sample_prior = "only")
data("Howell1", package = "rethinking")
d <- Howell1
str(d)
library(measurements)
d$height <- conv_unit(d$height, from = "cm", to = "feet")
d$weight <- conv_unit(d$weight, from = "kg", to = "lbs")
precis(d)
rethinking::precis(d)
data("Howell1", package = "rethinking")
d <- Howell1
str(d)
library(measurements)
d$height <- conv_unit(d$height, from = "cm", to = "feet")
d$weight <- conv_unit(d$weight, from = "kg", to = "lbs")
rethinking::precis(d)
d2 <- d[ d$age >= 18, ]
m3p = brm(
data = d2,
family = gaussian,
y ~ 1,
prior = c(prior( normal(130,20), class=Intercept),
prior( uniform(0,25), class=sigma)),
iter = 5000, warmup = 1000, seed = 3,
sample_prior = "only")
m3p = brm(
data = d2,
family = gaussian,
weight ~ 1,
prior = c(prior( normal(130,20), class=Intercept),
prior( uniform(0,25), class=sigma)),
iter = 5000, warmup = 1000, seed = 3,
sample_prior = "only")
samples_from_prior = fitted(m3p, summary=F)
samples_from_prior
samples_from_prior = fitted(m3p,
scale="linear",
summary=F)
samples_from_prior
m3p = brm(
data = d2,
family = gaussian,
weight ~ 1,
prior = c(prior( normal(130,20), class=Intercept),
prior( uniform(0,25), class=sigma, lb=0, ub=25)),
iter = 5000, warmup = 1000, seed = 3,
sample_prior = "only")
samples_from_prior = fitted(m3p,
scale="linear",
summary=F)
samples_from_prior
dim(samples_from_prior)
dim(samples_from_prior)
View(samples_from_prior)
data.frame(p = samples_from_prior[, 1]) %>%
ggplot(aes(x=p)) +
geom_density(fill = "grey", color = "white")
data.frame(p = samples_from_prior[, 1]) %>%
ggplot(aes(x=p)) +
geom_density(fill = "grey", color = "white") +
labs(x="Average weight")
prior_pd = posterior_predict(m3p)
prior_pd
View(prior_pd)
dim(prior_pd)
as.data.frame(prior_pd)
as.data.frame(prior_pd) %>%
pivot_longer(everything())
as.data.frame(prior_pd) %>%
pivot_longer(everything()) %>%
ggplot(aes(x=value)) +
geom_histogram() +
labs(x="Observed weights")
plot(m3p)
pairs(m3p)
m3 = brm(
data = d2,
family = gaussian,
weight ~ 1,
prior = c(prior( normal(130,20), class=Intercept),
prior( uniform(0,25), class=sigma, lb=0, ub=25)),
iter = 5000, warmup = 1000, seed = 3,
file = here("files/data/generated_data/m21.3"))
posterior_summary(m3)
plot(m3)
pairs(m3)
posterior_predict(m3)
posterior_predict(m3) %>% dim
posterior_predict(m3) %>%
as.data.frame() %>%
pivot_longer(everything()) %>%
ggplot(aes(x=value)) +
geom_histogram() +
labs(x="Expected observed weights (based on prior)")
posterior_predict(m3) %>%
as.data.frame() %>%
pivot_longer(everything()) %>%
ggplot(aes(x=value)) +
geom_density() +
labs(x="Expected observed weights (based on prior)")
pp_check(m3p)
posterior_predict(m3) %>%
as.data.frame() %>%
pivot_longer(everything()) %>%
ggplot(aes(x=value)) +
geom_density()
pp_check(m3)
#| code-fold: true
posterior_predict(m3) %>%
as.data.frame() %>%
pivot_longer(everything()) %>%
ggplot(aes(x=value)) +
geom_density()
#| code-fold: true
posterior_predict(m3) %>%
as.data.frame() %>%
pivot_longer(everything()) %>%
ggplot(aes(x=value)) +
geom_density(fill = "grey")
#| code-fold: true
posterior_predict(m3) %>%
as.data.frame() %>%
pivot_longer(everything()) %>%
ggplot(aes(x=value)) +
geom_density(fill = "grey", color = "white")
#| code-fold: true
posterior_predict(m3) %>%
as.data.frame() %>%
pivot_longer(everything()) %>%
ggplot(aes(x=value)) +
geom_density(fill = "grey", color = "white") +
geom_density( aes(x = weight), data=d2, inherit.aes = F)
#| code-fold: true
posterior_predict(m3) %>%
as.data.frame() %>%
pivot_longer(everything()) %>%
ggplot(aes(x=value)) +
geom_density(fill = "grey", color = "white") +
geom_density( aes(x = weight), data=d2, inherit.aes = F) +
scale_color_manual( values = c(observed = "white", posterior = "grey"))
#| code-fold: true
posterior_predict(m3) %>%
as.data.frame() %>%
pivot_longer(everything()) %>%
ggplot(aes(x=value)) +
geom_density(fill = "grey", color = "white") +
geom_density( aes(x = weight), data=d2, inherit.aes = F) +
scale_fill_manual( values = c(observed = "white", posterior = "grey"))
d2$height_c = d2$height - mean(d2$height)
m4p = brm(
data = d2,
family = gaussian,
weight ~ 1 + height_c,
prior = c(prior( normal(130,20), class=Intercept),
prior( normal(0,25),   class=b),
prior( uniform(0,25),  class=sigma, lb=0, ub=25)),
iter = 5000, warmup = 1000, seed = 3,
sample_prior = "only")
samples_from_prior = fitted(m4p, summary=F)
samples_from_prior
samples_from_prior = fitted(m4p)
samples_from_prior
samples_from_prior = posterior_samples(m4p)
as_draws_df(mp4)
as_draws_df(m4p)
as_draws_df(m1)
samples_from_post = as_draws_df(m1)
#| code-fold: true
samples_from_prior = as_draws_df(m1p)
samples_from_prior = as_draws_df(m4p)
rethinking::precis(samples_from_prior)
str(samples_from_prior)
samples_from_post = as_draws_df(m1)
samples_from_post %>%
ggplot(aes(x=b_Intercept)) +
geom_density(fill = "grey", color = "white") +
labs(x="Proportion water")
#| code-fold: true
samples_from_prior = as_draws_df(m1p)
samples_from_prior %>%
ggplot(aes(x=b_Intercept)) +
geom_density(fill = "grey", color = "white") +
labs(x="Proportion water", title="Prior")
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_blank()
?geom_abline
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_blank() +
geom_abline( aes(intercept=b_intercept, slope=b_height_c),
data=samples_from_prior[1:50, ])
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_blank() +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_prior[1:50, ])
samples_from_prior = as_draws_df(m4p)
str(samples_from_prior)
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_blank() +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_prior[1:50, ])
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_blank() +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_prior[1:50, ],
alpha=.5)
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_blank() +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_prior[1:50, ],
alpha=.3)
# | code-fold: true
set.seed(9)
samples_from_prior = as_draws_df(m4p)
str(samples_from_prior)
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_blank() +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_prior[1:50, ],
alpha=.3)
psych::describe(d2)
# | code-fold: true
set.seed(9)
samples_from_prior = as_draws_df(m4p)
str(samples_from_prior)
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_blank() +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_prior[1:50, ],
alpha=.3) +
scale_y_continuous("height(feet)",
breaks=seq(4,6,by=.5)+mean(d2$height),
labels=seq(4,6,by=.5))
# | code-fold: true
set.seed(9)
samples_from_prior = as_draws_df(m4p)
str(samples_from_prior)
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_blank() +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_prior[1:50, ],
alpha=.3) +
scale_x_continuous("height(feet)",
breaks=seq(4,6,by=.5)+mean(d2$height),
labels=seq(4,6,by=.5))
# | code-fold: true
set.seed(9)
samples_from_prior = as_draws_df(m4p)
str(samples_from_prior)
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_blank() +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_prior[1:50, ],
alpha=.3) +
scale_x_continuous(name = "height(feet)",
breaks=seq(4,6,by=.5)+mean(d2$height),
labels=seq(4,6,by=.5))
# | code-fold: true
set.seed(9)
samples_from_prior = as_draws_df(m4p)
str(samples_from_prior)
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_blank() +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_prior[1:50, ],
alpha=.3) +
scale_x_continuous(name = "height(feet)",
breaks=seq(4,6,by=.5)-mean(d2$height),
labels=seq(4,6,by=.5))
m4p = brm(
data = d2,
family = gaussian,
weight ~ 1 + height_c,
prior = c(prior( normal(130,20), class=Intercept),
prior( uniform(0,25),   class=b),
prior( uniform(0,25),  class=sigma, lb=0, ub=25)),
iter = 5000, warmup = 1000, seed = 3,
sample_prior = "only")
# | code-fold: true
set.seed(9)
samples_from_prior = as_draws_df(m4p)
str(samples_from_prior)
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_blank() +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_prior[1:50, ],
alpha=.3) +
scale_x_continuous(name = "height(feet)",
breaks=seq(4,6,by=.5)-mean(d2$height),
labels=seq(4,6,by=.5))
m4 = brm(
data = d2,
family = gaussian,
weight ~ 1 + height_c,
prior = c(prior( normal(130,20), class=Intercept),
prior( normal(0,25),   class=b),
prior( uniform(0,25),  class=sigma, lb=0, ub=25)),
iter = 5000, warmup = 1000, seed = 3,
file = here("files/data/generated_data/m21.4"))
set.seed(9)
samples_from_posterior = as_draws_df(m4)
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_point() +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_posterior[1:50, ],
alpha=.3) +
scale_x_continuous(name = "height(feet)",
breaks=seq(4,6,by=.5)-mean(d2$height),
labels=seq(4,6,by=.5))
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_point(alpha=.3) +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_posterior[1:50, ],
alpha=.3) +
scale_x_continuous(name = "height(feet)",
breaks=seq(4,6,by=.5)-mean(d2$height),
labels=seq(4,6,by=.5))
set.seed(9)
samples_from_posterior = as_draws_df(m4)
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_point(alpha=.3) +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_posterior[1:50, ],
alpha=.5) +
scale_x_continuous(name = "height(feet)",
breaks=seq(4,6,by=.5)-mean(d2$height),
labels=seq(4,6,by=.5))
set.seed(9)
samples_from_prior = as_draws_df(m4p)
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_point(alpha=.3) +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_prior[1:50, ],
alpha=.5) +
scale_x_continuous(name = "height(feet)",
color="#1c5253",
breaks=seq(4,6,by=.5)-mean(d2$height),
labels=seq(4,6,by=.5))
set.seed(9)
samples_from_prior = as_draws_df(m4p)
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_point(alpha=.3) +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_prior[1:50, ],
alpha=.5,
color="#1c5253") +
scale_x_continuous(name = "height(feet)",
breaks=seq(4,6,by=.5)-mean(d2$height),
labels=seq(4,6,by=.5))
set.seed(9)
samples_from_prior = as_draws_df(m4p)
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_blank() +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_prior[1:50, ],
alpha=.5,
color="#1c5253") +
scale_x_continuous(name = "height(feet)",
breaks=seq(4,6,by=.5)-mean(d2$height),
labels=seq(4,6,by=.5))
posterior_summary(m4)
set.seed(9)
samples_from_posterior = as_draws_df(m4)
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_point(size=.5) +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_posterior[1:50, ],
alpha=.5,
color="#1c5253") +
scale_x_continuous(name = "height(feet)",
breaks=seq(4,6,by=.5)-mean(d2$height),
labels=seq(4,6,by=.5))
set.seed(9)
samples_from_posterior = as_draws_df(m4)
d2%>%
ggplot(aes(x=height_c, y=weight)) +
geom_point(size=.5) +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_posterior[1:50, ],
alpha=.3,
color="#1c5253") +
scale_x_continuous(name = "height(feet)",
breaks=seq(4,6,by=.5)-mean(d2$height),
labels=seq(4,6,by=.5))
#| code-line-numbers: "6"
m4e = brm(
data = d2,
family = gaussian,
weight ~ 1 + height_c,
prior = c(prior( normal(130,20), class=Intercept),
prior( normal(-5,25),   class=b),
prior( uniform(0,25),  class=sigma, lb=0, ub=25)),
iter = 5000, warmup = 1000, seed = 3,
file=here("files/data/generated_data/m21.4e"))
posterior_summary(m4e)
posterior_summary(m4)
str(prior_pd)
dim(prior_pd)
head(prior_pd)
samples_from_post = as_draws_df(m1)
samples_from_post
ppd = posterior_predict(m1)
ppd
# | code-fold: true
set.seed(9)
samples_from_prior = as_draws_df(m4p)
str(samples_from_prior)
d2 %>%
ggplot(aes(x=height_c, y=weight)) +
geom_blank() +
geom_abline( aes(intercept=b_Intercept, slope=b_height_c),
data=samples_from_prior[1:50, ],
alpha=.3) +
scale_x_continuous(name = "height(feet)",
breaks=seq(4,6,by=.5)-mean(d2$height),
labels=seq(4,6,by=.5))
#| code-line-numbers: "7"
m1p <-
brm(data = list(w = 6),
family = binomial(link = "identity"),
w | trials(9) ~ 0 + Intercept,
prior(beta(1, 1), class = b, lb = 0, ub = 1),
iter = 5000, warmup = 1000, seed = 3, chains=1,
sample_prior = "only")
