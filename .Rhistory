# palette with 5 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" ) ,
# same palette interpolated to 8 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
# Chunk 3
library(brms)
data(reedfrogs, package = "rethinking")
d <- reedfrogs
rm(reedfrogs)
library(tidyverse)
d %>%
glimpse()
d %>%
count(density)
d$tank = factor(d$tank)
d$tank = factor(1:nrow(d))
d$tank
m1 <-
brm(data = d,
family = binomial,
bf(surv | trials(density) ~ 0 + a,
a ~ 0 + tank,
nl = TRUE),
prior(normal(0, 1.5), class = b, nlpar=a),
iter = 2000, warmup = 1000, chains = 4, cores = 4,
seed = 13,
file = "files/models/71.1")
m1 <-
brm(data = d,
family = binomial,
bf(surv | trials(density) ~ 0 + alpha,
alpha ~ 0 + tank,
nl = TRUE),
prior(normal(0, 1.5), class = b, nlpar=alpha),
iter = 2000, warmup = 1000, chains = 4, cores = 4,
seed = 13,
file = "files/models/71.1")
posterior_summary(m1)
posterior_summary(m1)
print(m1)
d
# get posterior
as_draws_df(m1)
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"))
# get posterior
post <- as_draws_df(m1)
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"))
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"),
names_prefix = "b_alpha_tank")
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"),
names_prefix = "b_alpha_tank",
values_to = "logit")
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"),
names_prefix = "b_alpha_tank",
values_to = "logit") %>%
mutate(prob = logistic(logit))
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"),
names_prefix = "b_alpha_tank",
values_to = "logit") %>%
mutate(prob = logistic(logit),
tank = as.numeric(name))
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"),
names_prefix = "b_alpha_tank",
values_to = "logit") %>%
mutate(prob = logistic(logit),
tank = as.numeric(name)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_interval()
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"),
names_prefix = "b_alpha_tank",
values_to = "logit") %>%
mutate(prob = logistic(logit),
tank = as.numeric(name)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_gradientinterval()
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"),
names_prefix = "b_alpha_tank",
values_to = "logit") %>%
mutate(prob = logistic(logit),
tank = as.numeric(name)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_gradientinterval(alpha = .3)
d
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"),
names_prefix = "b_alpha_tank",
values_to = "logit") %>%
mutate(prob = logistic(logit),
tank = as.numeric(name)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_gradientinterval(alpha = .3) +
geom_point( aes(x=as.numeric(tank), y=propsurv))
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"),
names_prefix = "b_alpha_tank",
values_to = "logit") %>%
mutate(prob = logistic(logit),
tank = as.numeric(name)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_gradientinterval(alpha = .3) +
geom_point( aes(x=as.numeric(tank), y=propsurv),
data = d)
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"),
names_prefix = "b_alpha_tank",
values_to = "logit") %>%
mutate(prob = logistic(logit),
tank = as.numeric(name)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_gradientinterval(alpha = .3) +
geom_point( aes(x=as.numeric(tank), y=propsurv),
data=d, color="#1c5253")
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"),
names_prefix = "b_alpha_tank",
values_to = "logit") %>%
mutate(prob = logistic(logit),
tank = as.numeric(name)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_gradientinterval(alpha = .3) +
geom_point( aes(x=as.numeric(tank), y=propsurv),
data=d, color="#5e8485")
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"),
names_prefix = "b_alpha_tank",
values_to = "logit") %>%
mutate(prob = logistic(logit),
tank = as.numeric(name)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_gradientinterval(alpha = .3, color = "white") +
geom_point( aes(x=as.numeric(tank), y=propsurv),
data=d, color="#5e8485")
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"),
names_prefix = "b_alpha_tank",
values_to = "logit") %>%
mutate(prob = logistic(logit),
tank = as.numeric(name)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_gradientinterval(alpha = .3, color = "grey") +
geom_point( aes(x=as.numeric(tank), y=propsurv),
data=d, color="#5e8485")
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"),
names_prefix = "b_alpha_tank",
values_to = "logit") %>%
mutate(prob = logistic(logit),
tank = as.numeric(name)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_gradientinterval(alpha = .3, color="#5e8485") +
geom_point( aes(x=as.numeric(tank), y=propsurv),
data=d)
head(sample_draws(d, 10))
sample_draws(d, 10)
d %>% sample_n(10)
m2 <-
brm(data = d,
family = binomial,
surv | trials(density) ~ 1 + (1 | tank),
prior = c(prior(normal(0, 1.5), class = Intercept),  # alpha bar
prior(exponential(1), class = sd)),        # sigma
iter = 5000, warmup = 1000, chains = 4, cores = 4,
sample_prior = "yes",
seed = 13,
file = here("files/models/71.2"))
print(m2)
posterior_summary(m2)
posterior_summary(m2) %>% round(3)
posterior_summary(m2) %>% round(2)
m1 <- add_criterion(m1, "waic")
m2 <- add_criterion(m2, "waic")
w <- loo_compare(m1, m2, criterion = "waic")
print(w, simplify = F)
gather_draws(m2, "r_tank[tank, Intercept]")
gather_draws(m2, r_tank[tank, ])
gather_draws(m2, r_tank[tank, Intercept])
gather_draws(m2, r_tank[tank, Intercept]) %>%
mutate(prob = logistic(.value))
gather_draws(m2, r_tank[tank, Intercept]) %>%
mutate(prob = logistic(.value)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_gradientinterval(alpha = .3, color="#5e8485") +
geom_point( aes(x=as.numeric(tank), y=propsurv),
data=d)
#average survival
posterior_average(m2)
#average survival
posterior_summary(m2)
#average survival
post_sum = posterior_summary(m2)
average_surv = post_sum["b_Intercept", "Estimate"]
average_surv
average_surv = post_sum["b_Intercept", "Estimate"] %>% logistic()
average_surv
gather_draws(m2, r_tank[tank, Intercept]) %>%
mutate(prob = logistic(.value)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_gradientinterval(alpha = .3, color="#5e8485") +
geom_point( aes(x=as.numeric(tank), y=propsurv),
data=d ) +
geom_hline( aes(yintercept = average_surv) )
gather_draws(m2, r_tank[tank, Intercept]) %>%
mutate(prob = logistic(.value)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_gradientinterval(alpha = .3, color="#5e8485") +
geom_point( aes(x=as.numeric(tank), y=propsurv),
data=d ) +
geom_hline( aes(yintercept = average_surv),
linetype = "dashed")
#| code-fold: true
# get posterior
post <- as_draws_df(m1)
# transform logit to probability
post %>%
pivot_longer(starts_with("b_alpha"),
names_prefix = "b_alpha_tank",
values_to = "logit") %>%
mutate(prob = logistic(logit),
tank = as.numeric(name)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_gradientinterval(alpha = .3, color="#5e8485") +
geom_point( aes(x=as.numeric(tank), y=propsurv),
data=d)
average_surv = post_sum["b_Intercept", "Estimate"]
#average survival
post_sum = posterior_summary(m2)
average_surv = post_sum["b_Intercept", "Estimate"]
gather_draws(m2, r_tank[tank, Intercept]) %>%
mutate(prob = logistic(.value+average_surv)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_gradientinterval(alpha = .3, color="#5e8485") +
geom_point( aes(x=as.numeric(tank), y=propsurv),
data=d ) +
geom_hline( aes(yintercept = logistic(average_surv)),
linetype = "dashed")
#| code-fold: true
# get posterior
post <- as_draws_df(m1)
# transform logit to probability
p1 <- post %>%
pivot_longer(starts_with("b_alpha"),
names_prefix = "b_alpha_tank",
values_to = "logit") %>%
mutate(prob = logistic(logit),
tank = as.numeric(name)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_gradientinterval(alpha = .3, color="#5e8485") +
geom_point( aes(x=as.numeric(tank), y=propsurv),
data=d)
p1
#average survival
post_sum = posterior_summary(m2)
average_surv = post_sum["b_Intercept", "Estimate"]
p2 <- gather_draws(m2, r_tank[tank, Intercept]) %>%
mutate(prob = logistic(.value+average_surv)) %>%
ggplot( aes (x = tank, y = prob)) +
stat_gradientinterval(alpha = .3, color="#5e8485") +
geom_point( aes(x=as.numeric(tank), y=propsurv),
data=d ) +
geom_hline( aes(yintercept = logistic(average_surv)),
linetype = "dashed")
p2
p1 / p2
#| code-fold: true
logit(d$propsurv)
#| code-fold: true
mean(logit(d$propsurv), na.rm = T)
posterior_summary(m2) %>% round(2)
posterior_summary(m2)
gather_draws(m2, r_tank[tank, ])
gather_draws(m2, r_tank[tank, ]) %>%
ggplot(aes( y=tank, x=.value )) +
stat_halfeye()
gather_draws(m2, r_tank[tank, ]) %>%
mean_qi()
gather_draws(m2, r_tank[tank, ]) %>%
mean_qi() %>%
ggplot(aes( y=tank, x=.value )) +
geom_point()
gather_draws(m2, r_tank[tank, ]) %>%
mean_qi() %>%
ggplot(aes( y=tank, x=.value )) +
geom_point() +
geom_errorbar( aes(ymin=lower, ymax=upper )) +
geom_vline(xintercept = 0)
gather_draws(m2, r_tank[tank, ]) %>%
mean_qi() %>%
ggplot(aes( y=tank, x=.value )) +
geom_point() +
geom_errorbar( aes(ymin=.lower, ymax=.upper )) +
geom_vline(xintercept = 0)
gather_draws(m2, r_tank[tank, ]) %>%
mean_qi() %>%
ggplot(aes( y=tank, x=.value )) +
geom_point() +
geom_errorbar( aes(xmin=.lower, xmax=.upper )) +
geom_vline(xintercept = 0)
gather_draws(m2, r_tank[tank, ]) %>%
mean_qi() %>%
ggplot(aes( y=tank, x=.value )) +
geom_point() +
geom_errorbar( aes(xmin=.lower, xmax=.upper ), alpha=.5) +
geom_vline(xintercept = 0)
gather_draws(m2, r_tank[tank, ]) %>%
mean_qi() %>%
ggplot(aes( y=tank, x=.value )) +
geom_point() +
geom_errorbar( aes(xmin=.lower, xmax=.upper ), alpha=.5) +
geom_vline(xintercept = 0) +
labs(x="Varying intercepts")
gather_draws(m2, r_tank[tank, ]) %>%
mean_qi() %>%
mean(.value)
gather_draws(m2, r_tank[tank, ]) %>%
mean_qi() %>%
mean(.$`.value`)
# Try different priors for sigma (tank varying effects SD)
sigmas <- c(0.5, 1, 2, 4)
models <- list()
# Fit models with different priors
for(i in seq_along(sigmas)) {
models[[i]] <- brm(
surv | trials(density) ~ 1 + (1|tank),
data = d,
family = binomial,
prior = c(
prior(normal(0, 1.5), class = "Intercept"),
prior(exponential(1/sigmas[i]), class = "sd")
),
cores = 4,
seed = 123
)
# Add WAIC criterion
models[[i]] <- add_criterion(models[[i]], "waic")
}
# Chunk 1
library(tidyverse)
library(cowplot)
library(brms)
library(tidybayes)
library(patchwork)
library(here)
# Chunk 2
knitr::opts_chunk$set(fig.retina=3, echo=TRUE)
theme_set(theme_cowplot())
default_palettes <- list(
c("#5e8485" , "#0f393a") ,
c("#1c5253" , "#5e8485" , "#0f393a") ,
# palette with 5 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" ) ,
# same palette interpolated to 8 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
#| code-line-numbers: "7-9"
data("Howell1", package = "rethinking")
d <- Howell1
library(measurements)
d$height <- conv_unit(d$height, from = "cm", to = "feet")
d$weight <- conv_unit(d$weight, from = "kg", to = "lbs")
d <- d[d$age >= 18, ]
d$sex <- ifelse(d$male == 1, 2, 1) # 1 = female, 2 = male
d$sex <- factor(d$sex)
head(d[, c("male", "sex")])
table(d$sex)
# Chunk 1
library(tidyverse)
library(cowplot)
library(brms)
library(tidybayes)
library(patchwork)
library(here)
# Chunk 2
knitr::opts_chunk$set(fig.retina=3, echo=TRUE)
theme_set(theme_cowplot())
default_palettes <- list(
c("#5e8485" , "#0f393a") ,
c("#1c5253" , "#5e8485" , "#0f393a") ,
# palette with 5 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" ) ,
# same palette interpolated to 8 colours
c( "#1c5253" , "#e07a5f", "#f2cc8f" , "#81b29a" , "#3d405b" , "#a7a844" , "#69306d" )
)
options(ggplot2.discrete.fill = default_palettes,
ggplot2.discrete.colour = default_palettes)
# Chunk 3
#| code-line-numbers: "7-9"
data("Howell1", package = "rethinking")
d <- Howell1
library(measurements)
d$height <- conv_unit(d$height, from = "cm", to = "feet")
d$weight <- conv_unit(d$weight, from = "kg", to = "lbs")
d <- d[d$age >= 18, ]
d$sex <- ifelse(d$male == 1, 2, 1) # 1 = female, 2 = male
d$sex <- factor(d$sex)
head(d[, c("male", "sex")])
# Chunk 4
#| code-annotations: hover
#|
m1 <- brm(
data = d,
family = gaussian,
bf(weight ~ 0 + a, # <1>
a ~ 0 + sex, # <2>
nl = TRUE), # <3>
prior = c(prior( normal(130, 20), class=b, nlpar = a), # <4>
prior( uniform(0, 25),  class=sigma, ub=25)),
iter = 2000, warmup = 1000, seed = 3, chains=1,
file = here("files/models/22.1")
)
# Chunk 5
posterior_summary(m1)
# Chunk 6
post = as_draws_df(m1)
head(post)
post %>%
mutate(diff_fm = b_a_sex1 - b_a_sex2) %>%
pivot_longer(cols = c(b_a_sex1:sigma, diff_fm)) %>%
group_by(name) %>%
mean_qi(value, .width = .89)
# Chunk 8
# Chunk 9: post-sex2
pred_f  <- rnorm(nrow(post), mean = post$b_a_sex1, sd = post$sigma )
pred_m  <- rnorm(nrow(post), mean = post$b_a_sex2, sd = post$sigma )
pred_post = data.frame(pred_f, pred_m) %>%
mutate(diff = pred_f-pred_m)
head(pred_post)
distinct(d, sex)
predicted_draws(object=m1, newdata=nd)
nd = distinct(d, sex)
predicted_draws(object=m1, newdata=nd)
d$height_c <- d$height - mean(d$height)
m3 <- brm(
data = d,
family = gaussian,
bf(weight ~ 0 + a + b*height_c,
a ~ 0 + sex,
b ~ 0 + sex,
nl = TRUE),
prior = c(prior(normal(130, 20), class = b, nlpar = a),
prior(normal(  0, 25), class = b, nlpar = b),
prior(uniform( 0, 50), class = sigma, lb=0, ub=50)),
iter = 2000, warmup = 1000, seed = 3, chains=1,
file = here("files/models/22.3")
)
as_draws_df(m3)
pivot_longer(starts_with("b"),
names_to = c("parameter","sex"),
names_sep = 3)
as_draws_df(m3) %>%
pivot_longer(starts_with("b"),
names_to = c("parameter","sex"),
names_sep = 3)
as_draws_df(m3) %>%
pivot_longer(starts_with("b"),
names_to = c("parameter","sex"),
names_sep = 3) %>%
mutate(sex = str_extract(sex, "[0-9]"))
as_draws_df(m3) %>%
pivot_longer(starts_with("b"),
names_to = c("parameter","sex"),
names_sep = 3) %>%
mutate(sex = str_extract(sex, "[0-9]")) %>%
pivot_wider(names_from = parameter, values_from = value)
post = as_draws_df(m3) %>%
pivot_longer(starts_with("b"),
names_to = c("parameter","sex"),
names_sep = 3) %>%
mutate(sex = str_extract(sex, "[0-9]")) %>%
pivot_wider(names_from = parameter, values_from = value)
xlabs = seq(4,6,by=.5)
d %>%
ggplot(aes(x=height_c, y=weight)) +
geom_point(aes(color=sex)) +
geom_abline(
aes(intercept=b_a, slope=b_b, color=sex),
data=post[1:40, ],
alpha=.2
) +
scale_x_continuous("height(feet)",
breaks=xlabs-mean(d$height),
labels=xlabs) +
facet_wrap(~sex)
